

Процедура Кнопка1Нажатие(Элемент)
	Если ЗначениеЗаполнено(ИНН) Тогда
		//МассивИНН = Новый Массив;
		//Для к=1 по СтрЧислоСтрок(ИНН) Цикл
		//	МассивИНН.Добавить(СтрПолучитьСтроку(ИНН,к));
		//Конеццикла;	
		МассивИНН=РазложитьСтрокуВМассивПодстрок(ИНН,",");
		//Ответ = ЕГАИС_Транспорт.ЗапросКонтрагентов(МассивИНН,Подразделение);
		Ответ = ЕГАИС_Транспорт.ЗапросКонтрагентов(МассивИНН,Подразделение);
		Сообщить("Запрос контрагентов отправлен в УТМ," + Ответ);
	КонецЕсли;
КонецПроцедуры

Процедура Кнопка2Нажатие(Элемент)
	Если ЗначениеЗаполнено(ИНН) Тогда
		МассивИНН = Новый Массив;
		Для к=1 по СтрЧислоСтрок(ИНН) Цикл
			МассивИНН.Добавить(СтрПолучитьСтроку(ИНН,к));
		Конеццикла;		
		Ответ = ЕГАИС_Транспорт.ЗапросПродукции(МассивИНН,Подразделение);
		Сообщить("Запрос номенклатуры отправлен в УТМ," + Ответ);
    КонецЕсли;
КонецПроцедуры

Процедура Кнопка3Нажатие(Элемент)
	РегистрыСведений.ЕГАИС_Контрагенты.ПолучитьФормуСписка().Открыть();
КонецПроцедуры

Процедура Кнопка4Нажатие(Элемент)
	РегистрыСведений.ЕГАИС_Номенклатура.ПолучитьФормуСписка().Открыть();
КонецПроцедуры

Процедура Кнопка5Нажатие(Элемент)
	Ответ = ЕГАИС_Транспорт.ЗапросОстатков(Подразделение);
	Сообщить("Запрос остатков отправлен в УТМ,"+Ответ);
КонецПроцедуры

Процедура Кнопка6Нажатие(Элемент)
	РегистрыСведений.ЕГАИС_Остатки.ПолучитьФормуСписка().Открыть();
КонецПроцедуры

Процедура УдалитьВхСсылкуНажатие(Элемент)
	ЕГАИС_Транспорт.УдалитьВходящуюСсылку(ТекстСсылки,Подразделение,Истина);
КонецПроцедуры

Процедура Кнопка7Нажатие(Элемент)
	Документы.ЕГАИС_Акт_ПостановкиНаБаланс.ПолучитьФормуСписка().Открыть();
КонецПроцедуры

Процедура Кнопка8Нажатие(Элемент)
	Если ЗначениеЗаполнено(ИНН) Тогда
		МассивИНН = Новый Массив;
		Для к=1 по СтрЧислоСтрок(ИНН) Цикл
			МассивИНН.Добавить(СтрПолучитьСтроку(ИНН,к));
		Конеццикла;		
		Ответ = ЕГАИС_Транспорт.ЗапросПродукцииПоИД(МассивИНН,Подразделение);
		Сообщить("Запрос номенклатуры отправлен в УТМ," + Ответ);
    КонецЕсли;

КонецПроцедуры

Процедура Кнопка9Нажатие(Элемент)
	Если ЗначениеЗаполнено(ИНН) Тогда
		МассивИНН = Новый Массив;
		Для к=1 по СтрЧислоСтрок(ИНН) Цикл
			МассивИНН.Добавить(СтрПолучитьСтроку(ИНН,к));
		Конеццикла;	
		//Ответ = ЕГАИС_Транспорт.ЗапросКонтрагентов(МассивИНН,Подразделение);
		Ответ = ЕГАИС_Транспорт.ЗапросКонтрагентовПоИД(МассивИНН,Подразделение);
		Сообщить("Запрос контрагентов отправлен в УТМ," + Ответ);
	КонецЕсли;

КонецПроцедуры


//KAV

// Функция "расщепляет" строку на подстроки, используя заданный 
//		разделитель. Разделитель может иметь любую длину. 
//		Если в качестве разделителя задан пробел, рядом стоящие пробелы 
//		считаются одним разделителем, а ведущие и хвостовые пробелы параметра Стр
//		игнорируются.
//		Например, 
//		РазложитьСтрокуВМассивПодстрок(",строка 1,,,строка 2", ",") возвратит массив значений из пяти элементов, 
//		три из которых - пустые строки, а 
//		РазложитьСтрокуВМассивПодстрок(" строка1   строка 2", " ") возвратит массив значений из двух элементов
//
//	Параметры: 
//		Стр - 			строка, которую необходимо разложить на подстроки. 
//						Параметр передается по значению.
//		Разделитель - 	строка-разделитель, по умолчанию - запятая.
//
//
//	Возвращаемое значение:
//		массив значений, элементы которого - подстроки
//
Функция РазложитьСтрокуВМассивПодстрок(Знач Стр, Разделитель = ",")
	
	МассивСтрок = Новый Массив();
	Если Разделитель = " " Тогда
		Стр = СокрЛП(Стр);
		Пока 1=1 Цикл
			Поз = Найти(Стр,Разделитель);
			Если Поз=0 Тогда
				МассивСтрок.Добавить(Стр);
				Возврат МассивСтрок;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Стр,Поз-1));
			Стр = СокрЛ(Сред(Стр,Поз));
		КонецЦикла;
	Иначе
		ДлинаРазделителя = СтрДлина(Разделитель);
		Пока 1=1 Цикл
			Поз = Найти(Стр,Разделитель);
			Если Поз=0 Тогда
				МассивСтрок.Добавить(Стр);
				Возврат МассивСтрок;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Стр,Поз-1));
			Стр = Сред(Стр,Поз+ДлинаРазделителя);
		КонецЦикла;
	КонецЕсли;
	
КонецФункции 

Процедура ИНННачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	Форма=Справочники.Контрагенты.ПолучитьФормуВыбора(,ЭтаФорма,ЭтаФорма);
	Форма.ЗакрыватьПриВыборе=Ложь;
	Форма.Открыть();
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	Если ТипЗнч(ЗначениеВыбора)=Тип("СправочникСсылка.Контрагенты") И НЕ ЗначениеВыбора.ЭтоГруппа Тогда
		Если ЗначениеЗаполнено(ИНН) Тогда
			ИНН=ИНН+",";
		КонецЕсли;
		ИНН=ИНН+ЗначениеВыбора.ИНН;
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	Если Не ЗначениеЗаполнено(Подразделение) Тогда
		Подразделение=Справочники.ЕГАИС_Настройки.ПолучитьФормуВыбора().ОткрытьМодально();
		Если Не ЗначениеЗаполнено(Подразделение) Тогда
			Закрыть();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
