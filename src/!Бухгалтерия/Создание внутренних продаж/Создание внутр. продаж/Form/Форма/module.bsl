Процедура ПриОткрытии()
	НачПериода=Константы.ТекущаяГраницаВнутреннихПродаж.Получить();
	НеФормироватьПеремещения=не Константы.ИспользоватьОтветственноеХранение.Получить();
КонецПроцедуры

Процедура КнопкаВыполнитьНажатие(Кнопка)
	ТекПериод=НачПериода;
	Если Не ЗначениеЗаполнено(КонПериода) Тогда
		КонПериода=КонецМесяца(НачПериода);
	КонецЕсли;
	НадоПоказатьОповещение=Истина;
	ЕстьОтбор=ЗначениеЗаполнено(Организация);
	Если Константы.ИспользоватьОтветственноеХранение.Получить()<>(НЕ НеФормироватьПеремещения) Тогда
		Константы.ИспользоватьОтветственноеХранение.Установить(Не НеФормироватьПеремещения);
	КонецЕсли;
	Если ТестовыйРежим Тогда НачатьТранзакцию(); КонецЕсли;
#Область Проверка_корректности_данных_перед_формированием_продаж
	//KAV Проверим что все алкогольные товары есть в ЕГАИС классификаторе
	Запрос = Новый ПостроительЗапроса;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	РеализацияТоваровУслугТовары.Номенклатура
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	               |		ПО РеализацияТоваровУслугТовары.Ссылка = РеализацияТоваровУслуг.Ссылка
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |		ПО РеализацияТоваровУслугТовары.Номенклатура = ЗначенияСвойствОбъектов.Объект
	               |			И (ЗначенияСвойствОбъектов.Свойство = &ЭтоАлкоголь)
	               |ГДЕ
	               |	РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И РеализацияТоваровУслуг.Проведен
	               |	И НЕ РеализацияТоваровУслуг.ВнутреннийДокумент
	               |	И ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, ЛОЖЬ) = ИСТИНА
	               |{ГДЕ
	               |	РеализацияТоваровУслуг.Организация.*}";
	Запрос.Параметры.Вставить("ДатаНачала",		НачалоДня(ТекПериод));
	Запрос.Параметры.Вставить("ДатаОкончания",	КонецДня(ТекПериод));
	Запрос.Параметры.Вставить("ЭтоАлкоголь",	ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("001"));
	Если ЕстьОтбор Тогда
		Запрос.Отбор.Добавить("Организация").Установить(Организация);
	КонецЕсли;
	Запрос.Выполнить();
	Выборка=Запрос.Результат.Выбрать();
	Отказ=Ложь;
	Пока Выборка.Следующий() Цикл
		Параметры=ЕГАИС_ИТИ.ПолучитьПараметрыЕГАИСДляНоменклатуры(Выборка.Номенклатура,Истина);
		Если Параметры=Неопределено Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Для позиции "+Выборка.Номенклатура+" не заданы параметры ЕГАИС",Отказ);
		КонецЕсли;
	КонецЦикла;
	
	//KAV Проверим что все грузополучатели есть
	Запрос = Новый ПостроительЗапроса;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	РеализацияТоваровУслуг.Ссылка,
	               |	РеализацияТоваровУслуг.Контрагент,
	               |	РеализацияТоваровУслуг.Грузополучатель
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЕГАИС_Контрагенты КАК ЕГАИС_Контрагенты
	               |			ПО РеализацияТоваровУслуг.Контрагент = ЕГАИС_Контрагенты.Ссылка
	               |		ПО РеализацияТоваровУслугТовары.Ссылка = РеализацияТоваровУслуг.Ссылка
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |		ПО РеализацияТоваровУслугТовары.Номенклатура = ЗначенияСвойствОбъектов.Объект
	               |			И (ЗначенияСвойствОбъектов.Свойство = &ЭтоАлкоголь)
	               |ГДЕ
	               |	РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И РеализацияТоваровУслуг.Проведен
	               |	И НЕ РеализацияТоваровУслуг.ВнутреннийДокумент
	               |	И ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, ЛОЖЬ) = ИСТИНА
	               |	И ЕГАИС_Контрагенты.Ссылка ЕСТЬ NULL 
	               |{ГДЕ
	               |	РеализацияТоваровУслуг.Организация.*}";
	Запрос.Параметры.Вставить("ДатаНачала",		НачалоДня(ТекПериод));
	Запрос.Параметры.Вставить("ДатаОкончания",	КонецДня(ТекПериод));
	Запрос.Параметры.Вставить("ЭтоАлкоголь",	ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("001"));
	Если ЕстьОтбор Тогда
		Запрос.Отбор.Добавить("Организация").Установить(Организация);
	КонецЕсли;
	Запрос.Выполнить();
	Выборка=Запрос.Результат.Выбрать();
	Отказ=Ложь;
	Пока Выборка.Следующий() Цикл
		ОбщегоНазначения.СообщитьОбОшибке("В документе "+Строка(Выборка.Ссылка)+" контрагент "+Строка(Выборка.Контрагент)+" отсутствует в классификаторе ЕГАИС",Отказ);
	КонецЦикла;
	
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
#КонецОбласти
	
	Запрос = Новый ПостроительЗапроса;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеализацияТоваровУслуг.Ссылка
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	               |ГДЕ
	               |	РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И РеализацияТоваровУслуг.Проведен
	               |	И НЕ РеализацияТоваровУслуг.ВнутреннийДокумент
	               |{ГДЕ
	               |	РеализацияТоваровУслуг.Организация.*}
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	РеализацияТоваровУслуг.Дата";
				   
#Область Ответственное_хранение_НЕ_ИСПОЛЬЗУЕТСЯ
	//ЗапросПеремещений = Новый ПостроительЗапроса;
	//ЗапросПеремещений.Текст="ВЫБРАТЬ
	//                        |	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	//                        |	ПеремещениеТоваров.Ссылка КАК Перемещение
	//                        |ИЗ
	//                        |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	//                        |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	//                        |		ПО (ПеремещениеТоваров.ДокументОснование = РеализацияТоваровУслуг.Ссылка)
	//                        |			И (ПеремещениеТоваров.Проведен)
	//                        |			И (ПеремещениеТоваров.ЭтоВозврат)
	//                        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СобственныеКонтрагенты КАК СобственныеКонтрагенты
	//                        |		ПО РеализацияТоваровУслуг.Контрагент = СобственныеКонтрагенты.Контрагент
	//                        |ГДЕ
	//                        |	РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	//                        |	И РеализацияТоваровУслуг.ВнутреннийДокумент
	//                        |	И РеализацияТоваровУслуг.Проведен
	//                        |{ГДЕ
	//                        |	СобственныеКонтрагенты.Организация.*}";
#КонецОбласти
	Если ЕстьОтбор Тогда
		Запрос.Отбор.Добавить("Организация").Установить(Организация);
		//ЗапросПеремещений.Отбор.Добавить("Организация").Установить(Организация);
	КонецЕсли;	
	
	Пока НачалоДня(ТекПериод)<=НачалоДня(КонПериода) Цикл
		//Выборка всех рту за период
		ЭлементыФормы.НадписьТекущийПериод.Заголовок=Формат(ТекПериод,"ДЛФ=DD");
#Область Внутренние_продажи		
		Запрос.Параметры.Вставить("ДатаНачала", НачалоДня(ТекПериод));
		Запрос.Параметры.Вставить("ДатаОкончания", КонецДня(ТекПериод));

		Результат = Запрос.ПолучитьЗапрос().Выполнить();
		
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		ЭлементыФормы.Индикатор.МаксимальноеЗначение=ВыборкаДетальныеЗаписи.Количество();
		Индикатор=1;
		Состояние("Формируем внутренние продажи");
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Рез=МодульВнутреннихПродаж.ВнутренниеПродажи(ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект(),Ложь);
			МодульВнутреннихПродаж.СоздатьДокументыВнутрПродажи(ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект(),Рез.ТаблицаДокументов);
			Индикатор=Индикатор+1;
		КонецЦикла;
#КонецОбласти

#Область Ответственное_хранение_НЕ_ИСПОЛЬЗУЕТСЯ
	//Если НЕ НеФормироватьПеремещения Тогда

		//Состояние("Формируем перемещения с ответственного хранения");
		//ЗапросПеремещений.Параметры.Вставить("ДатаНачала", НачалоДня(ТекПериод));
		//ЗапросПеремещений.Параметры.Вставить("ДатаОкончания", КонецДня(ТекПериод));

		//Результат = ЗапросПеремещений.ПолучитьЗапрос().Выполнить();
		//
		//ВыборкаДетальныеЗаписи = Результат.Выбрать();
		//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//	Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Перемещение) Тогда
		//		Об=ВыборкаДетальныеЗаписи.Перемещение.ПолучитьОбъект();
		//		Об.Товары.Очистить();
		//	Иначе
		//		Об=Документы.ПеремещениеТоваров.СоздатьДокумент();
		//		Об.ЭтоВозврат=Истина;
		//	КонецЕсли;
		//	Об.Заполнить(ВыборкаДетальныеЗаписи.Реализация);
		//	Об.Дата=ВыборкаДетальныеЗаписи.Реализация.Дата-2;
		//	Об.Комментарий="Создан для внутренних продаж";
		//	Об.Записать(РежимЗаписиДокумента.Проведение);
		//	Об.СформироватьПарныйДокументДляХранения();
		//КонецЦикла;
	//КонецЕсли;
#КонецОбласти

		Если Не ЕстьОтбор Тогда
			Константы.ТекущаяГраницаВнутреннихПродаж.Установить(КонецДня(ТекПериод)+2);
		ИначеЕсли НадоПоказатьОповещение Тогда 
			ПоказатьОповещениеПользователя("Внутренние продажи формировались с отбором по организации. Обновление гранцы не выполнено");
			НадоПоказатьОповещение=Ложь;
		КонецЕсли;		
		ТекПериод=КонецДня(ТекПериод)+2;
		ОбработкаПрерыванияПользователя();
	КонецЦикла;
	Состояние("");
	НачПериода=Константы.ТекущаяГраницаВнутреннихПродаж.Получить();
	Если ТестовыйРежим и ТранзакцияАктивна() Тогда ОтменитьТранзакцию() КонецЕсли;
КонецПроцедуры

Процедура ОсновныеДействияФормыСдвинутьГраницу(Кнопка)
Перем НоваяДата;
	Если ВвестиДату(НоваяДата,"Введите новую границу",ЧастиДаты.Дата) Тогда
		//Если НоваяДата<Константы.ТекущаяГраницаВнутреннихПродаж.Получить() Тогда
			Константы.ТекущаяГраницаВнутреннихПродаж.Установить(НачалоДня(НоваяДата));
		//КонецЕсли;
	КонецЕсли;
	НачПериода=Константы.ТекущаяГраницаВнутреннихПродаж.Получить();
КонецПроцедуры
	
