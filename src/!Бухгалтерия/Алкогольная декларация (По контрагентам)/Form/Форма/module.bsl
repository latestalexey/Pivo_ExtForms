Функция УбратьЗапрещенныеЗнаки(ВхТекст)
	СтрТемп=ВхТекст;
	СтрТемп=СтрЗаменить(СтрТемп,"\","");
	СтрТемп=СтрЗаменить(СтрТемп,"/","");
	СтрТемп=СтрЗаменить(СтрТемп,"|","");
	СтрТемп=СтрЗаменить(СтрТемп,":","");
	СтрТемп=СтрЗаменить(СтрТемп,"*","");
	СтрТемп=СтрЗаменить(СтрТемп,"?","");
	СтрТемп=СтрЗаменить(СтрТемп,"""","");
	СтрТемп=СтрЗаменить(СтрТемп,"<","");
	СтрТемп=СтрЗаменить(СтрТемп,">","");
	Возврат СтрТемп;
КонецФункции

Процедура КнопкаВыполнитьНажатие(Кнопка)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КорСчет", 			ПланыСчетов.Хозрасчетный.Продажи);
	Запрос.УстановитьПараметр("ЮрАдрес",			Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	Запрос.УстановитьПараметр("Счет41", 			ПланыСчетов.Хозрасчетный.Товары);
	Запрос.УстановитьПараметр("ВидСубконто", 		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("СписокОрганизаций", 	Организация);
	Запрос.УстановитьПараметр("ДатаНач", 			НачПериода);
	Запрос.УстановитьПараметр("ДатаКон", 			КонецДня(КонПериода));
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	ХозрасчетныйОбороты.Регистратор.Контрагент КАК Контрагент
	             |ИЗ
	             |	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Регистратор, Счет В ИЕРАРХИИ (&Счет41), &ВидСубконто, Организация В (&СписокОрганизаций), КорСчет В ИЕРАРХИИ (&КорСчет), ) КАК ХозрасчетныйОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбАлкогольнойПродукции КАК СведенияОбАлкогольнойПродукции
	             |		ПО ХозрасчетныйОбороты.Субконто1 = СведенияОбАлкогольнойПродукции.Номенклатура
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	Контрагент";
	Выборка=Запрос.Выполнить().Выбрать();
	ЭлементыФормы.Индикатор.МаксимальноеЗначение=Выборка.Количество()-1;
	Индикатор=0;
	Пока Выборка.Следующий() Цикл		
		Если ЗначениеЗаполнено(Выборка.Контрагент) Тогда
			Декл=ПечатьДекларации(Выборка.Контрагент);
			Декл.Записать(Каталог+"\"+УбратьЗапрещенныеЗнаки(Выборка.Контрагент.Наименование)+?(ЗначениеЗаполнено(Подразделение),"_"+УбратьЗапрещенныеЗнаки(Подразделение.Наименование)+"_","")+"("+ПредставлениеПериода(НачПериода,КонецДня(КонПериода))+").xls",ТипФайлаТабличногоДокумента.XLS);
			Индикатор=Индикатор+1;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры


Функция ПечатьДекларации(Контрагент)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КорСчет", 			ПланыСчетов.Хозрасчетный.Продажи);
	Запрос.УстановитьПараметр("ЮрАдрес",			Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	Запрос.УстановитьПараметр("Счет41", 			ПланыСчетов.Хозрасчетный.Товары);
	Запрос.УстановитьПараметр("ВидСубконто", 		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("СписокОрганизаций", 	Организация);
	Запрос.УстановитьПараметр("ДатаНач", 			НачПериода);
	Запрос.УстановитьПараметр("ДатаКон", 			КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Контрагент",			Контрагент);
	Запрос.УстановитьПараметр("Подразделение",		Подразделение);
	
	Запрос.Текст =
#Область Запрос_данных //14.10.2016 14:22:06
	"ВЫБРАТЬ
	|	СведенияОбАлкогольнойПродукции.НаименованиеВида169 КАК П000010000101,
	|	СведенияОбАлкогольнойПродукции.КодВида169 КАК П000010000102,
	|	ВЫБОР
	|		КОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Импортер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ВЫРАЗИТЬ(СведенияОбАлкогольнойПродукции.Номенклатура.Производитель.НаименованиеПолное КАК СТРОКА(200))
	|		ИНАЧЕ ВЫРАЗИТЬ(СведенияОбАлкогольнойПродукции.Номенклатура.Импортер.НаименованиеПолное КАК СТРОКА(200))
	|	КОНЕЦ КАК П000010000103,
	|	ВЫБОР
	|		КОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Импортер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Производитель.ИНН
	|		ИНАЧЕ СведенияОбАлкогольнойПродукции.Номенклатура.Импортер.ИНН
	|	КОНЕЦ КАК П000010000104,
	|	ВЫБОР
	|		КОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Импортер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Производитель.КПП
	|		ИНАЧЕ СведенияОбАлкогольнойПродукции.Номенклатура.Импортер.КПП
	|	КОНЕЦ КАК П000010000105,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.Регистратор.Грузополучатель ЕСТЬ НЕ NULL 
	|				И ХозрасчетныйОбороты.Регистратор.Контрагент.КПП <> ХозрасчетныйОбороты.Регистратор.Грузополучатель.КПП
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор.Грузополучатель.НаименованиеПолное КАК СТРОКА(200))
	|		ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор.Контрагент.НаименованиеПолное КАК СТРОКА(200))
	|	КОНЕЦ КАК П000010000106,
	|	ХозрасчетныйОбороты.Регистратор.Контрагент.ИНН КАК П000010000108,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.Регистратор.Грузополучатель ЕСТЬ НЕ NULL 
	|				И ХозрасчетныйОбороты.Регистратор.Контрагент.КПП <> ХозрасчетныйОбороты.Регистратор.Грузополучатель.КПП
	|			ТОГДА ХозрасчетныйОбороты.Регистратор.Грузополучатель.КПП
	|		ИНАЧЕ ХозрасчетныйОбороты.Регистратор.Контрагент.КПП
	|	КОНЕЦ КАК П000010000109,
	|	"""" КАК П000010000110,
	|	"""" КАК П000010000111,
	|	"""" КАК П000010000113,
	|	"""" КАК П000010000114,
	|	"""" КАК П000010000115,
	|	ХозрасчетныйОбороты.Регистратор.Дата КАК П000010000117,
	|	ХозрасчетныйОбороты.Регистратор.Номер КАК П000010000118,
	|	"""" КАК П000010000119,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|				ТОГДА 0
	|			ИНАЧЕ ХозрасчетныйОбороты.КоличествоОборотКт * СведенияОбАлкогольнойПродукции.КоэффПересчетаДал
	|		КОНЕЦ) КАК П000010000120,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.Регистратор.Грузополучатель ЕСТЬ НЕ NULL 
	|				И ХозрасчетныйОбороты.Регистратор.Контрагент.КПП <> ХозрасчетныйОбороты.Регистратор.Грузополучатель.КПП
	|			ТОГДА ХозрасчетныйОбороты.Регистратор.Грузополучатель
	|		ИНАЧЕ ХозрасчетныйОбороты.Регистратор.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ХозрасчетныйОбороты.Подразделение
	|ИЗ
	|	РегистрСведений.СведенияОбАлкогольнойПродукции КАК СведенияОбАлкогольнойПродукции
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(
	|				&ДатаНач,
	|				&ДатаКон,
	|				Регистратор,
	|				Счет В ИЕРАРХИИ (&Счет41),
	|				&ВидСубконто,
	|				Организация В (&СписокОрганизаций)
	|					И Подразделение = &Подразделение,
	|				КорСчет В ИЕРАРХИИ (&КорСчет),
	|				) КАК ХозрасчетныйОбороты
	|		ПО СведенияОбАлкогольнойПродукции.Номенклатура = ХозрасчетныйОбороты.Субконто1
	|ГДЕ
	|	ХозрасчетныйОбороты.КоличествоОборотКт > 0
	|	И ХозрасчетныйОбороты.Регистратор.Контрагент = &Контрагент
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Регистратор.Контрагент,
	|	СведенияОбАлкогольнойПродукции.КодВида169,
	|	СведенияОбАлкогольнойПродукции.НаименованиеВида169,
	|	ВЫБОР
	|		КОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Импортер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ВЫРАЗИТЬ(СведенияОбАлкогольнойПродукции.Номенклатура.Производитель.НаименованиеПолное КАК СТРОКА(200))
	|		ИНАЧЕ ВЫРАЗИТЬ(СведенияОбАлкогольнойПродукции.Номенклатура.Импортер.НаименованиеПолное КАК СТРОКА(200))
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Импортер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Производитель.ИНН
	|		ИНАЧЕ СведенияОбАлкогольнойПродукции.Номенклатура.Импортер.ИНН
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Импортер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Производитель.КПП
	|		ИНАЧЕ СведенияОбАлкогольнойПродукции.Номенклатура.Импортер.КПП
	|	КОНЕЦ,
	|	ХозрасчетныйОбороты.Регистратор.Номер,
	|	ХозрасчетныйОбороты.Регистратор.Дата,
	|	ХозрасчетныйОбороты.Регистратор.Контрагент.ИНН,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.Регистратор.Грузополучатель ЕСТЬ НЕ NULL 
	|				И ХозрасчетныйОбороты.Регистратор.Контрагент.КПП <> ХозрасчетныйОбороты.Регистратор.Грузополучатель.КПП
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор.Грузополучатель.НаименованиеПолное КАК СТРОКА(200))
	|		ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор.Контрагент.НаименованиеПолное КАК СТРОКА(200))
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.Регистратор.Грузополучатель ЕСТЬ НЕ NULL 
	|				И ХозрасчетныйОбороты.Регистратор.Контрагент.КПП <> ХозрасчетныйОбороты.Регистратор.Грузополучатель.КПП
	|			ТОГДА ХозрасчетныйОбороты.Регистратор.Грузополучатель.КПП
	|		ИНАЧЕ ХозрасчетныйОбороты.Регистратор.Контрагент.КПП
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.Регистратор.Грузополучатель ЕСТЬ НЕ NULL 
	|				И ХозрасчетныйОбороты.Регистратор.Контрагент.КПП <> ХозрасчетныйОбороты.Регистратор.Грузополучатель.КПП
	|			ТОГДА ХозрасчетныйОбороты.Регистратор.Грузополучатель
	|		ИНАЧЕ ХозрасчетныйОбороты.Регистратор.Контрагент
	|	КОНЕЦ,
	|	ХозрасчетныйОбороты.Подразделение
	|
	|УПОРЯДОЧИТЬ ПО
	|	П000010000102,
	|	П000010000103,
	|	П000010000106
	|ИТОГИ
	|	СУММА(П000010000120)
	|ПО
	|	ОБЩИЕ,
	|	Контрагент,
	|	П000010000103";
#КонецОбласти
	Свед=УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация,ТекущаяДата());
	ВыборкаИтогов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаИтогов.Следующий();
	ВыборкаКонтрагентов=ВыборкаИтогов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	НС = 1;
	Стр=Новый Структура("Организация,Номер",ЭтотОбъект.Организация,0);
	Отбор=Новый Структура("Поставщик");
	
	
	ТабДок=Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати="ПАРАМЕТРЫ_ПЕЧАТИ_ДЕКЛАРАЦИЯ_6";
	
	Макет=ПолучитьМакет("ФормаОтчета2012Кв3_Декларация");
	Область=Макет.ПолучитьОбласть("ШапкаДекларация");
	Если ЗначениеЗаполнено(Подразделение) Тогда
		Свед=СведенияОПодразделении(Подразделение);
	иначе
		Свед=СведенияОПодразделении(Организация);
	КонецЕсли;
	Орг=Свед.Наименование+", ИНН "+Организация.ИНН+", КПП "+Свед.КПП+", "+Свед.Адрес;
	//Область.Параметры.Организации=ФормированиеПечатныхФорм.ОписаниеОрганизации(Свед, "НаименованиеДляПечатныхФорм,ИНН,КПП,ФактическийАдрес");
	Область.Параметры.Организации=Орг; 
	ТабДок.Вывести(Область);
	Область=Макет.ПолучитьОбласть("СтрокаДанных");
	
	Пока ВыборкаКонтрагентов.Следующий() Цикл
		ВыборкаПроизводителей=ВыборкаКонтрагентов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		СведенияОКонтрагенте    = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ВыборкаКонтрагентов.Контрагент);
		Адрес = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКонтрагенте, "ЮридическийАдрес,");
		Пока ВыборкаПроизводителей.Следующий() Цикл
			СтрокаЗапроса=ВыборкаПроизводителей.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока СтрокаЗапроса.Следующий() Цикл
				СтрокаЗаполнения=Макет.ПолучитьОбласть("СтрокаДанных");
				СтрокаЗаполнения.Параметры.П000010000100 = НС;
				ЗаполнитьЗначенияСвойств(СтрокаЗаполнения.Параметры, СтрокаЗапроса);
				Стр.Номер=СтрокаЗапроса.П000010000118;
				СтрокаЗаполнения.Параметры.П000010000118=ОбщегоНазначения.ПолучитьНомерНаПечать(Стр);
				СтрокаЗаполнения.Параметры.П000010000107=Адрес;
				
				Отбор.Поставщик=ВыборкаКонтрагентов.Контрагент;
				СвОЛиц=РегистрыСведений.ЛицензииПоставщиковАлкогольнойПродукции.СрезПоследних(КонПериода,Отбор);
				Если СвОЛиц.Количество() Тогда
					Лиц=СвОЛиц.Получить(0);
					СерияНомер=ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(Лиц.СерияНомер," ");
					СтрокаЗаполнения.Параметры.П000010000121=СерияНомер[0];
					СтрокаЗаполнения.Параметры.П000010000122=СерияНомер[1];
					СтрокаЗаполнения.Параметры.П000010000111=Лиц.Период;
					СтрокаЗаполнения.Параметры.П000010000112=Лиц.ДатаОкончания;
					СтрокаЗаполнения.Параметры.П000010000113=Лиц.КемВыдана;
				КонецЕсли;
				СтрокаЗаполнения.Параметры.П000010000115=ПривестиНомерНаПечать(СтрокаЗапроса.П000010000115);
				СтрокаЗаполнения.Параметры.П000010000118=ПривестиНомерНаПечать(СтрокаЗапроса.П000010000118);
				ТабДок.Вывести(СтрокаЗаполнения);
				НС = НС + 1;
			КонецЦикла;
			СтрокаЗаполнения=Макет.ПолучитьОбласть("Подитого");
			ЗаполнитьЗначенияСвойств(СтрокаЗаполнения.Параметры,ВыборкаПроизводителей);
			ТабДок.Вывести(СтрокаЗаполнения);
		КонецЦикла;
		СтрокаЗаполнения=Макет.ПолучитьОбласть("Подитого");
		ЗаполнитьЗначенияСвойств(СтрокаЗаполнения.Параметры,ВыборкаКонтрагентов);
		СтрокаЗаполнения.Параметры.П000010000105=ВыборкаКонтрагентов.Контрагент.КПП;
		ТабДок.Вывести(СтрокаЗаполнения);
	КонецЦикла;
	СтрокаЗаполнения=Макет.ПолучитьОбласть("Итого");
	ЗаполнитьЗначенияСвойств(СтрокаЗаполнения.Параметры,ВыборкаИтогов);
	ТабДок.Вывести(СтрокаЗаполнения);
	
	//Вывод итого по производителям
	
	Запрос.Текст = 
	
#Область Запрос_общий //14.10.2016 14:22:49
		"ВЫБРАТЬ
		|	СведенияОбАлкогольнойПродукции.КодВида169 КАК П000010000102,
		|	ВЫБОР
		|		КОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Импортер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ВЫРАЗИТЬ(СведенияОбАлкогольнойПродукции.Номенклатура.Производитель.НаименованиеПолное КАК СТРОКА(200))
		|		ИНАЧЕ ВЫРАЗИТЬ(СведенияОбАлкогольнойПродукции.Номенклатура.Импортер.НаименованиеПолное КАК СТРОКА(200))
		|	КОНЕЦ КАК П000010000103,
		|	СУММА(ВЫБОР
		|			КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
		|				ТОГДА 0
		|			ИНАЧЕ ХозрасчетныйОбороты.КоличествоОборотКт * СведенияОбАлкогольнойПродукции.КоэффПересчетаДал
		|		КОНЕЦ) КАК П000010000120
		|ИЗ
		|	РегистрСведений.СведенияОбАлкогольнойПродукции КАК СведенияОбАлкогольнойПродукции
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Регистратор, Счет В ИЕРАРХИИ (&Счет41), &ВидСубконто, Организация В (&СписокОрганизаций) и подразделение=&Подразделение, КорСчет В ИЕРАРХИИ (&КорСчет), ) КАК ХозрасчетныйОбороты
		|		ПО СведенияОбАлкогольнойПродукции.Номенклатура = ХозрасчетныйОбороты.Субконто1
		|ГДЕ
		|	ХозрасчетныйОбороты.КоличествоОборотКт > 0
		|	И ХозрасчетныйОбороты.Регистратор.Контрагент = &Контрагент
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Регистратор.Контрагент,
		|	СведенияОбАлкогольнойПродукции.КодВида169,
		|	ВЫБОР
		|		КОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Импортер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ВЫРАЗИТЬ(СведенияОбАлкогольнойПродукции.Номенклатура.Производитель.НаименованиеПолное КАК СТРОКА(200))
		|		ИНАЧЕ ВЫРАЗИТЬ(СведенияОбАлкогольнойПродукции.Номенклатура.Импортер.НаименованиеПолное КАК СТРОКА(200))
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	П000010000102
		|ИТОГИ
		|	СУММА(П000010000120)
		|ПО
		|	П000010000103,
		|	П000010000102";
#КонецОбласти

	Результат = Запрос.Выполнить();

	ВыборкаП000010000103 = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаП000010000103.Следующий() Цикл
		// Вставить обработку выборки ВыборкаП000010000103

		ВыборкаП000010000102 = ВыборкаП000010000103.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаП000010000102.Следующий() Цикл
			СтрокаЗаполнения=Макет.ПолучитьОбласть("ИтогоПроизводительКод");
			ЗаполнитьЗначенияСвойств(СтрокаЗаполнения.Параметры,ВыборкаП000010000102);
			ТабДок.Вывести(СтрокаЗаполнения);
		КонецЦикла;
	КонецЦикла;
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
	//Возвраты
	Запрос.Текст =
#Область Запрос_Возвраты //14.10.2016 14:24:05
	"ВЫБРАТЬ
	|	СведенияОбАлкогольнойПродукции.НаименованиеВида169 КАК П000010000101,
	|	СведенияОбАлкогольнойПродукции.КодВида169 КАК П000010000102,
	|	ВЫБОР
	|		КОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Импортер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ВЫРАЗИТЬ(СведенияОбАлкогольнойПродукции.Номенклатура.Производитель.НаименованиеПолное КАК СТРОКА(200))
	|		ИНАЧЕ ВЫРАЗИТЬ(СведенияОбАлкогольнойПродукции.Номенклатура.Импортер.НаименованиеПолное КАК СТРОКА(200))
	|	КОНЕЦ КАК П000010000103,
	|	ВЫБОР
	|		КОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Импортер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Производитель.ИНН
	|		ИНАЧЕ СведенияОбАлкогольнойПродукции.Номенклатура.Импортер.ИНН
	|	КОНЕЦ КАК П000010000104,
	|	ВЫБОР
	|		КОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Импортер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Производитель.КПП
	|		ИНАЧЕ СведенияОбАлкогольнойПродукции.Номенклатура.Импортер.КПП
	|	КОНЕЦ КАК П000010000105,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор.Контрагент.НаименованиеПолное КАК СТРОКА(200)) КАК П000010000106,
	|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(100)) КАК П000010000107,
	|	ХозрасчетныйОбороты.Регистратор.Контрагент.ИНН КАК П000010000108,
	|	ХозрасчетныйОбороты.Регистратор.Контрагент.КПП КАК П000010000109,
	|	"""" КАК П000010000110,
	|	"""" КАК П000010000111,
	|	"""" КАК П000010000113,
	|	"""" КАК П000010000114,
	|	"""" КАК П000010000115,
	|	-ХозрасчетныйОбороты.КоличествоОборотКт * СведенияОбАлкогольнойПродукции.КоэффПересчетаДал КАК П000010000116,
	|	ХозрасчетныйОбороты.Регистратор.ДатаВходящегоДокумента КАК П000010000117,
	|	ХозрасчетныйОбороты.Регистратор.НомерВходящегоДокумента КАК П000010000118,
	|	"""" КАК П000010000119,
	|	СУММА(-ХозрасчетныйОбороты.КоличествоОборотКт * СведенияОбАлкогольнойПродукции.КоэффПересчетаДал) КАК П000010000120,
	|	ХозрасчетныйОбороты.Регистратор.Контрагент КАК Контрагент
	|ИЗ
	|	РегистрСведений.СведенияОбАлкогольнойПродукции КАК СведенияОбАлкогольнойПродукции
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Регистратор, Счет В ИЕРАРХИИ (&Счет41), &ВидСубконто, Организация В (&СписокОрганизаций) и подразделение=&Подразделение, КорСчет В ИЕРАРХИИ (&КорСчет), ) КАК ХозрасчетныйОбороты
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|			ПО ХозрасчетныйОбороты.Регистратор.Контрагент = КонтактнаяИнформация.Объект
	|				И (КонтактнаяИнформация.Вид = &ЮрАдрес)
	|		ПО СведенияОбАлкогольнойПродукции.Номенклатура = ХозрасчетныйОбороты.Субконто1
	|ГДЕ
	|	ХозрасчетныйОбороты.Регистратор.Контрагент = &Контрагент
	|	И ХозрасчетныйОбороты.КоличествоОборотКт < 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Регистратор.Контрагент,
	|	СведенияОбАлкогольнойПродукции.КодВида169,
	|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(100)),
	|	СведенияОбАлкогольнойПродукции.НаименованиеВида169,
	|	ВЫБОР
	|		КОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Импортер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ВЫРАЗИТЬ(СведенияОбАлкогольнойПродукции.Номенклатура.Производитель.НаименованиеПолное КАК СТРОКА(200))
	|		ИНАЧЕ ВЫРАЗИТЬ(СведенияОбАлкогольнойПродукции.Номенклатура.Импортер.НаименованиеПолное КАК СТРОКА(200))
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Импортер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Производитель.ИНН
	|		ИНАЧЕ СведенияОбАлкогольнойПродукции.Номенклатура.Импортер.ИНН
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Импортер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА СведенияОбАлкогольнойПродукции.Номенклатура.Производитель.КПП
	|		ИНАЧЕ СведенияОбАлкогольнойПродукции.Номенклатура.Импортер.КПП
	|	КОНЕЦ,
	|	ХозрасчетныйОбороты.Регистратор.Контрагент.ИНН,
	|	-ХозрасчетныйОбороты.КоличествоОборотКт * СведенияОбАлкогольнойПродукции.КоэффПересчетаДал,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор.Контрагент.НаименованиеПолное КАК СТРОКА(200)),
	|	ХозрасчетныйОбороты.Регистратор.Контрагент.КПП,
	|	ХозрасчетныйОбороты.Регистратор.ДатаВходящегоДокумента,
	|	ХозрасчетныйОбороты.Регистратор.НомерВходящегоДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	П000010000102,
	|	П000010000106
	|ИТОГИ
	|	СУММА(П000010000116),
	|	СУММА(П000010000120)
	|ПО
	|	ОБЩИЕ,
	|	Контрагент";
#КонецОбласти
	
	ВыборкаИтогов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаИтогов.Следующий();
	ВыборкаКонтрагентов=ВыборкаИтогов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	НС = 1;
	Стр=Новый Структура("Организация,Номер",ЭтотОбъект.Организация,0);
	Отбор=Новый Структура("Поставщик");
	
	
	Область=Макет.ПолучитьОбласть("ШапкаВозврат");
	Область.Параметры.Организации=Орг;
	ТабДок.Вывести(Область);
	Область=Макет.ПолучитьОбласть("СтрокаДанных");
	
	Пока ВыборкаКонтрагентов.Следующий() Цикл
		
		СведенияОКонтрагенте    = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ВыборкаКонтрагентов.Контрагент);
		Адрес = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКонтрагенте, "ФактическийАдрес,");
		СтрокаЗапроса=ВыборкаКонтрагентов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока СтрокаЗапроса.Следующий() Цикл
			СтрокаЗаполнения=Макет.ПолучитьОбласть("СтрокаДанных");
			СтрокаЗаполнения.Параметры.П000010000100 = НС;
			ЗаполнитьЗначенияСвойств(СтрокаЗаполнения.Параметры, СтрокаЗапроса);
			//Стр.Номер=СтрокаЗапроса.П000010000118;
			//СтрокаЗаполнения.Параметры.П000010000118=ОбщегоНазначения.ПолучитьНомерНаПечать(Стр);
			СтрокаЗаполнения.Параметры.П000010000107=Адрес;
			
			Отбор.Поставщик=ВыборкаКонтрагентов.Контрагент;
			СвОЛиц=РегистрыСведений.ЛицензииПоставщиковАлкогольнойПродукции.СрезПоследних(КонПериода,Отбор);
			Если СвОЛиц.Количество() Тогда
				Лиц=СвОЛиц.Получить(0);
				СерияНомер=ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(Лиц.СерияНомер," ");
				СтрокаЗаполнения.Параметры.П000010000121=СерияНомер[0];
				СтрокаЗаполнения.Параметры.П000010000122=СерияНомер[1];
				СтрокаЗаполнения.Параметры.П000010000111=Лиц.Период;
				СтрокаЗаполнения.Параметры.П000010000112=Лиц.ДатаОкончания;
				СтрокаЗаполнения.Параметры.П000010000113=Лиц.КемВыдана;
			КонецЕсли;
			СтрокаЗаполнения.Параметры.П000010000115=ПривестиНомерНаПечать(СтрокаЗапроса.П000010000115);
			СтрокаЗаполнения.Параметры.П000010000118=ПривестиНомерНаПечать(СтрокаЗапроса.П000010000118);
			ТабДок.Вывести(СтрокаЗаполнения);
			НС = НС + 1;
		КонецЦикла;
		СтрокаЗаполнения=Макет.ПолучитьОбласть("Итого");
		ЗаполнитьЗначенияСвойств(СтрокаЗаполнения.Параметры,ВыборкаКонтрагентов);
		ТабДок.Вывести(СтрокаЗаполнения);
	КонецЦикла;
	СтрокаЗаполнения=Макет.ПолучитьОбласть("Итого");
	ЗаполнитьЗначенияСвойств(СтрокаЗаполнения.Параметры,ВыборкаИтогов);
	ТабДок.Вывести(СтрокаЗаполнения);
	
	
	Возврат ТабДок;
КонецФункции

Функция ПривестиНомерНаПечать(Номер)
	ТемпНомер=Номер;
	Если ЗначениеЗаполнено(ТемпНомер) Тогда
		Пока НЕ ((Лев(ТемпНомер,1)>="1" И Лев(ТемпНомер,1)<="9")) Цикл
			ТемпНомер=Сред(ТемпНомер,2);
		КонецЦикла;
		Возврат ТемпНомер;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции


Процедура КаталогНачалоВыбора(Элемент, СтандартнаяОбработка)
	Диалог=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Каталог=Каталог;
	Диалог.Заголовок="Выберите каталог для сохранения файлов деклараций";
	Если Диалог.Выбрать() Тогда
		Каталог=Диалог.Каталог;
	КонецЕсли;
		
	
КонецПроцедуры
//Андрей
Функция СведенияОПодразделении(Подразделение)
	
	ИДКонфигурации = РегламентированнаяОтчетность.ИДКонфигурации();
	
	ЭлементыАдреса = Новый Структура();
	ЭлементыАдреса.Вставить("Индекс",          "");
	ЭлементыАдреса.Вставить("КодРегиона",          "");
	ЭлементыАдреса.Вставить("Район",           "");
	ЭлементыАдреса.Вставить("Город",           "");
	ЭлементыАдреса.Вставить("НаселенныйПункт", "");
	ЭлементыАдреса.Вставить("Улица",           "");
	ЭлементыАдреса.Вставить("Дом",             "");
	ЭлементыАдреса.Вставить("Корпус",          "");
	ЭлементыАдреса.Вставить("Квартира",        "");
	ЭлементыАдреса.Вставить("ТипДома",         "");
	ЭлементыАдреса.Вставить("ТипКорпуса",      "");
	ЭлементыАдреса.Вставить("ТипКвартиры",     "");
	Адрес="";
	
	Если Не ЗначениеЗаполнено(Подразделение) Тогда
		
		Возврат Новый Структура("Наименование, КПП, Адрес, ЭлементыАдреса", "", "", "", ЭлементыАдреса);
		
	ИначеЕсли ТипЗнч(Подразделение) = Тип("СправочникСсылка.Организации") Тогда
		
		Если ИДКонфигурации = "УПП" ИЛИ ИДКонфигурации = "КА" Тогда
			СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Подразделение, ТекущаяДата(), Ложь);
		Иначе
			СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Подразделение);
		КонецЕсли;
		
		ПолучитьСведенияОбАдресе(Подразделение, Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации,Адрес,ЭлементыАдреса);
		
		Возврат Новый Структура("Наименование, КПП, Адрес, ЭлементыАдреса", СведенияОбОрганизации.ПолноеНаименование, СведенияОбОрганизации.КПП, Адрес, ЭлементыАдреса);
		
	ИначеЕсли ТипЗнч(Подразделение) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
		
		Наименование = Подразделение.НаименованиеПолное;
		КПП = ?(ЗначениеЗаполнено(Подразделение.РегистрацияВИФНС), Подразделение.РегистрацияВИФНС.КПП, Подразделение.КПП);
		Адрес = "";
		
		ПолучитьСведенияОбАдресе(Подразделение,Справочники.ВидыКонтактнойИнформации.ФактАдресПодразделенияОрганизации,Адрес,ЭлементыАдреса);
		
		Возврат Новый Структура("Наименование, КПП, Адрес, ЭлементыАдреса", Наименование, КПП, Адрес, ЭлементыАдреса);
		
	Иначе
		
		Возврат Новый Структура("Наименование, КПП, Адрес, ЭлементыАдреса", "", "", "", ЭлементыАдреса);
		
	КонецЕсли;
	
КонецФункции

Процедура ПолучитьСведенияОбАдресе(Объект,ТипАдрес,Адрес,ЭлементыАдреса)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("Тип"   , Перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.УстановитьПараметр("Вид"   , ТипАдрес);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	               |	КонтактнаяИнформация.Представление,
	               |	КонтактнаяИнформация.Поле1,
	               |	КонтактнаяИнформация.Поле2,
	               |	КонтактнаяИнформация.Поле3,
	               |	КонтактнаяИнформация.Поле4,
	               |	КонтактнаяИнформация.Поле5,
	               |	КонтактнаяИнформация.Поле6,
	               |	КонтактнаяИнформация.Поле7,
	               |	КонтактнаяИнформация.Поле8,
	               |	КонтактнаяИнформация.Поле9,
	               |	КонтактнаяИнформация.ТипДома,
	               |	КонтактнаяИнформация.ТипКорпуса,
	               |	КонтактнаяИнформация.ТипКвартиры
	               |ИЗ
	               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |ГДЕ
	               |	КонтактнаяИнформация.Объект = &Объект
	               |	И КонтактнаяИнформация.Тип = &Тип
	               |	И КонтактнаяИнформация.Вид = &Вид";
		
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		КонтактнаяИнформация = РезультатЗапроса.Выгрузить()[0];
		Адрес = КонтактнаяИнформация.Представление;
		
		ЭлементыАдреса.Индекс          = КонтактнаяИнформация.Поле1;
		ЭлементыАдреса.КодРегиона      = РегламентированнаяОтчетность.КодРегионаПоНазванию(КонтактнаяИнформация.Поле2);
		ЭлементыАдреса.Район           = КонтактнаяИнформация.Поле3;
		ЭлементыАдреса.Город           = КонтактнаяИнформация.Поле4;
		ЭлементыАдреса.НаселенныйПункт = КонтактнаяИнформация.Поле5;
		ЭлементыАдреса.Улица           = КонтактнаяИнформация.Поле6;
		ЭлементыАдреса.Дом             = КонтактнаяИнформация.Поле7;
		ЭлементыАдреса.Корпус          = КонтактнаяИнформация.Поле8;
		ЭлементыАдреса.Квартира        = КонтактнаяИнформация.Поле9;
		ЭлементыАдреса.ТипДома         = КонтактнаяИнформация.ТипДома;
		ЭлементыАдреса.ТипКорпуса      = КонтактнаяИнформация.ТипКорпуса;
		ЭлементыАдреса.ТипКвартиры     = КонтактнаяИнформация.ТипКвартиры;
	Иначе
		Адрес = "";
	КонецЕсли;
КонецПроцедуры

