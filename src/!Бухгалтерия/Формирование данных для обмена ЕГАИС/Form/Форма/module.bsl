Процедура ОбходНестандартныхРеквизитовОбъекта(СписокРеквизитов, ДокПриемник, ДокИсточник, ТекПодключение, Платформа)
	
	Для каждого Реквизит из СписокРеквизитов Цикл
		Если Реквизит.ТипЗначенияРеквизита = "Строка" 
			или Реквизит.ТипЗначенияРеквизита = "Число"
			или Реквизит.ТипЗначенияРеквизита = "Дата"
			Тогда
			ДокПриемник[Реквизит.ИдентификаторРеквизита] = ДокИсточник[Реквизит.ИдентификаторРеквизитаУТМК];
		ИначеЕсли Реквизит.ТипЗначенияРеквизита = "Булево" Тогда
			Если Платформа = "7.7" Тогда
				Если ДокИсточник[Реквизит.ИдентификаторРеквизитаУКТМ] = Истина Тогда 
					ДокПриемник[Реквизит.ИдентификаторРеквизита] = 1;
				Иначе
					ДокПриемник[Реквизит.ИдентификаторРеквизита] = 0;
				КонецЕсли;
			Иначе
				ДокПриемник[Реквизит.ИдентификаторРеквизита] = ДокИсточник[Реквизит.ИдентификаторРеквизитаУТМК];
			КонецЕсли;
		ИначеЕсли Реквизит.ТипЗначенияРеквизита = "Перечисление" Тогда
			Если ЗначениеЗаполнено(Реквизит.ПредопределенноеЗначение) Тогда
				ДокПриемник[Реквизит.ИдентификаторРеквизита] = ТекПодключение + Реквизит.ТипЗначенияРеквизита + "." + Реквизит.ПредопределенноеЗначение;
			//Иначе
			//	ДокПриемник[Реквизит.ИдентификаторРеквизита] = ДокИсточник[Реквизит.ИдентификаторРеквизитаУКТМ];
			КонецЕсли;
		ИначеЕсли Реквизит.ТипЗначенияРеквизита = "Справочник" Тогда
			ДокПриемник[Реквизит.ИдентификаторРеквизита] = НайтиЭлементСправочника(ДокИсточник[Реквизит.ИдентификаторРеквизитаУТМК], Реквизит.ТипЗначенияРеквизита, Реквизит.РеквизитСинхронизации, "ОснРеквизиты");	
		КонецЕсли;
	КонецЦикла;
					
КонецПроцедуры

Процедура ВыбПериодНажатиеПоступления(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериодаПоступления, ?(КонПериодаПоступления='0001-01-01', КонПериодаПоступления, КонецДня(КонПериодаПоступления)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериодаПоступления = НастройкаПериода.ПолучитьДатуНачала();
		КонПериодаПоступления = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ВыбПериодНажатиеРеализации(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериодаРеализации, ?(КонПериодаРеализации='0001-01-01', КонПериодаРеализации, КонецДня(КонПериодаРеализации)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериодаРеализации = НастройкаПериода.ПолучитьДатуНачала();
		КонПериодаРеализации = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

// ЗАПОЛНЕНИЕ ТАБЛИЧНЫХ ЧАСТЕЙ
Процедура КоманднаяПанель2ЗаполнитьПоступленияТМЦПоПараметрам(Кнопка)
	
	ЗаполнитьПоступленияТМЦПоПараметрам();
	
КонецПроцедуры

Процедура ЗаполнитьПоступленияТМЦПоПараметрам()
	
	Если не ЗначениеЗаполнено(Организация) Тогда
		Предупреждение("Укажите Организация в настройках обработки!!!");
		Возврат;
	КонецЕсли;
	
	ТекНастройкиЕГАИС = ОпределитьНастройкиЕГАИС(Организация,ОбособленноеПодразделение);
	Если ТекНастройкиЕГАИС=Неопределено Тогда
		ОбщегоНазначения.СообщитьИнформациюПользователю("Не удалось определить настройки УТМ для данной организации");
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(ВложенныйЗапрос.ПоступлениеТМЦ) КАК ПоступлениеТМЦ,
	|	ВложенныйЗапрос.ТТН_Прих
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПоступлениеТоваровУслуг.Ссылка КАК ПоступлениеТМЦ,
	|		ЕГАИС_ТТН_Вх.Ссылка КАК ТТН_Прих
	|	ИЗ
	|		Документ.ЕГАИС_ТТН_вх КАК ЕГАИС_ТТН_Вх
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|			ПО ЕГАИС_ТТН_Вх.УчетныйДокумент = ПоступлениеТоваровУслуг.Ссылка
	|	ГДЕ
	|		ЕГАИС_ТТН_Вх.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ЕГАИС_ТипыОпераций.Закупка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВозвратТоваровОтПокупателя.Ссылка,
	|		ЕГАИС_ТТН_Вх.Ссылка
	|	ИЗ
	|		Документ.ЕГАИС_ТТН_вх КАК ЕГАИС_ТТН_Вх
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|			ПО ЕГАИС_ТТН_Вх.УчетныйДокумент = ВозвратТоваровОтПокупателя.Ссылка
	|	ГДЕ
	|		ЕГАИС_ТТН_Вх.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ЕГАИС_ТипыОпераций.ВозвратОтПокупателя)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПеремещениеТоваров.Ссылка,
	|		ЕГАИС_ТТН_Вх.Ссылка
	|	ИЗ
	|		Документ.ЕГАИС_ТТН_вх КАК ЕГАИС_ТТН_Вх
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|			ПО ЕГАИС_ТТН_Вх.УчетныйДокумент = ПеремещениеТоваров.Ссылка
	|	ГДЕ
	|		ЕГАИС_ТТН_Вх.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ЕГАИС_ТипыОпераций.Закупка)) КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ТТН_Прих.Дата МЕЖДУ &НачПериода И &КонПериода
	|	И ВложенныйЗапрос.ТТН_Прих.ПолучательИД = &FSRAR_ID
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ТТН_Прих";
	
	Запрос.УстановитьПараметр("FSRAR_ID",         ТекНастройкиЕГАИС.FSRAR_ID);
	Запрос.УстановитьПараметр("НачПериода",       НачПериодаПоступления);
	Запрос.УстановитьПараметр("КонПериода",       КонПериодаПоступления);
	Запрос.УстановитьПараметр("СтатусТТН_Создан", Перечисления.СтатусыТТН.Создан);
	
	Т_ПоступленияПоПараметрам = Запрос.Выполнить().Выгрузить();
	ПоступленияТМЦ.Загрузить(Т_ПоступленияПоПараметрам);
	
КонецПроцедуры

Процедура КоманднаяПанель3ЗаполнитьРеализацииТМЦПоПараметрам(Кнопка)
	
	ЗаполнитьРеализацииТМЦПоПараметрам();	
	
КонецПроцедуры

Процедура ЗаполнитьРеализацииТМЦПоПараметрам()
	
 	Запрос = Новый ПостроительЗапроса;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.РеализацияТМЦ,
	|	ВложенныйЗапрос.ТТН_Расх,
	|	ВложенныйЗапрос.СтатусТТН_ЕГАИС
	|ИЗ
	|	(ВЫБРАТЬ
	|		РеализацияТоваровУслуг.Ссылка КАК РеализацияТМЦ,
	|		ЕГАИС_ТТН_исх.Ссылка КАК ТТН_Расх,
	|		ЕГАИС_ТТН_исх.СтатусТТН КАК СтатусТТН_ЕГАИС,
	|		МАКСИМУМ(РегистрВидНоменклатуры.ВидНоменклатуры = &ВидПиво) КАК ЕстьПиво
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЕГАИС_ТТН_исх КАК ЕГАИС_ТТН_исх
	|				ПО РеализацияТоваровУслуг.Ссылка = ЕГАИС_ТТН_исх.УчетныйДокумент
	|					И (ЕГАИС_ТТН_исх.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ЕГАИС_ТипыОпераций.Продажа))
	|			ПО РеализацияТоваровУслугТовары.Ссылка = РеализацияТоваровУслуг.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ВидНоменклатуры КАК РегистрВидНоменклатуры
	|			ПО РеализацияТоваровУслугТовары.Номенклатура = РегистрВидНоменклатуры.Номенклатура
	|	ГДЕ
	|		РеализацияТоваровУслуг.Организация = &Организация
	|		И РеализацияТоваровУслуг.Склад = &Склад
	|		И РеализацияТоваровУслуг.Проведен
	|		И РеализацияТоваровУслуг.Дата МЕЖДУ &НачПериода И &КонПериода
	|	{ГДЕ
	|		РеализацияТоваровУслуг.ПодразделениеОрганизации.*}
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РеализацияТоваровУслуг.Ссылка,
	|		ЕГАИС_ТТН_исх.Ссылка,
	|		ЕГАИС_ТТН_исх.СтатусТТН
	|	
	|	ИМЕЮЩИЕ
	|		МАКСИМУМ(РегистрВидНоменклатуры.ВидНоменклатуры = &ВидПиво) = ИСТИНА
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВозвратТоваровПоставщику.Ссылка,
	|		ЕГАИС_ТТН_исх.Ссылка,
	|		ЕГАИС_ТТН_исх.СтатусТТН,
	|		МАКСИМУМ(РегистрВидНоменклатуры.ВидНоменклатуры = &ВидПиво)
	|	ИЗ
	|		Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЕГАИС_ТТН_исх КАК ЕГАИС_ТТН_исх
	|				ПО ВозвратТоваровПоставщику.Ссылка = ЕГАИС_ТТН_исх.УчетныйДокумент
	|					И (ЕГАИС_ТТН_исх.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ЕГАИС_ТипыОпераций.ВозвратПоставщику))
	|			ПО ВозвратТоваровПоставщикуТовары.Ссылка = ВозвратТоваровПоставщику.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ВидНоменклатуры КАК РегистрВидНоменклатуры
	|			ПО ВозвратТоваровПоставщикуТовары.Номенклатура = РегистрВидНоменклатуры.Номенклатура
	|	ГДЕ
	|		ВозвратТоваровПоставщику.Организация = &Организация
	|		И ВозвратТоваровПоставщику.Склад = &Склад
	|		И ВозвратТоваровПоставщику.Проведен
	|		И ВозвратТоваровПоставщику.Дата МЕЖДУ &НачПериода И &КонПериода
	|	{ГДЕ
	|		ВозвратТоваровПоставщику.ПодразделениеОрганизации.*}
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВозвратТоваровПоставщику.Ссылка,
	|		ЕГАИС_ТТН_исх.Ссылка,
	|		ЕГАИС_ТТН_исх.СтатусТТН
	|	
	|	ИМЕЮЩИЕ
	|		МАКСИМУМ(РегистрВидНоменклатуры.ВидНоменклатуры = &ВидПиво) = ИСТИНА
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПеремещениеТоваров.Ссылка,
	|		ЕГАИС_ТТН_исх.Ссылка,
	|		ЕГАИС_ТТН_исх.СтатусТТН,
	|		МАКСИМУМ(РегистрВидНоменклатуры.ВидНоменклатуры = &ВидПиво)
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЕГАИС_ТТН_исх КАК ЕГАИС_ТТН_исх
	|				ПО ПеремещениеТоваров.Ссылка = ЕГАИС_ТТН_исх.УчетныйДокумент
	|					И (ЕГАИС_ТТН_исх.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ЕГАИС_ТипыОпераций.Продажа))
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СобственныеКонтрагенты КАК СобственныеКонтрагенты
	|				ПО ПеремещениеТоваров.Контрагент = СобственныеКонтрагенты.Контрагент
	|			ПО ПеремещениеТоваровТовары.Ссылка = ПеремещениеТоваров.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ВидНоменклатуры КАК РегистрВидНоменклатуры
	|			ПО ПеремещениеТоваровТовары.Номенклатура = РегистрВидНоменклатуры.Номенклатура
	|	ГДЕ
	|		ВЫБОР
	|				КОГДА ПеремещениеТоваров.ЭтоВозврат
	|					ТОГДА СобственныеКонтрагенты.Организация = &Организация
	|				ИНАЧЕ ПеремещениеТоваров.Организация = &Организация
	|			КОНЕЦ
	|		И ПеремещениеТоваров.СкладОтправитель = &Склад
	|		И ПеремещениеТоваров.Проведен
	|		И ПеремещениеТоваров.Дата МЕЖДУ &НачПериода И &КонПериода
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПеремещениеТоваров.Ссылка,
	|		ЕГАИС_ТТН_исх.Ссылка,
	|		ЕГАИС_ТТН_исх.СтатусТТН
	|	
	|	ИМЕЮЩИЕ
	|		МАКСИМУМ(РегистрВидНоменклатуры.ВидНоменклатуры = &ВидПиво) = ИСТИНА) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.РеализацияТМЦ.Дата";
	
	//|	И ЕГАИС_ТТН_исх.СтатусТТН = &СтатусТТН_Создан
	
	Запрос.Параметры.Вставить("Организация",     	Организация);
	Запрос.Параметры.Вставить("Склад",           	Склад);
	Запрос.Параметры.Вставить("НачПериода",      	НачПериодаРеализации);
	Запрос.Параметры.Вставить("КонПериода",      	КонПериодаРеализации);
	Запрос.Параметры.Вставить("СтатусТТН_Создан",	Перечисления.СтатусыТТН.Создан);
	Запрос.Параметры.Вставить("ВидПиво",			Справочники.ВидыНоменклатуры.НайтиПоНаименованию("ПИВО"));
	ОтборПодразделения=Запрос.Отбор.Добавить("ПодразделениеОрганизации");
	Если ЗначениеЗаполнено(ОбособленноеПодразделение) Тогда
		ОтборПодразделения.Установить(ОбособленноеПодразделение);
	Иначе
		ОтборПодразделения.ВидСравнения=ВидСравнения.НеВСписке;
		ОтборПодразделения.Значение=ВыбратьОбособленныеПодразделения(Организация);
		ОтборПодразделения.Использование=Истина;
	КонецЕсли;
	
	Запрос.Выполнить();
	Т_РеализацииПоПараметрам = Запрос.Результат.Выгрузить();
	РеализацииТМЦ.Загрузить(Т_РеализацииПоПараметрам);
	
КонецПроцедуры


// ФОРМИРОВАНИЕ/ДОЗАПИСЬ ДОКУМЕНТОВ ПОСТУПЛЕНИЯ - ЗАГРУЗКА ИЗ ЕГАИС
Процедура КоманднаяПанель2СоздатьДописатьТТН_ВхИзЕГАИС(Кнопка)
	
	СоздатьДописатьТТН_ВхИзЕГАИС();
	
КонецПроцедуры

Процедура СоздатьДописатьТТН_ВхИзЕГАИС()
	
	Для каждого Стр_ПоступлениеТМЦ из ПоступленияТМЦ Цикл
		
		Если не Стр_ПоступлениеТМЦ.ПоступлениеТМЦ.Пустая() Тогда
			
			ТабПоЕГАИС=ПрочитатьПоступление(Стр_ПоступлениеТМЦ.ТТН_Прих);
			//Если ТипЗнч(Стр_ПоступлениеТМЦ.ПоступлениеТМЦ)=Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			//	СопоставитьТаблицуДокументаИТаблицуЕГАИС(Стр_ПоступлениеТМЦ.ПоступлениеТМЦ,ТабПоЕГАИС,Стр_ПоступлениеТМЦ.ТТН_Прих,"СерияНоменклатурыПриемник");
			//Иначе
			СопоставитьТаблицуДокументаИТаблицуЕГАИС(Стр_ПоступлениеТМЦ.ПоступлениеТМЦ,ТабПоЕГАИС,Стр_ПоступлениеТМЦ.ТТН_Прих);
			//КонецЕсли;
			Об=Стр_ПоступлениеТМЦ.ТТН_Прих.ПолучитьОбъект();
			Об.УчетныйДокумент=Стр_ПоступлениеТМЦ.ПоступлениеТМЦ;
			Если Об.Проведен Тогда
				Об.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				Об.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
		Иначе			
			Сообщить("Создание документов не предусмотрено. Строка "+Стр_ПоступлениеТМЦ.НомерСтроки);
			Продолжить;			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


// ФОРМИРОВАНИЕ ДОКУМЕНТОВ РЕАЛИЗАЦИИ ДЛЯ ВЫГРУЗКИ В ЕГАИС
Процедура КоманднаяПанель3СоздатьТТН_ИсхДляЕГАИС(Кнопка)
	
	СоздатьТТН_ИсхДляЕГАИС();
	
КонецПроцедуры

Процедура СоздатьТТН_ИсхДляЕГАИС()
	
	Для каждого Стр_РеализацияТМЦ из РеализацииТМЦ Цикл
		
		Если не Стр_РеализацияТМЦ.ТТН_Расх.Пустая() Тогда
			Если Стр_РеализацияТМЦ.СтатусТТН_ЕГАИС <> Перечисления.СтатусыТТН.Создан Тогда
				Продолжить;
			КонецЕсли;
			Док_ЕГАИС_ТТН_Исх = Стр_РеализацияТМЦ.ТТН_Расх.ПолучитьОбъект();
		Иначе
			Док_ЕГАИС_ТТН_Исх      = Документы.ЕГАИС_ТТН_Исх.СоздатьДокумент();
			Док_ЕГАИС_ТТН_Исх.УчетныйДокумент=Стр_РеализацияТМЦ.РеализацияТМЦ;
			Док_ЕГАИС_ТТН_Исх.Дата = ТекущаяДата();
		КонецЕсли;
		
		ТекНастройкиЕГАИС = ОпределитьНастройкиЕГАИС(Стр_РеализацияТМЦ.РеализацияТМЦ.Организация,?(ТипЗнч(Стр_РеализацияТМЦ.РеализацияТМЦ)=Тип("ДокументСсылка.ПеремещениеТоваров"),Стр_РеализацияТМЦ.РеализацияТМЦ.ПодразделениеОтправитель,Стр_РеализацияТМЦ.РеализацияТМЦ.ПодразделениеОрганизации));
		Если ТекНастройкиЕГАИС=Неопределено Тогда Продолжить; КонецЕсли;
		
		Контрагент=Стр_РеализацияТМЦ.РеализацияТМЦ.Контрагент;
		ПараметрыКонтрагентаДляЕГАИС                       = ПолучитьПараметрыЕГАИСДляКонтрагента(Контрагент, Ложь);
		Если ПараметрыКонтрагентаДляЕГАИС=Неопределено Тогда Продолжить; КонецЕсли;
		
		Док_ЕГАИС_ТТН_Исх.УстановитьНовыйНомер(ТекНастройкиЕГАИС.FSRAR_ID + "_");	
		Док_ЕГАИС_ТТН_Исх.ТипОперации                      = ?(ТипЗнч(Стр_РеализацияТМЦ.РеализацияТМЦ)=Тип("ДокументСсылка.РеализацияТоваровУслуг") или (ТипЗнч(Стр_РеализацияТМЦ.РеализацияТМЦ)=Тип("ДокументСсылка.ПеремещениеТоваров") и Не Стр_РеализацияТМЦ.РеализацияТМЦ.ЭтоВозврат),Перечисления.ЕГАИС_ТипыОпераций.Продажа,Перечисления.ЕГАИС_ТипыОпераций.ВозвратПоставщику);
		Док_ЕГАИС_ТТН_Исх.ТТН                              = ПривестиНомерНаПечать(Стр_РеализацияТМЦ.РеализацияТМЦ.Номер);
		Док_ЕГАИС_ТТН_Исх.ДатаТТН                          = Стр_РеализацияТМЦ.РеализацияТМЦ.Дата;
		Док_ЕГАИС_ТТН_Исх.Отправитель                      = Стр_РеализацияТМЦ.РеализацияТМЦ.Организация.Наименование;
		Док_ЕГАИС_ТТН_Исх.ОтправительИД                    = ТекНастройкиЕГАИС.FSRAR_ID;
		Док_ЕГАИС_ТТН_Исх.ОтправительИНН                   = Стр_РеализацияТМЦ.РеализацияТМЦ.Организация.ИНН; 
		Док_ЕГАИС_ТТН_Исх.ОтправительКПП                   = Стр_РеализацияТМЦ.РеализацияТМЦ.Организация.КПП; 
		
		
		Док_ЕГАИС_ТТН_Исх.Получатель                       = Контрагент.НаименованиеПолное;
		Док_ЕГАИС_ТТН_Исх.ПолучательИД                     = ПараметрыКонтрагентаДляЕГАИС.ClientRegId;//ОпределитьСвойствоПоЭлементуСправочника(Стр_РеализацияТМЦ.РеализацияТМЦ.Контрагент, "Справочники.Контрагенты", "FSRAR_ID");
		Док_ЕГАИС_ТТН_Исх.ПолучательИНН                    = ПараметрыКонтрагентаДляЕГАИС.INN;//Стр_РеализацияТМЦ.РеализацияТМЦ.Контрагент.ИНН;
		Док_ЕГАИС_ТТН_Исх.ПолучательКПП                    = ПараметрыКонтрагентаДляЕГАИС.KPP;//Стр_РеализацияТМЦ.РеализацияТМЦ.Контрагент.КПП;
		
		Док_ЕГАИС_ТТН_Исх.Подразделение                    = ТекНастройкиЕГАИС.НастройкаЕГАИС;
		Док_ЕГАИС_ТТН_Исх.Транспорт                        = "";
		Док_ЕГАИС_ТТН_Исх.XMLДокумент                      = "";
		Док_ЕГАИС_ТТН_Исх.ДатаСтатуса                      = ТекущаяДата();
		Док_ЕГАИС_ТТН_Исх.СтатусТТН                        = Перечисления.СтатусыТТН.Создан;
		Док_ЕГАИС_ТТН_Исх.ДатаПодтвержденияКорректировки   = "";
		
		//KAV
		Если ТипЗнч(Стр_РеализацияТМЦ.РеализацияТМЦ)<>Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			Если ЗначениеЗаполнено(Стр_РеализацияТМЦ.РеализацияТМЦ.Грузополучатель) Тогда
				Док_ЕГАИС_ТТН_Исх.ПунктРазгрузки					= УправлениеКонтактнойИнформацией.ПолучитьАдресИзКонтактнойИнформации(Стр_РеализацияТМЦ.РеализацияТМЦ.Грузополучатель,"Фактический");
			Иначе
				Док_ЕГАИС_ТТН_Исх.ПунктРазгрузки					= УправлениеКонтактнойИнформацией.ПолучитьАдресИзКонтактнойИнформации(Стр_РеализацияТМЦ.РеализацияТМЦ.Контрагент,"Юридический");
			КонецЕсли;
			Если ЗначениеЗаполнено(Стр_РеализацияТМЦ.РеализацияТМЦ.Грузоотправитель) Тогда
				Док_ЕГАИС_ТТН_Исх.ПунктПогрузки						= УправлениеКонтактнойИнформацией.ПолучитьАдресИзКонтактнойИнформации(Стр_РеализацияТМЦ.РеализацияТМЦ.Грузоотправитель,"Фактический");
			Иначе                               
				Док_ЕГАИС_ТТН_Исх.ПунктПогрузки						= УправлениеКонтактнойИнформацией.ПолучитьАдресИзКонтактнойИнформации(Стр_РеализацияТМЦ.РеализацияТМЦ.Организация,"Юридический");
			КонецЕсли;
		КонецЕсли;
		Док_ЕГАИС_ТТН_Исх.Товары.Очистить();
		
		Для каждого СтрТЧ из Стр_РеализацияТМЦ.РеализацияТМЦ.Товары Цикл
			
			ПараметрыНоменклатурыДляЕГАИС = ЕГАИС_ИТИ.ПолучитьПараметрыЕГАИСДляНоменклатуры(СтрТЧ.Номенклатура, Ложь); //ПолучитьПараметрыЕГАИСДляНоменклатуры(СтрТЧ.Номенклатура, Ложь);
			Если ПараметрыНоменклатурыДляЕГАИС = неопределено Тогда
				Сообщить("Возможно номенклатура " + СокрЛП(СтрТЧ.Номенклатура.Наименование) +  " не является алкогольной продукцией");
				Продолжить;	
			КонецЕсли;
			
			Если СтрТЧ.СерияНоменклатуры = Справочники.СерииНоменклатуры.ПустаяСсылка() 
				или СокрЛП(СтрТЧ.СерияНоменклатуры.Комментарий)="" 
				или Найти(СокрЛП(СтрТЧ.СерияНоменклатуры.Комментарий), "НачПарамЕГАИС")=0
				Тогда
				Сообщить("В строке " + СтрТЧ.НомерСтроки + " у номенклатуры " + СокрЛП(СтрТЧ.Номенклатура.Наименование) +  " не указана серия или параметры АП серии (поле ""Комментарий"" в серии)");
				Продолжить;	
			КонецЕсли;
			
			ПараметрыСерииАП        = Сред(СокрЛП(СтрТЧ.СерияНоменклатуры.Комментарий), Найти(СокрЛП(СтрТЧ.СерияНоменклатуры.Комментарий), "НачПарамЕГАИС")+13, 
			                          Найти(СокрЛП(СтрТЧ.СерияНоменклатуры.Комментарий), "КонПарамЕГАИС")-(Найти(СокрЛП(СтрТЧ.СерияНоменклатуры.Комментарий), "НачПарамЕГАИС")+13));
			СписокПараметровСерииАП = СтрЗаменить(ПараметрыСерииАП, ",", Символы.ПС);
			
			Если СокрЛП(СтрПолучитьСтроку(СписокПараметровСерииАП, 1))<>СокрЛП(ПараметрыНоменклатурыДляЕГАИС.AlcCode) Тогда
				Сообщить("В строке " + СтрТЧ.НомерСтроки + " у номенклатуры " + СокрЛП(СтрТЧ.Номенклатура.Наименование) +  " не совпадает код АП ЕГАИС в серии и в классификаторе АП ЕГАИС");
				Продолжить;	
			КонецЕсли;
			
			Док_ЕГАИС_ТТН_Исх_ТЧ					= Док_ЕГАИС_ТТН_Исх.Товары.Добавить();
			Док_ЕГАИС_ТТН_Исх_ТЧ.Номенклатура		= СтрТЧ.Номенклатура.Наименование;
			Док_ЕГАИС_ТТН_Исх_ТЧ.КодАП_ЕГАИС		= ПараметрыНоменклатурыДляЕГАИС.AlcCode;//СокрЛП(СтрПолучитьСтроку(СписокПараметровАП, 1));
			Док_ЕГАИС_ТТН_Исх_ТЧ.КодАП				= ПараметрыНоменклатурыДляЕГАИС.ProductVCode;//СокрЛП(СтрПолучитьСтроку(СписокПараметровАП, 10));
			Док_ЕГАИС_ТТН_Исх_ТЧ.Емкость			= ПараметрыНоменклатурыДляЕГАИС.Capacity;
			Док_ЕГАИС_ТТН_Исх_ТЧ.Крепость			= ПараметрыНоменклатурыДляЕГАИС.AlcVolume;
			
			ПараметрыПроизводителяПоЕГАИС = ПолучитьПараметрыЕГАИСДляКонтрагента(ПолучитьКонтрагентаПоИД(СокрЛП(ПараметрыНоменклатурыДляЕГАИС.Producer), Ложь), Ложь);
			Док_ЕГАИС_ТТН_Исх_ТЧ.Производитель_КОД = СокрЛП(ПараметрыНоменклатурыДляЕГАИС.Producer);
			Если ПараметрыПроизводителяПоЕГАИС<>неопределено Тогда
				Док_ЕГАИС_ТТН_Исх_ТЧ.Производитель     = СокрЛП(ПараметрыПроизводителяПоЕГАИС.ShortName);
				Док_ЕГАИС_ТТН_Исх_ТЧ.Производитель_ИНН = СокрЛП(ПараметрыПроизводителяПоЕГАИС.INN);
				Док_ЕГАИС_ТТН_Исх_ТЧ.Производитель_КПП = СокрЛП(ПараметрыПроизводителяПоЕГАИС.KPP);
			КонецЕсли;
			Если ЗначениеЗаполнено(ПараметрыНоменклатурыДляЕГАИС.Importer) Тогда
				ПараметрыИмпортераПоЕГАИС = ПолучитьПараметрыЕГАИСДляКонтрагента(ПолучитьКонтрагентаПоИД(СокрЛП(ПараметрыНоменклатурыДляЕГАИС.Importer), Ложь), Ложь);
				Док_ЕГАИС_ТТН_Исх_ТЧ.Импортер_КОД = СокрЛП(ПараметрыНоменклатурыДляЕГАИС.Importer);
				Если ПараметрыИмпортераПоЕГАИС<>неопределено Тогда
					Док_ЕГАИС_ТТН_Исх_ТЧ.Импортер     = СокрЛП(ПараметрыИмпортераПоЕГАИС.ShortName);
					Док_ЕГАИС_ТТН_Исх_ТЧ.Импортер_ИНН = СокрЛП(ПараметрыИмпортераПоЕГАИС.INN);
					Док_ЕГАИС_ТТН_Исх_ТЧ.Импортер_КПП = СокрЛП(ПараметрыИмпортераПоЕГАИС.KPP);
				КонецЕсли;
			КонецЕсли;
				
			Док_ЕГАИС_ТТН_Исх_ТЧ.Количество        = СтрТЧ.Количество/?(Док_ЕГАИС_ТТН_Исх_ТЧ.Емкость=0,10,1);
			Док_ЕГАИС_ТТН_Исх_ТЧ.КоличествоПринято = 0;
			
			Док_ЕГАИС_ТТН_Исх_ТЧ.Партия            = СтрТЧ.СерияНоменклатуры.Наименование;
			Док_ЕГАИС_ТТН_Исх_ТЧ.ПартияНомер       = СтрТЧ.СерияНоменклатуры.Наименование;
			Док_ЕГАИС_ТТН_Исх_ТЧ.Цена              = СтрТЧ.Цена*?(Док_ЕГАИС_ТТН_Исх_ТЧ.Емкость=0,10,1);
			Док_ЕГАИС_ТТН_Исх_ТЧ.СПР_А             = СокрЛП(СтрПолучитьСтроку(СписокПараметровСерииАП, 2));
			Док_ЕГАИС_ТТН_Исх_ТЧ.СПР_Б             = СокрЛП(СтрПолучитьСтроку(СписокПараметровСерииАП, 3));
		КонецЦикла;
		
		Док_ЕГАИС_ТТН_Исх.Записать();
		Стр_РеализацияТМЦ.ТТН_Расх        = Док_ЕГАИС_ТТН_Исх.Ссылка;
		Стр_РеализацияТМЦ.СтатусТТН_ЕГАИС = Док_ЕГАИС_ТТН_Исх.СтатусТТН;
	КонецЦикла;
	
	
КонецПроцедуры

Процедура Т_ТТН_Прих_ВУчСистемуКонтрагентПо1СНачалоВыбора(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура Т_ТТН_Прих_ВУчСистемуПриПолученииДанных(Элемент, ОформленияСтрок)
	Для Каждого ОформленияСтроки из ОформленияСтрок Цикл
		ДанныеСтроки=ОформленияСтроки.ДанныеСтроки;
		ОформленияСтроки.Ячейки.НомерДатаТТН.УстановитьТекст(ДанныеСтроки.ТТН_Прих.ТТН+" от "+ДанныеСтроки.ТТН_Прих.ДатаТТН);
		ОформленияСтроки.Ячейки.СтатусТТН_ЕГАИС.УстановитьТекст(ДанныеСтроки.ТТН_Прих.СтатусТТН);
		ОформленияСтроки.Ячейки.КонтрагентПоЕГАИС.УстановитьТекст(ДанныеСтроки.ТТН_Прих.Отправитель);
		Если ЗначениеЗаполнено(ДанныеСтроки.ПоступлениеТМЦ) Тогда
			ОформленияСтроки.Ячейки.НомерДатаПоступленияТМЦ.УстановитьТекст(ДанныеСтроки.ПоступлениеТМЦ.Номер+" от "+ДанныеСтроки.ПоступлениеТМЦ.Дата);
			ОформленияСтроки.Ячейки.КонтрагентПо1С.УстановитьТекст(ДанныеСтроки.ПоступлениеТМЦ.Контрагент);
		Иначе
			ОформленияСтроки.Ячейки.НомерДатаПоступленияТМЦ.УстановитьТекст("");
			ОформленияСтроки.Ячейки.КонтрагентПо1С.УстановитьТекст("");
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура Т_ТТН_Прих_ВУчСистемуТТН_ПрихПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		ЭлементыФормы.Т_ТТН_Прих_ВУчСистему.ТекущиеДанные.ПоступлениеТМЦ=Элемент.Значение.УчетныйДокумент;
	КонецЕсли;
КонецПроцедуры

Процедура Т_ТТН_Расх_ВУчСистемуПриПолученииДанных(Элемент, ОформленияСтрок)
	Для Каждого ОформлениеСтроки из ОформленияСтрок Цикл
		Если ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ТТН_Расх) Тогда
			ОформлениеСтроки.Ячейки.СтатусЕГАИС.УстановитьТекст(ОформлениеСтроки.ДанныеСтроки.ТТН_Расх.СтатусТТН);
		Иначе
			ОформлениеСтроки.Ячейки.СтатусЕГАИС.УстановитьТекст("");
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура Т_ТТН_Прих_ВУчСистемуПоступлениеТМЦПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		Для Каждого СтрокаТЧ Из ЭлементыФормы.Т_ТТН_Прих_ВУчСистему.Товары Цикл
			Если Не ЗначениеЗаполнено(СтрокаТЧ.СпрНоменклатура) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("В строке "+СтрокаТЧ.НомерСтроки+" не заполнена номенклатура учетной системы");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура Т_ТТН_Прих_ВУчСистемуПоступлениеТМЦНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	Если ЭлементыФормы.Т_ТТН_Прих_ВУчСистему.ТекущиеДанные.ТТН_Прих.ТипОперации=Перечисления.ЕГАИС_ТипыОпераций.ВозвратОтПокупателя Тогда
		Форма=Документы.ВозвратТоваровОтПокупателя.ПолучитьФормуВыбора();
		Форма.ДокументСписок.Отбор.Организация.Установить(Организация);
		Если ЗначениеЗаполнено(ОбособленноеПодразделение) Тогда
			Форма.ДокументСписок.Отбор.ПодразделениеОрганизации.Установить(ОбособленноеПодразделение);
		Иначе
			Форма.ДокументСписок.Отбор.ПодразделениеОрганизации.ВидСравнения=ВидСравнения.НеВСписке;
			Форма.ДокументСписок.Отбор.ПодразделениеОрганизации.Значение=ВыбратьОбособленныеПодразделения(Организация);
			Форма.ДокументСписок.Отбор.ПодразделениеОрганизации.Использование=Истина;
		КонецЕсли;
		Элемент.Значение=Форма.ОткрытьМодально();
	Иначе
		//Доп выбор
		СписокВыбора=Новый СписокЗначений;
		СписокВыбора.Добавить("Поступление товаров");
		СписокВыбора.Добавить("Перемещение товаров");
		Рез=СписокВыбора.ВыбратьЭлемент("Тип документа");
		Если Рез.Значение="Поступление товаров" Тогда
			Форма=Документы.ПоступлениеТоваровУслуг.ПолучитьФормуВыбора();
			Форма.ДокументСписок.Отбор.Организация.Установить(Организация);
			Если ЗначениеЗаполнено(ОбособленноеПодразделение) Тогда
				Форма.ДокументСписок.Отбор.ПодразделениеОрганизации.Установить(ОбособленноеПодразделение);
			Иначе
				Форма.ДокументСписок.Отбор.ПодразделениеОрганизации.ВидСравнения=ВидСравнения.НеВСписке;
				Форма.ДокументСписок.Отбор.ПодразделениеОрганизации.Значение=ВыбратьОбособленныеПодразделения(Организация);
				Форма.ДокументСписок.Отбор.ПодразделениеОрганизации.Использование=Истина;
			КонецЕсли;
			Элемент.Значение=Форма.ОткрытьМодально();
		ИначеЕсли Рез.Значение="Перемещение товаров" Тогда
			Форма=Документы.ПеремещениеТоваров.ПолучитьФормуВыбора();
			Форма.ДокументСписок.Отбор.Контрагент.ВидСравнения=ВидСравнения.НеРавно;
			Форма.ДокументСписок.Отбор.Контрагент.Использование=Истина;
			//ХЗ будет тут подразделение или нет
			Элемент.Значение=Форма.ОткрытьМодально();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура Панель1ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница=ЭлементыФормы.Панель1.Страницы.ПоступленияТМЦ Тогда
		ЭлементыФормы.КоманднаяПанель2.Вспомогательная=Ложь;
		ЭлементыФормы.КоманднаяПанель2.Кнопки.ЗаполнитьПоступленияТМЦПоПараметрам.КнопкаПоУмолчанию=Истина;
	Иначе
		ЭлементыФормы.КоманднаяПанель3.Вспомогательная=Ложь;
		ЭлементыФормы.КоманднаяПанель3.Кнопки.ЗаполнитьРеализацииТМЦПоПараметрам.КнопкаПоУмолчанию=Истина;
	КонецЕсли;
КонецПроцедуры

Процедура ОбособленноеПодразделениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	Форма=Справочники.ПодразделенияОрганизаций.ПолучитьФормуВыбора(,ЭтаФорма,ЭтаФорма);
	Форма.СправочникСписок.Отбор.ОбособленноеПодразделение.Установить(Истина);
	Форма.ПараметрВыборПоВладельцу=Организация;
	Рез=Форма.ОткрытьМодально(30);
	Если Рез<>Неопределено Тогда
		Элемент.Значение=Рез;
	КонецЕсли;
КонецПроцедуры

Функция ВыбратьОбособленныеПодразделения(ВхОрганизация)
	Подразделения=Справочники.ПодразделенияОрганизаций.Выбрать(,ВхОрганизация);
	СписокВозврат=Новый СписокЗначений;
	
	Пока Подразделения.Следующий() Цикл
		Если Подразделения.ОбособленноеПодразделение Тогда
			СписокВозврат.Добавить(Подразделения.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокВозврат;
КонецФункции
