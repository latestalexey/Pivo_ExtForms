Процедура КоманднаяПанель2Рассчитать(Кнопка)

	Коннектор = Новый COMObject("V83.COMConnector");
	Соединение = Коннектор.Connect("Srvr=""BRAIN"";Ref=""pivzavoz_new"";Usr=""Администратор"";Pwd=""911"";");
	
	Таблица1.Колонки.Очистить();
	Таблица1.Колонки.Добавить("Флажок",Новый ОписаниеТипов("Булево"),,2);
	Таблица1.Колонки.Добавить("Номенклатура",,,40);
	Таблица1.Колонки.Добавить("КоличествоУТ",              Новый ОписаниеТипов("Число"),,8);
	Таблица1.Колонки.Добавить("КоличествоБУХ",             Новый ОписаниеТипов("Число"),,8);
	Таблица1.Колонки.Добавить("СебестоимостьБух",          Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)),,8);
	Таблица1.Колонки.Добавить("МинимальныйОстаток",        Новый ОписаниеТипов("Число"),,8);
	Таблица1.Колонки.Добавить("МожноПродать",              Новый ОписаниеТипов("Число"),,8);
	Таблица1.Колонки.Добавить("СебестоимостьМожноПродать", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)),,8);
	Таблица1.Колонки.Добавить("КоличествоКПродаже",        Новый ОписаниеТипов("Число"),,8);
	Таблица1.Колонки.Добавить("СебестоимостьКПродаже",     Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)),,8);
	Таблица1.Колонки.Добавить("ВесКПродаже",               Новый ОписаниеТипов("Число"),,8);
	Таблица1.Колонки.Добавить("Коэффициент",               Новый ОписаниеТипов("Число"),,8);
	Таблица1.Колонки.Добавить("Объем",                     Новый ОписаниеТипов("Число"),,8);
	Таблица1.Колонки.Добавить("Вес",                       Новый ОписаниеТипов("Число"),,8);
	Таблица1.Колонки.Добавить("ВидНоменклатуры",,,10);
		
	Запрос = Соединение.NewObject("Запрос");
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура КАК Ссылка,
	|	СпрНоменклатура.Наименование,
	|	СпрНоменклатура.Код,
	|	СпрНоменклатура.ВидНоменклатуры.Наименование КАК ВидНоменклатуры,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК Количество,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ЕдиницаИзмеренияМест.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(СпрНоменклатура.ЕдиницаИзмеренияМест.Коэффициент, 1)
	|	КОНЕЦ КАК Коэффициент,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ЕдиницаИзмеренияМест.Объем = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(СпрНоменклатура.ЕдиницаИзмеренияМест.Объем, 1)
	|	КОНЕЦ КАК Объем,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ЕдиницаИзмеренияМест.Вес = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(СпрНоменклатура.ЕдиницаИзмеренияМест.Вес, 1)
	|	КОНЕЦ КАК Вес
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, Склад В (&СпСклады)) КАК ТоварыНаСкладахОстатки
	|		ПО ТоварыНаСкладахОстатки.Номенклатура = СпрНоменклатура.Ссылка";
	Если ПивоНеПиво="Пиво" Тогда
		Запрос.Текст = Запрос.Текст +
		"
		|ГДЕ
		|	 СпрНоменклатура.ВидНоменклатуры.Наименование = ""ПИВО""";
	ИначеЕсли ПивоНеПиво="НеПиво" Тогда
		Запрос.Текст = Запрос.Текст +
		"
		|ГДЕ
		|	СпрНоменклатура.ВидНоменклатуры.Наименование = ""НЕ ПИВО""";
	ИначеЕсли ПивоНеПиво="Прочее" Тогда
		Запрос.Текст = Запрос.Текст +
		"
		|ГДЕ
		|	СпрНоменклатура.ВидНоменклатуры.Наименование <> ""НЕ ПИВО""
		|и  СпрНоменклатура.ВидНоменклатуры.Наименование <> ""ПИВО""";
	КонецЕсли;
	Запрос.УстановитьПараметр("Дата", КонецДня(ВыбДата));
	СпСклады = Соединение.NewObject("СписокЗначений");
	СпСклады.Добавить(Соединение.Справочники.Склады.НайтиПоКоду("000000033"));//Б-ИСТОК Склад
	СпСклады.Добавить(Соединение.Справочники.Склады.НайтиПоКоду("000000089"));//Б-ИСТОК Склад №2
	СпСклады.Добавить(Соединение.Справочники.Склады.НайтиПоКоду("000000003"));//Основной
	СпСклады.Добавить(Соединение.Справочники.Склады.НайтиПоКоду("000000043"));//Склад В ПУТИ
	Запрос.УстановитьПараметр("СпСклады", СпСклады);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоменклатураБух = Справочники.Номенклатура.НайтиПоКоду(Выборка.Код);
		Если Не ЗначениеЗаполнено(НоменклатураБух) Тогда
			Продолжить;//не найденные позиции номенклатуры игнорируем
		КонецЕсли;
		НовСтр = Таблица1.Строки.Добавить();
		НовСтр.Номенклатура    = НоменклатураБух;
		НовСтр.КоличествоУТ    = Выборка.Количество;
		НовСтр.Коэффициент     = Выборка.Коэффициент;
		НовСтр.Объем           = Выборка.Объем;
		НовСтр.Вес             = Выборка.Вес;
		НовСтр.ВидНоменклатуры = Выборка.ВидНоменклатуры;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
	|	ХозрасчетныйОстатки.Субконто2 КАК Партия,
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК Сумма,
	|	ХозрасчетныйОстатки.КоличествоОстатокДт КАК Количество,
	|РегВидНоменклатуры.ВидНоменклатуры.Ссылка.Наименование КАК ВидНоменклатуры
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Дата, Счет = &Счет41, , ) КАК ХозрасчетныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидНоменклатуры КАК РегВидНоменклатуры
	|		ПО ХозрасчетныйОстатки.Субконто1 = РегВидНоменклатуры.Номенклатура";
	Если ПивоНеПиво="Пиво" Тогда
		Запрос.Текст = Запрос.Текст +
		"
		|ГДЕ
		|	ЕСТЬNULL(РегВидНоменклатуры.ВидНоменклатуры.Ссылка.Наименование, """") = ""ПИВО""";
	ИначеЕсли ПивоНеПиво="НеПиво" Тогда
		Запрос.Текст = Запрос.Текст +
		"
		|ГДЕ
		|	ЕСТЬNULL(РегВидНоменклатуры.ВидНоменклатуры.Ссылка.Наименование, """") = ""НЕ ПИВО""";
	ИначеЕсли ПивоНеПиво="Прочее" Тогда
		Запрос.Текст = Запрос.Текст +
		"
		|ГДЕ
		|	ЕСТЬNULL(РегВидНоменклатуры.ВидНоменклатуры.Ссылка.Наименование, """") <> ""НЕ ПИВО""
		|и  ЕСТЬNULL(РегВидНоменклатуры.ВидНоменклатуры.Ссылка.Наименование, """") <> ""ПИВО""";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст +
	"
	|УПОРЯДОЧИТЬ ПО
	|	ХозрасчетныйОстатки.Субконто2.МоментВремени УБЫВ
	|ИТОГИ
	|Сумма(Сумма),
	|Сумма(Количество)
	|ПО
	|	Номенклатура
	|АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("Дата", Новый Граница(КонецДня(ВыбДата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Счет41", ПланыСчетов.Хозрасчетный.ТоварыНаСкладах);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Номенклатура");
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		ТекСтр = Таблица1.Строки.Найти(ВыборкаНоменклатура.Номенклатура, "Номенклатура");
		Если ТекСтр=Неопределено Тогда
			ТекСтр = Таблица1.Строки.Добавить();
			ТекСтр.Номенклатура = ВыборкаНоменклатура.Номенклатура;
			ТекСтр.Коэффициент  = 1;
			ТекСтр.Объем        = 1;
			ТекСтр.Вес          = 1;
		КонецЕсли;
			
		Выборка = ВыборкаНоменклатура.Выбрать();
		Пока Выборка.Следующий() Цикл
			//в цикле сообщаем обо всех ошибках, и считаем сколько же все таки можно принять к учету в бух учете
			ТекСтр.ВидНоменклатуры  = Выборка.ВидНоменклатуры;
			Если Выборка.Количество<=0 Тогда
				Если ФлагПоказыватьОшибкиПартионногоУчета Тогда
					Сообщить("Обнаружена ошибка в партионном учете! Номенклатура: "+Выборка.Номенклатура+" партия: "+Выборка.Партия+" Количество: "+Выборка.Количество+" Сумма: "+Выборка.Сумма, СтатусСообщения.Важное);
				КонецЕсли;
				Продолжить;//минуса и нулевое количество на котором сумма зависла игнорируем
			КонецЕсли;
			ТекСтр.КоличествоБух    = ТекСтр.КоличествоБух    + Выборка.Количество;
			ТекСтр.СебестоимостьБух = ТекСтр.СебестоимостьБух + Выборка.Сумма;
		КонецЦикла;
		Выборка = ВыборкаНоменклатура.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.Количество<=0 Тогда
				Если ФлагПоказыватьОшибкиПартионногоУчета Тогда
					Сообщить("Обнаружена ошибка в партионном учете! Номенклатура: "+Выборка.Номенклатура+" партия: "+Выборка.Партия+" Количество: "+Выборка.Количество+" Сумма: "+Выборка.Сумма, СтатусСообщения.Важное);
				КонецЕсли;
				Продолжить;//минуса и нулевое количество на котором сумма зависла игнорируем
			КонецЕсли;
			НовСтр2 = ТекСтр.Строки.Найти(Выборка.Организация, "Номенклатура");
			Если НовСтр2=Неопределено Тогда
				НовСтр2 = ТекСтр.Строки.Добавить();
				НовСтр2.Номенклатура     = Выборка.Организация;
			КонецЕсли;
			НовСтр2.КоличествоБух    = НовСтр2.КоличествоБух    + Выборка.Количество;
			НовСтр2.СебестоимостьБух = НовСтр2.СебестоимостьБух + Выборка.Сумма;
			//НужноСписать = НужноСписать - КСписанию;
		КонецЦикла;
	КонецЦикла;
	
	//расчет остатков которые можно продать, чтобы не проваливались продажи в минус в будущем
	ЗапросОстатки = Новый Запрос;
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Организация КАК Организация,
		|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
		|	ХозрасчетныйОстатки.КоличествоОстаток,
		|	&Дата1 КАК Период
		|ПОМЕСТИТЬ ТаблицаОстатки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Дата1, Счет В ИЕРАРХИИ (&Счет41), , ) КАК ХозрасчетныйОстатки
		|";	
	ВсегоДней = (НачалоДня(ТекущаяДата())-НачалоДня(ВыбДата))/24/3600;
	Для Сч=2 По ВсегоДней Цикл
		ТекстЗапроса = ТекстЗапроса + "
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Организация,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.КоличествоОстаток,
		|	&Дата"+Сч+"
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Дата"+Сч+", Счет В ИЕРАРХИИ (&Счет41), , ) КАК ХозрасчетныйОстатки

		|";
	КонецЦикла;
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатки.Организация КАК Организация,
	|	ТаблицаОстатки.Номенклатура КАК Номенклатура,
	|	МИНИМУМ(ТаблицаОстатки.КоличествоОстаток) КАК Количество
	|ИЗ
	|	ТаблицаОстатки КАК ТаблицаОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОстатки.Номенклатура,
	|	ТаблицаОстатки.Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Организация
	|АВТОУПОРЯДОЧИВАНИЕ";
	ЗапросОстатки.Текст = ТекстЗапроса;
	ЗапросОстатки.УстановитьПараметр("Счет41", ПланыСчетов.Хозрасчетный.ТоварыНаСкладах);
	Для Сч=1 По ВсегоДней Цикл
		ЗапросОстатки.УстановитьПараметр("Дата"+Сч, НачалоДня(ВыбДата)+(Сч-1)*24*3600);
	КонецЦикла;
	Если ВсегоДней=0 Тогда
		ЗапросОстатки.УстановитьПараметр("Дата1", КонецДня(ВыбДата)+1);
	КонецЕсли;
	ТаблицаМинОстатки = ЗапросОстатки.Выполнить().Выгрузить();
	
	Для Каждого Стр1 Из Таблица1.Строки Цикл
		Для Каждого Стр2 Из Стр1.Строки Цикл
			МассивСтрок = ТаблицаМинОстатки.НайтиСтроки(Новый Структура("Организация, Номенклатура", Стр2.Номенклатура, Стр1.Номенклатура));
			Если МассивСтрок.Количество()=0 Тогда
				Продолжить;
			КонецЕсли;
			Стр2.МинимальныйОстаток = МассивСтрок[0].Количество;
		КонецЦикла;
		Стр1.МинимальныйОстаток = Стр1.Строки.Итог("МинимальныйОстаток");
	КонецЦикла;
	//сейчас мы имеем в таблице1 все заполненные данные по учету БУ, УУ и минимальные остатки, нужно заполнить данные для продажи
	Для Каждого Стр1 Из Таблица1.Строки Цикл
		//МожноСписать = Мин(Стр1.КоличествоБух, Стр1.МинимальныйОстаток);
		НужноСписать = Стр1.КоличествоБух-Стр1.КоличествоУТ;//4600
		Если НужноСписать>Стр1.МинимальныйОстаток Тогда//4600>4250
			НужноСписать = Стр1.МинимальныйОстаток;//4250
		КонецЕсли;
		Если НужноСписать<0 Тогда
			Продолжить;//продавать нечего
		КонецЕсли;
		Для Каждого Стр2 Из Стр1.Строки Цикл
			КСписанию = Стр2.КоличествоБух-Стр2.КоличествоУТ;
			Если КСписанию>Стр2.МинимальныйОстаток Тогда
				КСписанию = Стр2.МинимальныйОстаток;
			КонецЕсли;
			Если КСписанию>НужноСписать Тогда
				КСписанию = НужноСписать;
			КонецЕсли;
			Стр2.МожноПродать              = КСписанию;
			Стр2.СебестоимостьМожноПродать = Стр2.СебестоимостьБух/Стр1.КоличествоБух*КСписанию;
			НужноСписать = НужноСписать - КСписанию;
		КонецЦикла;
		Стр1.МожноПродать              = Стр1.Строки.Итог("МожноПродать");
		Стр1.СебестоимостьМожноПродать = Стр1.Строки.Итог("СебестоимостьМожноПродать");
	КонецЦикла;
	
	//Уберем организации лишние если включен фильтр по организации
	Если ЗначениеЗаполнено(Организация) Тогда
		Сч1 = Таблица1.Строки.Количество()-1;
		Пока Сч1>=0 Цикл
			Стр1 = Таблица1.Строки[Сч1];
			Сч2 = Стр1.Строки.Количество()-1;
			Пока Сч2>=0 Цикл
				Стр2 = Стр1.Строки[Сч2];
				Если Стр2.Номенклатура<>Организация Тогда
					Стр1.Строки.Удалить(Стр2);
				КонецЕсли;
				Сч2 = Сч2 - 1;
			КонецЦикла;
			Если Стр1.Строки.Количество()=0 Тогда
				Таблица1.Строки.Удалить(Стр1);
			КонецЕсли;
			Сч1 = Сч1 - 1;
		КонецЦикла;
	КонецЕсли;
	
	//Уберем лишние строки и отсортируем, что останется
	Сч = Таблица1.Строки.Количество()-1;
	Пока Сч>=0 Цикл
		ТекСтр = Таблица1.Строки[Сч];
		Если ТекСтр.КоличествоУТ=0 и ТекСтр.КоличествоБух=0 Тогда
			Таблица1.Строки.Удалить(ТекСтр);
		Иначе
			ТекСтр.Строки.Сортировать("Номенклатура");
		КонецЕсли;
		Сч = Сч - 1;
	КонецЦикла;
	Таблица1.Строки.Сортировать("Номенклатура");
	
	ЭлементыФормы.Таблица1.СоздатьКолонки();
	ЭлементыФормы.Таблица1.Колонки.Флажок.ДанныеФлажка = ЭлементыФормы.Таблица1.Колонки.Флажок.Данные;
	ЭлементыФормы.Таблица1.Колонки.Флажок.Данные = "";
	ЭлементыФормы.Таблица1.Колонки.Флажок.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
	ЭлементыФормы.Таблица1.Колонки.Флажок.ЦветФонаПоля = WebЦвета.СеребристоСерый;
	ЭлементыФормы.Таблица1.Колонки.ВидНоменклатуры.Видимость = Ложь;
	ЭлементыФормы.Таблица1.Колонки.Коэффициент.Видимость     = Ложь;
	ЭлементыФормы.Таблица1.Колонки.Объем.Видимость           = Ложь;
	
	Таблица2.Строки.Очистить();
	
КонецПроцедуры

Процедура КоманднаяПанель2Распределить(Кнопка)

	Для Каждого Стр1 Из Таблица1.Строки Цикл
		Для Каждого Стр2 Из Стр1.Строки Цикл
			Если Стр2.МожноПродать<=0 Тогда
				Продолжить;
			КонецЕсли;
			Стр2.КоличествоКПродаже    = Стр2.МожноПродать*ПроцентДляРаспределения/100;
			//уточним количество в местах
			Цел = Цел(Стр2.КоличествоКПродаже/Стр1.Коэффициент);
			Стр2.КоличествоКПродаже    = Цел*Стр1.Коэффициент;
			Стр2.СебестоимостьКПродаже = Стр2.СебестоимостьМожноПродать/Стр2.МожноПродать*Стр2.КоличествоКПродаже;
			Стр2.ВесКПродаже           = Цел*Стр1.Вес;
		КонецЦикла;
		Стр1.КоличествоКПродаже    = Стр1.Строки.Итог("КоличествоКПродаже");
		Стр1.СебестоимостьКПродаже = Стр1.Строки.Итог("СебестоимостьКПродаже");
		Стр1.ВесКПродаже           = Стр1.Строки.Итог("ВесКПродаже");
	КонецЦикла;
	ОбновитьТаблицу2();

КонецПроцедуры

Процедура Таблица1ПередНачаломИзменения(Элемент, Отказ)

	Если ЭлементыФормы.Таблица1.ТекущаяКолонка.Имя="Номенклатура" Тогда
		Отказ = Истина;
		ОткрытьЗначение(ЭлементыФормы.Таблица1.ТекущиеДанные.Номенклатура);
	ИначеЕсли ЭлементыФормы.Таблица1.ТекущаяКолонка.Имя="КоличествоКПродаже" Тогда
		Если ЭлементыФормы.Таблица1.ТекущиеДанные.Уровень()=0 Тогда
			Отказ = Истина;
		КонецЕсли;
	ИначеЕсли ЭлементыФормы.Таблица1.ТекущаяКолонка.Имя="Флажок" Тогда
		Если ЭлементыФормы.Таблица1.ТекущиеДанные.Уровень()<>0 Тогда
			Отказ = Истина;
		КонецЕсли;
	Иначе
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура Таблица2ПередНачаломИзменения(Элемент, Отказ)

	Если ЭлементыФормы.Таблица2.ТекущаяКолонка.Имя="Договор"
	 или ЭлементыФормы.Таблица2.ТекущаяКолонка.Имя="Контрагент"
	 или ЭлементыФормы.Таблица2.ТекущаяКолонка.Имя="Грузополучатель"
	 или ЭлементыФормы.Таблица2.ТекущаяКолонка.Имя="АдресДоставки"
	 Тогда
		Если ЭлементыФормы.Таблица2.ТекущиеДанные.Уровень()>1 Тогда
			Отказ = Истина;
		КонецЕсли;
	Иначе
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура КоманднаяПанель2УстановитьФлажки(Кнопка)

	Для Каждого СтрокаТЗ Из Таблица1.Строки Цикл
		СтрокаТЗ.Флажок = Истина;
	КонецЦикла;

КонецПроцедуры

Процедура КоманднаяПанель2СнятьФлажки(Кнопка)

	Для Каждого СтрокаТЗ Из Таблица1.Строки Цикл
		СтрокаТЗ.Флажок = Ложь;
	КонецЦикла;

КонецПроцедуры

Процедура КоманднаяПанель2ИнвертироватьФлажки(Кнопка)

	Для Каждого СтрокаТЗ Из Таблица1.Строки Цикл
		СтрокаТЗ.Флажок = Не СтрокаТЗ.Флажок;
	КонецЦикла;

КонецПроцедуры

Процедура ОбновитьТаблицу2()

	Таблица2.Колонки.Очистить();
	Таблица2.Колонки.Добавить("Организация",,,40);
	Таблица2.Колонки.Добавить("КоличествоКПродаже",    Новый ОписаниеТипов("Число"),,8);
	Таблица2.Колонки.Добавить("СебестоимостьКПродаже", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)),,8);
	Таблица2.Колонки.Добавить("Объем",                 Новый ОписаниеТипов("Число"),,8);
	Таблица2.Колонки.Добавить("Вес",                   Новый ОписаниеТипов("Число"),,8);
	Таблица2.Колонки.Добавить("СуммаСНаценкой",        Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)),,8);
	Таблица2.Колонки.Добавить("Контрагент",            Новый ОписаниеТипов("СправочникСсылка.Контрагенты"),,15);
	Таблица2.Колонки.Добавить("Договор",               Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов"),,15);
	Таблица2.Колонки.Добавить("Грузополучатель",       Новый ОписаниеТипов("СправочникСсылка.Контрагенты"),,15);
	Таблица2.Колонки.Добавить("Коэффициент",           Новый ОписаниеТипов("Число"),,8);
	Таблица2.Колонки.Добавить("АдресДоставки",         Новый ОписаниеТипов("Строка"),,15);
	
	ОстаткиНепогруженные = Таблица1.Скопировать();
	ВсегоВесКОтгрузке = 0;
	Для Каждого Стр1 Из ОстаткиНепогруженные.Строки Цикл
		Если Стр1.Флажок Тогда
			ВсегоВесКОтгрузке = ВсегоВесКОтгрузке + Стр1.ВесКПродаже;
		КонецЕсли;
	КонецЦикла;
		
	Для Каждого Машина Из Машины Цикл
		Загрузить = Машина.Вес;
		КоэффициентЗагрузки = Загрузить/ВсегоВесКОтгрузке;
		Если КоэффициентЗагрузки>1 Тогда
			КоэффициентЗагрузки = 1;//если машина меньше чем нужно загрузить, то грузим все что есть
		КонецЕсли;
		Для Каждого Стр1 Из ОстаткиНепогруженные.Строки Цикл
			Если Не Стр1.Флажок Тогда
				Продолжить;
			КонецЕсли;
			Для Каждого Стр2 Из Стр1.Строки Цикл
				НовСтр1 = Таблица2.Строки.Найти(Стр2.Номенклатура, "Организация");//ищем организацию
				Если НовСтр1=Неопределено Тогда
					НовСтр1 = Таблица2.Строки.Добавить();
					НовСтр1.Организация = Стр2.Номенклатура;
				КонецЕсли;
				
				НовСтр2 = НовСтр1.Строки.Найти("Машина №"+(Машины.Индекс(Машина)+1), "Организация");
				Если НовСтр2=Неопределено Тогда
					НовСтр2 = НовСтр1.Строки.Добавить();
					НовСтр2.Организация     = "Машина №"+(Машины.Индекс(Машина)+1);
					НовСтр2.Контрагент      = Машина.Контрагент;
					НовСтр2.Договор         = Машина.Договор;
					НовСтр2.Грузополучатель = Машина.Грузополучатель;
					НовСтр2.АдресДоставки   = Машина.АдресДоставки;
				КонецЕсли;
				
				//рассчитаем количество в машину этой номенклатуры, может и не попадет вовсе ничего
				Количество = Стр2.КоличествоКПродаже*КоэффициентЗагрузки;
				//уточним количество в местах
				Цел = Цел(Количество/Стр1.Коэффициент);
				Количество = Цел*Стр1.Коэффициент;
				
				Если Количество>0 Тогда
					НовСтр3 = НовСтр2.Строки.Найти(Стр1.Номенклатура, "Организация");//добавляем номенклатуру в машину
					Если НовСтр3=Неопределено Тогда
						НовСтр3 = НовСтр2.Строки.Добавить();
						НовСтр3.Организация = Стр1.Номенклатура;
						НовСтр3.Коэффициент = Стр1.Коэффициент;
					КонецЕсли;
					НовСтр3.КоличествоКПродаже    = НовСтр3.КоличествоКПродаже    + Количество;
					НовСтр3.СебестоимостьКПродаже = НовСтр3.СебестоимостьКПродаже + Количество*(Стр2.СебестоимостьКПродаже/Стр2.КоличествоКПродаже);
					НовСтр3.Объем                 = НовСтр3.Объем                 + Количество/Стр1.Коэффициент*Стр1.Объем;
					НовСтр3.Вес                   = НовСтр3.Вес                   + Количество/Стр1.Коэффициент*Стр1.Вес;
					НовСтр3.СуммаСНаценкой        = НовСтр3.СуммаСНаценкой        + НовСтр3.СебестоимостьКПродаже*(1+ПроцентНаценки/100);
					
					Стр2.КоличествоКПродаже    = Стр2.КоличествоКПродаже    - НовСтр3.КоличествоКПродаже;
					Стр2.СебестоимостьКПродаже = Стр2.СебестоимостьКПродаже - НовСтр3.СебестоимостьКПродаже;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	//догрузим машины чем осталось под завязку
	Для Каждого Машина Из Машины Цикл
		Для Каждого Стр1 Из ОстаткиНепогруженные.Строки Цикл
			Если Не Стр1.Флажок Тогда
				Продолжить;
			КонецЕсли;
			Для Каждого Стр2 Из Стр1.Строки Цикл
				НовСтр1 = Таблица2.Строки.Найти(Стр2.Номенклатура, "Организация");//ищем организацию
				Если НовСтр1=Неопределено Тогда
					НовСтр1 = Таблица2.Строки.Добавить();
					НовСтр1.Организация = Стр2.Номенклатура;
				КонецЕсли;
				
				НовСтр2 = НовСтр1.Строки.Найти("Машина №"+(Машины.Индекс(Машина)+1), "Организация");
				Если НовСтр2=Неопределено Тогда
					НовСтр2 = НовСтр1.Строки.Добавить();
					НовСтр2.Организация = "Машина №"+(Машины.Индекс(Машина)+1);
				КонецЕсли;
				
				//рассчитаем количество в машину этой номенклатуры, может и не попадет вовсе ничего
				ЗагруженоВМашину = НовСтр2.Строки.Итог("Вес");
				СвободноВМашине  = Машина.Вес - ЗагруженоВМашину;
				СвободноВМашинеКол = СвободноВМашине/Стр1.Вес*Стр1.Коэффициент;
				Количество = Мин(Стр2.КоличествоКПродаже, СвободноВМашинеКол);
				//уточним количество в местах
				Цел = Цел(Количество/Стр1.Коэффициент);
				Количество = Цел*Стр1.Коэффициент;
				
				Если Количество>0 Тогда
					НовСтр3 = НовСтр2.Строки.Найти(Стр1.Номенклатура, "Организация");//добавляем номенклатуру в машину
					Если НовСтр3=Неопределено Тогда
						НовСтр3 = НовСтр2.Строки.Добавить();
						НовСтр3.Организация = Стр1.Номенклатура;
					КонецЕсли;
					НовСтр3.КоличествоКПродаже    = НовСтр3.КоличествоКПродаже    + Количество;
					НовСтр3.СебестоимостьКПродаже = НовСтр3.СебестоимостьКПродаже + Количество*(Стр2.СебестоимостьКПродаже/Стр2.КоличествоКПродаже);
					НовСтр3.Объем                 = НовСтр3.Объем                 + Количество/Стр1.Коэффициент*Стр1.Объем;
					НовСтр3.Вес                   = НовСтр3.Вес                   + Количество/Стр1.Коэффициент*Стр1.Вес;
					НовСтр3.СуммаСНаценкой        = НовСтр3.СуммаСНаценкой        + НовСтр3.СебестоимостьКПродаже*(1+ПроцентНаценки/100);
					
					Стр2.КоличествоКПродаже    = Стр2.КоличествоКПродаже    - НовСтр3.КоличествоКПродаже;
					Стр2.СебестоимостьКПродаже = Стр2.СебестоимостьКПродаже - НовСтр3.СебестоимостьКПродаже;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ПересчитатьИтогиТаблица2();
			
	ЭлементыФормы.Таблица2.СоздатьКолонки();
	ЭлементыФормы.Таблица2.Колонки.Контрагент.ЭлементУправления.УстановитьДействие("ПриИзменении", Новый Действие("Таблица2КонтрагентПриИзменении"));

КонецПроцедуры

Процедура ПересчитатьИтогиТаблица2()

	Сч1 = Таблица2.Строки.Количество()-1;
	Пока Сч1>=0 Цикл
		Стр1 = Таблица2.Строки[Сч1];
		Сч2 = Стр1.Строки.Количество()-1;
		Пока Сч2>=0 Цикл
			Стр2 = Стр1.Строки[Сч2];
			Сч3 = Стр2.Строки.Количество()-1;
			Пока Сч3>=0 Цикл
				Стр3 = Стр2.Строки[Сч3];
				Если Стр3.КоличествоКПродаже=0 Тогда
					Стр2.Строки.Удалить(Стр3);
				КонецЕсли;
				Сч3 = Сч3 - 1;
			КонецЦикла;
			Стр2.КоличествоКПродаже    = Стр2.Строки.Итог("КоличествоКПродаже");
			Стр2.СебестоимостьКПродаже = Стр2.Строки.Итог("СебестоимостьКПродаже");
			Стр2.Объем                 = Стр2.Строки.Итог("Объем");
			Стр2.Вес                   = Стр2.Строки.Итог("Вес");
			Стр2.СуммаСНаценкой        = Стр2.Строки.Итог("СуммаСНаценкой");
			Стр2.Строки.Сортировать("Организация");
			Если Стр2.КоличествоКПродаже=0 Тогда
					Стр1.Строки.Удалить(Стр2);
				КонецЕсли;
			Сч2 = Сч2 - 1;
		КонецЦикла;
		Стр1.Строки.Сортировать("Организация");
		Стр1.КоличествоКПродаже    = Стр1.Строки.Итог("КоличествоКПродаже");
		Стр1.СебестоимостьКПродаже = Стр1.Строки.Итог("СебестоимостьКПродаже");
		Стр1.Объем                 = Стр1.Строки.Итог("Объем");
		Стр1.Вес                   = Стр1.Строки.Итог("Вес");
		Стр1.СуммаСНаценкой        = Стр1.Строки.Итог("СуммаСНаценкой");
		Если Стр1.КоличествоКПродаже=0 Тогда
			Таблица2.Строки.Удалить(Стр1);
		КонецЕсли;
		Сч1 = Сч1 - 1;
	КонецЦикла;

КонецПроцедуры

Процедура Таблица1ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)

	Если ЭлементыФормы.Таблица1.ТекущаяКолонка.Имя="КоличествоКПродаже" Тогда
		Стр2 = ЭлементыФормы.Таблица1.ТекущиеДанные;
		Стр2.СебестоимостьКПродаже = Стр2.СебестоимостьМожноПродать/Стр2.МожноПродать*Стр2.КоличествоКПродаже;
		Стр1 = Стр2.Родитель;
		Стр1.КоличествоКПродаже    = Стр1.Строки.Итог("КоличествоКПродаже");
		Стр1.СебестоимостьКПродаже = Стр1.Строки.Итог("СебестоимостьКПродаже");
		ОбновитьТаблицу2();
	КонецЕсли;

КонецПроцедуры

Процедура Таблица2КонтрагентПриИзменении(Элемент)

	ЭлементыФормы.Таблица2.Колонки.Договор.ЭлементУправления.ВыборПоВладельцу = ЭлементыФормы.Таблица2.ТекущиеДанные.Контрагент;
	ЭлементыФормы.Таблица2.ТекущиеДанные.Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();

КонецПроцедуры

Процедура КоманднаяПанель3Сформировать(Кнопка)

	Для Каждого Стр1 Из Таблица2.Строки Цикл
		Для Каждого Стр2 Из Стр1.Строки Цикл
			Док = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
			Док.Дата                    = ТекущаяДата();
			Док.УчитыватьНДС            = Истина;
			Док.СуммаВключаетНДС        = Истина;
			Док.Склад                   = Справочники.ИТИКонстанты.ОсновнойСклад.Указатель;
			Док.ВидОперации             = Перечисления.ВидыОперацийРеализацияТоваров.ПродажаКомиссия;
			Док.Организация             = Стр1.Организация;
			Док.Ответственный           = ПараметрыСеанса.ТекущийПользователь;
			Док.ВалютаДокумента         = Константы.ВалютаРегламентированногоУчета.Получить();
			Док.КратностьВзаиморасчетов = 1;
			Док.КурсВзаиморасчетов      = 1;
			Для Каждого Стр3 Из Стр2.Строки Цикл
				СтрокаТЧ = Док.Товары.Добавить();
				СтрокаТЧ.Номенклатура = Стр3.Организация;
				СтрокаТЧ.Количество   = Стр3.КоличествоКПродаже;
				Если ЗначениеЗаполнено(Стр1.Договор) Тогда
					Док.Контрагент         = Стр1.Контрагент;
					Док.ДоговорКонтрагента = Стр1.Договор;
					Док.Грузополучатель    = Стр1.Грузополучатель;
					Док.АдресДоставки      = Стр1.АдресДоставки;
				Иначе
					Док.Контрагент         = Стр2.Контрагент;
					Док.ДоговорКонтрагента = Стр2.Договор;
					Док.Грузополучатель    = Стр2.Грузополучатель;
					Док.АдресДоставки      = Стр2.АдресДоставки;
				КонецЕсли;
				// Выполнить общие действия для всех документов при изменении номенклатуры.
				ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(СтрокаТЧ, Док);
				ОбработкаТабличныхЧастей.ЗаполнитьНомерГТДИСтрануПроисхождения(СтрокаТЧ, Ложь, Док.Организация, Док.Дата);
				Док.ЗаполнитьСчетаУчетаВСтрокеТабЧасти(СтрокаТЧ, "Товары", Истина);
				//Счет = СтрокаТЧ.СчетДоходов;
				// Заполняем реквизиты табличной части.
				ОбработкаТабличныхЧастей.ЗаполнитьСтавкуНДСТабЧасти(СтрокаТЧ, Док);
				// Заполнение цены первично
				ОбработкаТабличныхЧастей.ЗаполнитьЕдиницуЦенуПродажиТабЧасти(СтрокаТЧ, Док, Константы.ВалютаРегламентированногоУчета.Получить());
				СтрокаТЧ.Сумма = Стр3.СуммаСНаценкой;
				// Выполнить общие действия для всех документов при изменении Суммы.
				ОбработкаТабличныхЧастей.ПриИзмененииСуммыТабЧасти(СтрокаТЧ, Док);
				// Рассчитать реквизиты табличной части.
				ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрокаТЧ, Док);
				//доп.пожелания бухгалтерии
				Если СтрокаТЧ.ЕдиницаИзмерения.Наименование="л" Тогда
					СтрокаТЧ.ЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию("кег");
					СтрокаТЧ.КоличествоМест = Цел(СтрокаТЧ.Количество/?(Стр3.Коэффициент=0,1,Стр3.Коэффициент));
				КонецЕсли;
			КонецЦикла;
			РассчитатьСерии(Док);
			ПересчитатьЦены(Док);
			Док.Записать(РежимЗаписиДокумента.Запись);
			СоздатьПТУ(Док);
			ОткрытьЗначение(Док);
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

Процедура КоманднаяПанель3УдалитьСтроку(Кнопка)

	Стр = ЭлементыФормы.Таблица2.ТекущиеДанные;
	Если Стр=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Стр.Уровень()=0 Тогда
		Таблица2.Строки.Удалить(Стр);
	Иначе
		Стр.Родитель.Строки.Удалить(Стр);
	КонецЕсли;

	//Если Стр.Уровень()=0 Тогда
	//	//уровень организации
	//	Таблица2.Строки.Удалить(Стр);
	//ИначеЕсли Стр.Уровень()=1 Тогда
	//	//уровень машины
	//	Если Стр.Организация="Машина №1" Тогда
	//		Стр.Родитель.Строки.Удалить(Стр);
	//	Иначе
	//		//для начала нам нужна машина №1
	//		Стр2 = Стр;
	//		Машина1 = Стр2.Строки.Найти("Машина №1", "Организация");
	//		Если Машина1=Неопределено Тогда
	//			Машина1 = Стр2.Родитель.Строки.Добавить();
	//			Машина1.Организация = "Машина №1";
	//		КонецЕсли;
	//		
	//		Для Каждого Стр3 Из Стр2.Строки Цикл
	//			НовСтр3 = Машина1.Строки.Найти(Стр3.Организация, "Организация");
	//			Если НовСтр3=Неопределено Тогда
	//				НовСтр3 = Машина1.Строки.Добавить();
	//				НовСтр3.Организация = Стр3.Организация;
	//			КонецЕсли;
	//			НовСтр3.КоличествоКПродаже    = НовСтр3.КоличествоКПродаже    + Стр3.КоличествоКПродаже;
	//			НовСтр3.СебестоимостьКПродаже = НовСтр3.СебестоимостьКПродаже + Стр3.СебестоимостьКПродаже;
	//			НовСтр3.Объем                 = НовСтр3.Объем                 + Стр3.Объем;
	//			НовСтр3.СуммаСНаценкой        = НовСтр3.СуммаСНаценкой        + Стр3.СуммаСНаценкой;
	//		КонецЦикла;
	//		Стр2.Родитель.Строки.Удалить(Стр2);
	//	КонецЕсли;
	//ИначеЕсли Стр.Уровень()=2 Тогда
	//	//уровень номенклатуры
	//	Если Стр.Организация="Машина №1" Тогда
	//		Стр.Родитель.Строки.Удалить(Стр);
	//	Иначе
	//		//для начала нам нужна машина №1
	//		Стр3 = Стр;
	//		Машина1 = Стр3.Родитель.Родитель.Строки.Найти("Машина №1", "Организация");
	//		Если Машина1=Неопределено Тогда
	//			Машина1 = Стр3.Родитель.Родитель.Строки.Добавить();
	//			Машина1.Организация = "Машина №1";
	//		КонецЕсли;
	//		
	//		НовСтр3 = Машина1.Строки.Найти(Стр3.Организация, "Организация");
	//		Если НовСтр3=Неопределено Тогда
	//			НовСтр3 = Машина1.Строки.Добавить();
	//			НовСтр3.Организация = Стр3.Организация;
	//		КонецЕсли;
	//		НовСтр3.КоличествоКПродаже    = НовСтр3.КоличествоКПродаже    + Стр3.КоличествоКПродаже;
	//		НовСтр3.СебестоимостьКПродаже = НовСтр3.СебестоимостьКПродаже + Стр3.СебестоимостьКПродаже;
	//		НовСтр3.Объем                 = НовСтр3.Объем                 + Стр3.Объем;
	//		НовСтр3.СуммаСНаценкой        = НовСтр3.СуммаСНаценкой        + Стр3.СуммаСНаценкой;
	//		Стр3.Родитель.Строки.Удалить(Стр3);
	//	КонецЕсли;
	//КонецЕсли;

	//ПересчитатьИтогиТаблица2();

КонецПроцедуры

Процедура Таблица2ПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	Если ДанныеСтроки.Уровень()<2 Тогда
		ОформлениеСтроки.Ячейки.Контрагент.ЦветФона = WebЦвета.СеребристоСерый;
		ОформлениеСтроки.Ячейки.Договор.ЦветФона    = WebЦвета.СеребристоСерый;
	КонецЕсли;
	
КонецПроцедуры

Процедура Таблица1ПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	Если ДанныеСтроки.Уровень()=1 Тогда
		Если ОформлениеСтроки.Ячейки.Найти("КоличествоКПродаже")<>Неопределено Тогда
			ОформлениеСтроки.Ячейки.КоличествоКПродаже.ЦветФона = WebЦвета.СеребристоСерый;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура КоманднаяПанель3УказатьСписокМашин(Кнопка)

	Форма = ПолучитьФорму("СписокМашин");
	Если Машины.Количество()>0 Тогда
		Форма.СписокМашин = Машины.Скопировать();
	КонецЕсли;
	Форма.ОткрытьМодально();
	Машины = Форма.СписокМашин.Скопировать();

КонецПроцедуры

Процедура КоманднаяПанель2ПоказатьСкрытыеОшибки(Кнопка)

	Коннектор = Новый COMObject("V82.COMConnector");
	Соединение = Коннектор.Connect("Srvr=""BRAIN"";Ref=""pivzavoz_new"";Usr=""Администратор"";Pwd=""911"";");
	
	Таблица1.Колонки.Очистить();
	Таблица1.Колонки.Добавить("Номенклатура",,,40);
	Таблица1.Колонки.Добавить("КоличествоУТ",  Новый ОписаниеТипов("Число"),,8);
	Таблица1.Колонки.Добавить("КоличествоБУХ", Новый ОписаниеТипов("Число"),,8);
	Таблица1.Колонки.Добавить("ВидНоменклатуры",,,10);
		
	Запрос = Соединение.NewObject("Запрос");
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура КАК Ссылка,
	|	СпрНоменклатура.Наименование,
	|	СпрНоменклатура.Код,
	|	СпрНоменклатура.ВидНоменклатуры.Наименование КАК ВидНоменклатуры,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК Количество
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, Склад В (&СпСклады)) КАК ТоварыНаСкладахОстатки
	|		ПО ТоварыНаСкладахОстатки.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	НЕ СпрНоменклатура.ЭтоГруппа";
	Если ПивоНеПиво="Пиво" Тогда
		Запрос.Текст = Запрос.Текст +
		"
		|и
		|	 СпрНоменклатура.ВидНоменклатуры.Наименование = ""ПИВО""";
	ИначеЕсли ПивоНеПиво="НеПиво" Тогда
		Запрос.Текст = Запрос.Текст +
		"
		|и
		|	СпрНоменклатура.ВидНоменклатуры.Наименование = ""НЕ ПИВО""";
	ИначеЕсли ПивоНеПиво="Прочее" Тогда
		Запрос.Текст = Запрос.Текст +
		"
		|и
		|	СпрНоменклатура.ВидНоменклатуры.Наименование <> ""НЕ ПИВО""
		|и  СпрНоменклатура.ВидНоменклатуры.Наименование <> ""ПИВО""";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Дата", КонецДня(ВыбДата));
	СпСклады = Соединение.NewObject("СписокЗначений");
	СпСклады.Добавить(Соединение.Справочники.Склады.НайтиПоКоду("000000033"));//Б-ИСТОК Склад
	СпСклады.Добавить(Соединение.Справочники.Склады.НайтиПоКоду("000000089"));//Б-ИСТОК Склад №2
	СпСклады.Добавить(Соединение.Справочники.Склады.НайтиПоКоду("000000003"));//Основной
	СпСклады.Добавить(Соединение.Справочники.Склады.НайтиПоКоду("000000043"));//Склад В ПУТИ
	Запрос.УстановитьПараметр("СпСклады", СпСклады);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоменклатураБух = Справочники.Номенклатура.НайтиПоКоду(Выборка.Код);
		Если Не ЗначениеЗаполнено(НоменклатураБух) Тогда
			Продолжить;//не найденные позиции номенклатуры игнорируем
		КонецЕсли;
		НовСтр = Таблица1.Строки.Добавить();
		НовСтр.Номенклатура    = НоменклатураБух;
		НовСтр.КоличествоУТ    = Выборка.Количество;
		НовСтр.ВидНоменклатуры = Выборка.ВидНоменклатуры;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
	|	ХозрасчетныйОстатки.КоличествоОстатокДт КАК Количество,
	|	РегВидНоменклатуры.ВидНоменклатуры.Ссылка.Наименование КАК ВидНоменклатуры
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Дата, Счет = &Счет41, , ) КАК ХозрасчетныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидНоменклатуры КАК РегВидНоменклатуры
	|		ПО ХозрасчетныйОстатки.Субконто1 = РегВидНоменклатуры.Номенклатура";
	Если ПивоНеПиво="Пиво" Тогда
		Запрос.Текст = Запрос.Текст +
		"
		|ГДЕ
		|	ЕСТЬNULL(РегВидНоменклатуры.ВидНоменклатуры.Ссылка.Наименование, """") = ""ПИВО""";
	ИначеЕсли ПивоНеПиво="НеПиво" Тогда
		Запрос.Текст = Запрос.Текст +
		"
		|ГДЕ
		|	ЕСТЬNULL(РегВидНоменклатуры.ВидНоменклатуры.Ссылка.Наименование, """") = ""НЕ ПИВО""";
	ИначеЕсли ПивоНеПиво="Прочее" Тогда
		Запрос.Текст = Запрос.Текст +
		"
		|ГДЕ
		|	ЕСТЬNULL(РегВидНоменклатуры.ВидНоменклатуры.Ссылка.Наименование, """") <> ""НЕ ПИВО""
		|и  ЕСТЬNULL(РегВидНоменклатуры.ВидНоменклатуры.Ссылка.Наименование, """") <> ""ПИВО""";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст +
	"
	|УПОРЯДОЧИТЬ ПО
	|	ХозрасчетныйОстатки.Субконто2.МоментВремени УБЫВ
	|ИТОГИ
	|Сумма(Количество)
	|ПО
	|	Номенклатура
	|АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("Дата", Новый Граница(КонецДня(ВыбДата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Счет41", ПланыСчетов.Хозрасчетный.ТоварыНаСкладах);
	
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Номенклатура");
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		НовСтр1 = Таблица1.Строки.Найти(ВыборкаНоменклатура.Номенклатура, "Номенклатура");
		Если НовСтр1=Неопределено Тогда
			НовСтр1 = Таблица1.Строки.Добавить();
			НовСтр1.Номенклатура = ВыборкаНоменклатура.Номенклатура;
		КонецЕсли;
		НовСтр1.КоличествоБух = ВыборкаНоменклатура.Количество;
		
		Выборка = ВыборкаНоменклатура.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НовСтр2 = НовСтр1.Строки.Найти(Выборка.Организация, "Номенклатура");
			Если НовСтр2=Неопределено Тогда
				НовСтр2 = НовСтр1.Строки.Добавить();
				НовСтр2.Номенклатура = Выборка.Организация;
			КонецЕсли;
			НовСтр2.КоличествоБух = ВыборкаНоменклатура.Количество;
		КонецЦикла;
	КонецЦикла;
	
	//отсортируем
	Сч = Таблица1.Строки.Количество()-1;
	Пока Сч>=0 Цикл
		ТекСтр = Таблица1.Строки[Сч];
		Если ТекСтр.КоличествоУТ=0 и ТекСтр.КоличествоБух=0 Тогда//нету количества нигде - нам не надо таких позиций
			Таблица1.Строки.Удалить(ТекСтр);
		ИначеЕсли ТекСтр.КоличествоУТ<=ТекСтр.КоличествоБух Тогда//превышение бух.остатков рассматривается в основном режиме работы
			Таблица1.Строки.Удалить(ТекСтр);
		Иначе
			ТекСтр.Строки.Сортировать("Номенклатура");
		КонецЕсли;
		Сч = Сч - 1;
	КонецЦикла;
	Таблица1.Строки.Сортировать("Номенклатура");
	
	//Уберем организации лишние если включен фильтр по организации
	Если ЗначениеЗаполнено(Организация) Тогда
		Сч1 = Таблица1.Строки.Количество()-1;
		Пока Сч1>=0 Цикл
			Стр1 = Таблица1.Строки[Сч1];
			Сч2 = Стр1.Строки.Количество()-1;
			Пока Сч2>=0 Цикл
				Стр2 = Стр1.Строки[Сч2];
				Если Стр2.Номенклатура<>Организация Тогда
					Стр1.Строки.Удалить(Стр2);
				КонецЕсли;
				Сч2 = Сч2 - 1;
			КонецЦикла;
			Если Стр1.Строки.Количество()=0 Тогда
				Таблица1.Строки.Удалить(Стр1);
			КонецЕсли;
			Сч1 = Сч1 - 1;
		КонецЦикла;
	КонецЕсли;
	
	ЭлементыФормы.Таблица1.СоздатьКолонки();

КонецПроцедуры

Процедура ПриОткрытии()

КонецПроцедуры

Функция РассчитатьСерии(Док)

	НоменклатураСерии = ИТИМодуль.НоменклатураССерийнымУчетом();
	НоменклатураДок = Док.Товары.ВыгрузитьКолонку("Номенклатура");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СерииНоменклатурыОстатки.Номенклатура КАК Номенклатура,
	|	СерииНоменклатурыОстатки.СерияНоменклатуры,
	|	СерииНоменклатурыОстатки.КоличествоОстаток КАК Количество,
	|	СерииНоменклатурыОстатки.СерияНоменклатуры.ДатаРозлива КАК СерияНоменклатурыДатаРозлива
	|ИЗ
	|	РегистрНакопления.СерииНоменклатуры.Остатки(
	|			&ДатаКон,
	|			Номенклатура В (&НоменклатураДок)
	|				И Номенклатура В (&НоменклатураСерии)
	|				И СерияНоменклатуры <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.Пустаяссылка)
	//			И Склад = &Склад
	|				И Организация = &Организация) КАК СерииНоменклатурыОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	СерияНоменклатурыДатаРозлива
	|АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("ДатаКон", Новый Граница(Док.МоментВремени(), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", Док.Организация);
	//Запрос.УстановитьПараметр("Склад", Док.Склад);
	Запрос.УстановитьПараметр("НоменклатураСерии", НоменклатураСерии);
	Запрос.УстановитьПараметр("НоменклатураДок", НоменклатураДок);
	ОстаткиПоСериям = Запрос.Выполнить().Выгрузить();
	Товары = Док.Товары.Выгрузить();
	Док.Товары.Очистить();
	Для Каждого СтрокаТЧ Из Товары Цикл
		Списать = СтрокаТЧ.Количество*СтрокаТЧ.Коэффициент;//списываем базовое количество
		МассивОстатков = ОстаткиПоСериям.НайтиСтроки(Новый Структура("Номенклатура", СтрокаТЧ.Номенклатура));
		Для Каждого СтрОст Из МассивОстатков Цикл
			Если СтрОст.Количество<=0 Тогда
				Продолжить;//игнорируем явно ошибочные строки или уже отработанные
			КонецЕсли;
			Если СтрОст.Количество>=Списать Тогда
				//остатков данной серии хватает
				НовСтр = Док.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, СтрокаТЧ);
				НовСтр.СерияНоменклатуры = СтрОст.СерияНоменклатуры;
				НовСтр.Количество        = Списать/СтрокаТЧ.Коэффициент;//переводим обратно в единицы измерения документа
				СтрОст.Количество = СтрОст.Количество - Списать;
				Списать = 0;
			Иначе
				//остатков данной серии недостаточно
				НовСтр = Док.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, СтрокаТЧ);
				НовСтр.СерияНоменклатуры = СтрОст.СерияНоменклатуры;
				НовСтр.Количество        = СтрОст.Количество/СтрокаТЧ.Коэффициент;//переводим обратно в единицы измерения документа
				Списать = Списать - СтрОст.Количество;
				СтрОст.Количество = 0;
			КонецЕсли;
			Если Списать=0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Списать>0 Тогда
			//нераспределили по сериям
			НовСтр = Док.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, СтрокаТЧ);
			НовСтр.Количество = Списать/СтрокаТЧ.Коэффициент;//переводим обратно в единицы измерения документа
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаТЧ Из Док.Товары Цикл
		СтрокаНом = Таблица1.Строки.Найти(СтрокаТЧ.Номенклатура,"Номенклатура", Ложь);
		Если СтрокаНом=Неопределено или СтрокаНом.Коэффициент=0 Тогда
			КоэффициентМест = 1;
		Иначе
			КоэффициентМест = СтрокаНом.Коэффициент;
		КонецЕсли;
		СтрокаТЧ.КоличествоМест = СтрокаТЧ.Количество/КоэффициентМест;
	КонецЦикла;
	Возврат Док;

КонецФункции

Функция ПересчитатьЦены(Док)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СобственныеКонтрагенты.ИспользуемыйТипЦен
	|ИЗ
	|	РегистрСведений.СобственныеКонтрагенты КАК СобственныеКонтрагенты
	|ГДЕ
	|	СобственныеКонтрагенты.Контрагент = &Контрагент";
	Запрос.УстановитьПараметр("Контрагент", Док.Контрагент);
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Док.ТипЦен = Результат.Выгрузить()[0].ИспользуемыйТипЦен;
	КонецЕсли;
	мСписокВидовДоговоров = Новый СписокЗначений;
	мСписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
	ЗаполнениеДокументов.ПриИзмененииЗначенияКонтрагента(Док,мСписокВидовДоговоров);
	Для Каждого СтрокаТЧ Из Док.Товары Цикл
		// Заполнение цены 
		ОбработкаТабличныхЧастей.ЗаполнитьЕдиницуЦенуПродажиТабЧасти(СтрокаТЧ, Док, Константы.ВалютаРегламентированногоУчета.Получить());
		// Рассчитать реквизиты табличной части.
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(СтрокаТЧ, Док);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрокаТЧ, Док);
	КонецЦикла;
	Возврат Док;

КонецФункции

Процедура СоздатьПТУ(РТУ)

	ПТУ = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
	ЗаполнитьЗначенияСвойств(ПТУ, РТУ,,"Организация, Контрагент, ДоговорКонтрагента, ТипЦен");
	ПТУ.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СобственныеКонтрагенты.Организация
	|ИЗ
	|	РегистрСведений.СобственныеКонтрагенты КАК СобственныеКонтрагенты
	|ГДЕ
	|	СобственныеКонтрагенты.Контрагент = &Контрагент";
	Запрос.УстановитьПараметр("Контрагент", РТУ.Контрагент);
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		ПТУ.Организация = Результат.Выгрузить()[0].Организация;
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СобственныеКонтрагенты.Контрагент
	|ИЗ
	|	РегистрСведений.СобственныеКонтрагенты КАК СобственныеКонтрагенты
	|ГДЕ
	|	СобственныеКонтрагенты.Организация = &Организация";
	Запрос.УстановитьПараметр("Организация", РТУ.Организация);
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		ПТУ.Контрагент = Результат.Выгрузить()[0].Контрагент;
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СобственныеКонтрагенты.ИспользуемыйТипЦен
	|ИЗ
	|	РегистрСведений.СобственныеКонтрагенты КАК СобственныеКонтрагенты
	|ГДЕ
	|	СобственныеКонтрагенты.Контрагент = &Контрагент";
	Запрос.УстановитьПараметр("Контрагент", ПТУ.Контрагент);
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		ПТУ.ТипЦен = Результат.Выгрузить()[0].ИспользуемыйТипЦен;
	КонецЕсли;
	мСписокВидовДоговоров = Новый СписокЗначений;
	мСписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
	ЗаполнениеДокументов.ПриИзмененииЗначенияКонтрагента(ПТУ,мСписокВидовДоговоров);
	
	Покупатель = РТУ.Контрагент;
	Поставщик  = ПТУ.Контрагент;
	
	//Попробуем по грузополучателю определить склад/подразделение
	мСвойствоСклад = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("010");
	НужныйСклад = ПТУ.Склад;
	Если ЗначениеЗаполнено(РТУ.Грузополучатель) тогда
		Отбор=Новый Структура("Объект,Свойство",РТУ.Грузополучатель,мСвойствоСклад);
		СкладКонтрагента = РегистрыСведений.ЗначенияСвойствОбъектов.Получить(Отбор).Значение;
		Если Не ЗначениеЗаполнено(СкладКонтрагента) Тогда
			ТекстСообщения = "У контрагента "+РТУ.Грузополучатель+" не указан связный склад";
			Сообщить(ТекстСообщения);
		иначе
			НужныйСклад = СкладКонтрагента;
		КонецЕсли;
	КонецЕсли;
	ПТУ.Склад = НужныйСклад;
	ПТУ.ПодразделениеОрганизации = НужныйСклад.ПодразделениеОрганизации;
	ПТУ.Записать(РежимЗаписиДокумента.Запись);
	Для Каждого СтрРТУ Из РТУ.Товары Цикл
		СтрокаТЧ = ПТУ.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрРТУ);
		ПТУ.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТЧ, "Товары", Истина, Истина);
		СтрокаТЧ.СерияНоменклатуры=МодульВнутреннихПродаж.ПолучитьСерию(СтрокаТЧ.Номенклатура,Покупатель,Поставщик,НачалоДня(ПТУ.Дата),ПТУ.Номер);
	КонецЦикла;
	ПТУ.Записать(РежимЗаписиДокумента.Запись);
	ОткрытьЗначение(ПТУ);

КонецПроцедуры