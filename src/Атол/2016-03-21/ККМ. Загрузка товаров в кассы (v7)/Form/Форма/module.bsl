//ВСПОМОГАТЕЛЬНЫЕ ФУНКЦИИ И ПРОЦЕДУРЫ

Функция ЭтоЧисло(Знач ВхСтрока)
	Длина=СтрДлина(ВхСтрока);
	Для Сч=1 По Длина Цикл
	
		Символ=Сред(ВхСтрока,Сч,1);
		Если НЕ (Символ>="0" И Символ<="9") Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	Возврат Истина
КонецФункции

//Для совместимости
Функция ПоддерживаетсяВидТО(Вид) Экспорт

	Результат = Ложь;

	Если Вид = Перечисления.ВидыТорговогоОборудования.ККМOffLine Тогда
		Результат = Истина;
	КонецЕсли;

	Возврат Результат;

КонецФункции // Поддержив

//Старые функции
Функция ПолучитьЦену(Склад,Номенклатура,Характеристика=неопределено)
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ЦеныАТТСрезПоследних.Цена
	             |ИЗ
	             |	РегистрСведений.ЦеныАТТ.СрезПоследних(
	             |			,
	             |			Склад = &Склад
	             |				И Номенклатура = &Номенклатура) КАК ЦеныАТТСрезПоследних";
	                    //|	И ЦеныАТТСрезПоследних.ХарактеристикаНоменклатуры = &Характеристика";
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	//Запрос.УстановитьПараметр("Характеристика",Характеристика);
	Тов=Запрос.Выполнить().Выбрать();
	тов.Следующий();
	Возврат Тов.Цена;
КонецФункции

Функция ПолучитьЦенуДОП(Склад,Номенклатура,Ночная=Ложь)
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ЦеныНоменклатурыСрезПоследних.Цена
	             |ИЗ
	             |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	             |			,
	             |			ТипЦен = &ДопЦена
	             |				И Номенклатура = &Номенклатура) КАК ЦеныНоменклатурыСрезПоследних";
	Запрос.УстановитьПараметр("ДопЦена",?(Не Ночная,Склад.ТипЦенРозничнойТорговли,Склад.ТипЦенРозничнойТорговлиНочной));
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Тов=Запрос.Выполнить().Выбрать();
	тов.Следующий();
	Возврат Тов.Цена;
КонецФункции
//Старые функции

//Новые функции получаем сразу список
Функция ПолучитьЦены(Склад,Номенклатура)
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ЦеныАТТСрезПоследних.Номенклатура,
	             |	ЦеныАТТСрезПоследних.Цена
	             |ИЗ
	             |	РегистрСведений.ЦеныАТТ.СрезПоследних(
	             |			&ДатаВыгрузки,
	             |			Номенклатура В (&Номенклатура)
	             |				И Склад = &Склад) КАК ЦеныАТТСрезПоследних";
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("ДатаВыгрузки",ТекущаяДата());
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ПолучитьЦеныДОП(Склад,Номенклатура,Ночная=Ложь)
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	             |	ЦеныНоменклатурыСрезПоследних.Цена
	             |ИЗ
	             |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	             |			&ДатаВыгрузки,
	             |			Номенклатура В (&Номенклатура)
	             |				И ТипЦен = &ДопЦена) КАК ЦеныНоменклатурыСрезПоследних";
	Запрос.УстановитьПараметр("ДопЦена",?(Не Ночная,Склад.ТипЦенРозничнойТорговли,Склад.ТипЦенРозничнойТорговлиНочной));
	Запрос.УстановитьПараметр("ДатаВыгрузки",ТекущаяДата());
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции
//Новые функции получаем сразу список

Функция ПолучитьТаблицуТоваровДляВыгрузки()
	Запрос = Новый Запрос();
	//KAV++ Крапивин Андрей. 31.03.2015 16:05:50 #1187558 Добавим расчет объема
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.Номенклатура,
	               |	ВложенныйЗапрос.ПЛУ,
	               |	ВложенныйЗапрос.ЕдиницаИзмерения,
	               |	ВложенныйЗапрос.ЭтоГруппа,
	               |	ВложенныйЗапрос.ХарактеристикаНоменклатуры,
	               |	ВложенныйЗапрос.Комплект КАК Комплект,
	               |	ВложенныйЗапрос.ВесовойТовар,
	               |	ВложенныйЗапрос.Остаток,
	               |	ВЫБОР
	               |		КОГДА ВложенныйЗапрос.Номенклатура В ИЕРАРХИИ (&ГрСигареты)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК ГрСигареты,
	               |	ВЫБОР
	               |		КОГДА ВложенныйЗапрос.Номенклатура В ИЕРАРХИИ (&ГрСигаретыБлоками)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК ГрСигаретыБлоками,
	               |	ВЫБОР
	               |		КОГДА ВложенныйЗапрос.Номенклатура В ИЕРАРХИИ (&ГрБутылки)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК ГрБутылки,
	               |	ВЫБОР
	               |		КОГДА ВложенныйЗапрос.Номенклатура В ИЕРАРХИИ (&ГрСнекиВесовые)
	               |				ИЛИ ВложенныйЗапрос.Номенклатура В ИЕРАРХИИ (&ГрХолодильник)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК Кратность0,
	               |	ВЫБОР
	               |		КОГДА ВложенныйЗапрос.Номенклатура В ИЕРАРХИИ (&ГрПивоРозлив)
	               |				ИЛИ ВложенныйЗапрос.Номенклатура В ИЕРАРХИИ (&ГрВиноРозлив)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК Кратность05,
	               |	ЕСТЬNULL(ЗначенияСвойствОбъектовФиксБонус.Значение, """") КАК ФиксированныйБонус,
	               |	ЕСТЬNULL(ЗначенияСвойствОбъектовБонус1.Значение, """") КАК Бонус1,
	               |	ЕСТЬNULL(ЗначенияСвойствОбъектовБонус2.Значение, """") КАК Бонус2,
	               |	ЕСТЬNULL(ЗначенияСвойствОбъектовБонус3Иерархия.Значение, """") КАК Бонус3,
	               |	ВЫБОР
	               |		КОГДА ВложенныйЗапрос.Номенклатура.ВидНоменклатуры = &ВН_ПодарочныйСертификат
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК ЭтоПодарСерт,
	               |	ЕСТЬNULL(ЗначенияСвойствОбъектовКратность.Значение.Наименование, """") КАК КратностьТовара,
	               |	ВложенныйЗапрос.Объем
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		НоменклатураСпр.Ссылка КАК Номенклатура,
	               |		НоменклатураСпр.Код КАК ПЛУ,
	               |		НоменклатураСпр.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	               |		НоменклатураСпр.ЭтоГруппа КАК ЭтоГруппа,
	               |		НЕОПРЕДЕЛЕНО КАК ХарактеристикаНоменклатуры,
	               |		ЛОЖЬ КАК Комплект,
	               |		НоменклатураСпр.Весовой КАК ВесовойТовар,
	               |		9999.99 КАК Остаток,
	               |		СУММА(НоменклатураСпр.ЕдиницаХраненияОстатков.Объем) КАК Объем
	               |	ИЗ
	               |		Справочник.Номенклатура КАК НоменклатураСпр
	               |	ГДЕ
	               |		НоменклатураСпр.Ссылка В ИЕРАРХИИ(&СпНоменклатура)
	               |		И НЕ НоменклатураСпр.ЭтоГруппа
	               |		И НЕ НоменклатураСпр.Архивный
	               |		И НЕ НоменклатураСпр.Комплект
	               |		И НЕ НоменклатураСпр.ПометкаУдаления
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		НоменклатураСпр.Ссылка,
	               |		НоменклатураСпр.Код,
	               |		НоменклатураСпр.ЕдиницаХраненияОстатков,
	               |		НоменклатураСпр.ЭтоГруппа,
	               |		НоменклатураСпр.Весовой
	               |	
	               |	ОБЪЕДИНИТЬ
	               |	
	               |	ВЫБРАТЬ
	               |		НоменклатураСпр.Ссылка,
	               |		НоменклатураСпр.Код,
	               |		НоменклатураСпр.ЕдиницаХраненияОстатков,
	               |		НоменклатураСпр.ЭтоГруппа,
	               |		НЕОПРЕДЕЛЕНО,
	               |		ИСТИНА,
	               |		ЛОЖЬ,
	               |		9999.99,
	               |		СУММА(ЕСТЬNULL(КомплектующиеНоменклатуры.ЕдиницаИзмерения.Объем, 0) * ЕСТЬNULL(КомплектующиеНоменклатуры.Количество, 0))
	               |	ИЗ
	               |		Справочник.Номенклатура КАК НоменклатураСпр
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
	               |			ПО (КомплектующиеНоменклатуры.Номенклатура = НоменклатураСпр.Ссылка)
	               |				И (КомплектующиеНоменклатуры.Комплектующая В ИЕРАРХИИ (&ГрПивоРозлив,&ГрСамара))
	               |	ГДЕ
	               |		НЕ НоменклатураСпр.Архивный
	               |		И НоменклатураСпр.Комплект
	               |		И НЕ НоменклатураСпр.ПометкаУдаления
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		НоменклатураСпр.Ссылка,
	               |		НоменклатураСпр.Код,
	               |		НоменклатураСпр.ЕдиницаХраненияОстатков,
	               |		НоменклатураСпр.ЭтоГруппа) КАК ВложенныйЗапрос
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектовФиксБонус
	               |		ПО ВложенныйЗапрос.Номенклатура = ЗначенияСвойствОбъектовФиксБонус.Объект
	               |			И (ЗначенияСвойствОбъектовФиксБонус.Свойство = &ФиксированныйБонус)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектовКратность
	               |		ПО ВложенныйЗапрос.Номенклатура = ЗначенияСвойствОбъектовКратность.Объект
	               |			И (ЗначенияСвойствОбъектовКратность.Свойство = &КратностьВКассе)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектовБонус1
	               |		ПО ВложенныйЗапрос.Номенклатура = ЗначенияСвойствОбъектовБонус1.Объект
	               |			И (ЗначенияСвойствОбъектовБонус1.Свойство = &Бонус1)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектовБонус2
	               |		ПО ВложенныйЗапрос.Номенклатура = ЗначенияСвойствОбъектовБонус2.Объект
	               |			И (ЗначенияСвойствОбъектовБонус2.Свойство = &Бонус2)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектовБонус3Иерархия
	               |		ПО ВложенныйЗапрос.Номенклатура.Родитель = ЗначенияСвойствОбъектовБонус3Иерархия.Объект
	               |			И (ЗначенияСвойствОбъектовБонус3Иерархия.Свойство = &Бонус3)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Комплект,
	               |	ВложенныйЗапрос.Номенклатура.Код";
				   
	Запрос.УстановитьПараметр("ГрСигареты",			Справочники.ИТИКонстанты.ГруппаНоменклатурыСигареты.Указатель);
	Запрос.УстановитьПараметр("ГрСигаретыБлоками",	Справочники.Номенклатура.НайтиПоКоду("00000008437").Ссылка);
	Запрос.УстановитьПараметр("ГрБутылки",			Справочники.Номенклатура.НайтиПоКоду("00000000221").Ссылка);
	Запрос.УстановитьПараметр("КратностьВКассе",	ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Кратность товара в кассе"));
	
	//Бонусы
	Запрос.УстановитьПараметр("ФиксированныйБонус",	ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Фиксированный бонус"));
	Запрос.УстановитьПараметр("Бонус1",				ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("000000069"));
	Запрос.УстановитьПараметр("Бонус2",				ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("000000070"));
	Запрос.УстановитьПараметр("Бонус3",				ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("000000075"));
	
	//_Кратность = "";
	Запрос.УстановитьПараметр("ГрСнекиВесовые",		Справочники.Номенклатура.НайтиПоКоду("00000000700"));
	Запрос.УстановитьПараметр("ГрХолодильник",		Справочники.Номенклатура.НайтиПоКоду("00000000944"));
	//_Кратность = "0,5000";			
	Запрос.УстановитьПараметр("ГрПивоРозлив",		Справочники.Номенклатура.НайтиПоКоду("00000000001"));
	Запрос.УстановитьПараметр("ГрСамара",			Справочники.Номенклатура.НайтиПоКоду("00000031087"));
	Запрос.УстановитьПараметр("ГрВиноРозлив",		Справочники.Номенклатура.НайтиПоКоду("00000003904"));
	
	//Подарочные сертификаты!
	Запрос.УстановитьПараметр("ВН_ПодарочныйСертификат",	Справочники.ВидыНоменклатуры.НайтиПоКоду("000000019"));
	
	СпНоменклатура  = Новый СписокЗначений;
	Выборка = Справочники.ИТИКонстанты.Выбрать(Справочники.ИТИКонстанты.НайтиПоНаименованию("Группы для выгрузки в кассы").Ссылка);
	Пока Выборка.Следующий() Цикл
		Если Не Выборка.ПометкаУдаления и ЗначениеЗаполнено(Выборка.Указатель) Тогда
			СпНоменклатура.Добавить(Выборка.Указатель);
		КонецЕсли;
	КонецЦикла;
	Запрос.УстановитьПараметр("СпНоменклатура", СпНоменклатура);
	РезультатЗапроса=Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ПоказатьОповещениеПользователя("Список товаров для выгрузки пуст.");
		Возврат Неопределено;
	КонецЕсли;
	
	Товары = РезультатЗапроса.Выгрузить();
	Товары.Колонки.Добавить("Цена");
	Товары.Колонки.Добавить("ЦенаНочь");
	
	Возврат Товары;
КонецФункции

Функция ПодготовитьТаблицуКВыгрузке(ЗНАЧ Товары,ОбСклад,КассаККМ)
	//ТоварыВозврта=Товары.Скопировать();
	//0. Дополним сертификатами
	Запрос = Новый Запрос;
	//KAV++ Крапивин Андрей. 31.03.2015 16:05:50 #1187558 Добавим расчет объема
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВходТаблица.Номенклатура,
	               |	ВходТаблица.ПЛУ,
	               |	ВходТаблица.ЕдиницаИзмерения,
	               |	ВходТаблица.ЭтоГруппа,
	               |	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНоменклатуры,
	               |	ВходТаблица.Комплект,
	               |	ВходТаблица.ВесовойТовар,
	               |	ВходТаблица.Остаток,
	               |	ВходТаблица.ГрСигареты,
	               |	ВходТаблица.ГрСигаретыБлоками,
	               |	ВходТаблица.ГрБутылки,
	               |	ВходТаблица.Кратность0,
	               |	ВходТаблица.Кратность05,
	               |	ЛОЖЬ КАК ЭтоПодарСерт,
	               |	ВходТаблица.ФиксированныйБонус,
	               |	ВходТаблица.Бонус1,
	               |	ВходТаблица.Бонус2,
				   |	ВходТаблица.Бонус3,
	               |	ВходТаблица.КратностьТовара,
	               |	ВходТаблица.Объем
	               |ПОМЕСТИТЬ ПодготовленнаяТаблица
	               |ИЗ
	               |	&ВходТаблица КАК ВходТаблица
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВложенныйЗапрос.Номенклатура,
	               |	ВложенныйЗапрос.ПЛУ,
	               |	ВложенныйЗапрос.ЕдиницаИзмерения,
	               |	ВложенныйЗапрос.ЭтоГруппа,
	               |	ВложенныйЗапрос.ХарактеристикаНоменклатуры,
	               |	ВложенныйЗапрос.Комплект КАК Комплект,
	               |	ВложенныйЗапрос.ВесовойТовар,
	               |	ВложенныйЗапрос.Остаток,
	               |	ЛОЖЬ КАК ГрСигареты,
	               |	ЛОЖЬ КАК ГрСигаретыБлоками,
	               |	ЛОЖЬ КАК ГрБутылки,
	               |	ЛОЖЬ КАК Кратность0,
	               |	ЛОЖЬ КАК Кратность05,
	               |	ИСТИНА КАК ЭтоПодарСерт,
	               |	ЕСТЬNULL(ЗначенияСвойствОбъектовФиксБонус.Значение, """") КАК ФиксированныйБонус,
	               |	ЕСТЬNULL(ЗначенияСвойствОбъектовКратность.Значение.Наименование, """") КАК КратностьТовара,
	               |	ВложенныйЗапрос.Объем,
	               |	"""" КАК Бонус1,
	               |	"""" КАК Бонус2,
				   |	"""" КАК Бонус3
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ТоварыВРозницеОстатки.Номенклатура.Ссылка КАК Номенклатура,
	               |		ТоварыВРозницеОстатки.Номенклатура.Код КАК ПЛУ,
	               |		ТоварыВРозницеОстатки.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	               |		ЛОЖЬ КАК ЭтоГруппа,
	               |		НЕОПРЕДЕЛЕНО КАК ХарактеристикаНоменклатуры,
	               |		ЛОЖЬ КАК Комплект,
	               |		ЛОЖЬ КАК ВесовойТовар,
	               |		ТоварыВРозницеОстатки.КоличествоОстаток КАК Остаток,
	               |		ТоварыВРозницеОстатки.Номенклатура.ЕдиницаХраненияОстатков.Объем КАК Объем
	               |	ИЗ
	               |		РегистрНакопления.ТоварыВРознице.Остатки(
	               |				,
	               |				Номенклатура.ВидНоменклатуры = &ВН_ПодарочныйСертификат
	               |					И Склад = &Склад) КАК ТоварыВРозницеОстатки) КАК ВложенныйЗапрос
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектовФиксБонус
	               |		ПО ВложенныйЗапрос.Номенклатура = ЗначенияСвойствОбъектовФиксБонус.Объект
	               |			И (ЗначенияСвойствОбъектовФиксБонус.Свойство = &ФиксированныйБонус)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектовКратность
	               |		ПО ВложенныйЗапрос.Номенклатура = ЗначенияСвойствОбъектовКратность.Объект
	               |			И (ЗначенияСвойствОбъектовКратность.Свойство = &КратностьВКассе)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПодготовленнаяТаблица.Номенклатура,
	               |	ПодготовленнаяТаблица.ПЛУ,
	               |	ПодготовленнаяТаблица.ЕдиницаИзмерения,
	               |	ПодготовленнаяТаблица.ЭтоГруппа,
	               |	ПодготовленнаяТаблица.ХарактеристикаНоменклатуры,
	               |	ПодготовленнаяТаблица.Комплект,
	               |	ПодготовленнаяТаблица.ВесовойТовар,
	               |	ПодготовленнаяТаблица.Остаток,
	               |	ПодготовленнаяТаблица.ГрСигареты,
	               |	ПодготовленнаяТаблица.ГрСигаретыБлоками,
	               |	ПодготовленнаяТаблица.ГрБутылки,
	               |	ПодготовленнаяТаблица.Кратность0,
	               |	ПодготовленнаяТаблица.Кратность05,
	               |	ПодготовленнаяТаблица.ЭтоПодарСерт,
	               |	ПодготовленнаяТаблица.ФиксированныйБонус,
	               |	ПодготовленнаяТаблица.КратностьТовара,
	               |	ПодготовленнаяТаблица.Объем,
	               |	ПодготовленнаяТаблица.Бонус1,
	               |	ПодготовленнаяТаблица.Бонус2,
				   |	ПодготовленнаяТаблица.Бонус3
	               |ИЗ
	               |	ПодготовленнаяТаблица КАК ПодготовленнаяТаблица";
				   
	//Подарочные сертификаты!
	Запрос.УстановитьПараметр("ВН_ПодарочныйСертификат",	Справочники.ВидыНоменклатуры.НайтиПоКоду("000000019"));
	Запрос.УстановитьПараметр("Склад",						ОбСклад);
	Запрос.УстановитьПараметр("ВходТаблица",				Товары);
	
	Запрос.УстановитьПараметр("ФиксированныйБонус",	ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Фиксированный бонус"));
	Запрос.УстановитьПараметр("КратностьВКассе",	ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Кратность товара в кассе"));
	
	ТоварыВозврта=Запрос.Выполнить().Выгрузить();
	ТоварыВозврта.Колонки.Добавить("Цена");
	ТоварыВозврта.Колонки.Добавить("ЦенаНочь");
	
	СпНоменклатура  = ТоварыВозврта.ВыгрузитьКолонку("Номенклатура");
	//KAV++ Цены получим сразу
	ТаблицаЦенАТТ		= ПолучитьЦены(ОбСклад,СпНоменклатура);
	ТаблицаЦенАТТ.Индексы.Добавить("Номенклатура");
	ТаблицаЦенДоп		= ПолучитьЦеныДОП(ОбСклад,СпНоменклатура);
	ТаблицаЦенДоп.Индексы.Добавить("Номенклатура");
	ТаблицаЦенДопНочь	= ПолучитьЦеныДОП(ОбСклад,СпНоменклатура,Истина);
	ТаблицаЦенДопНочь.Индексы.Добавить("Номенклатура");
	//KAV--
	//идет анализ цен
	
	Бонус1=ИТИИндустрияОбщийМодульКлиентСервер.ПринадлежитКатегории(КассаККМ,Справочники.КатегорииОбъектов.НайтиПоКоду("000000174"));
	Бонус2=ИТИИндустрияОбщийМодульКлиентСервер.ПринадлежитКатегории(КассаККМ,Справочники.КатегорииОбъектов.НайтиПоКоду("000000175"));
	Бонус3=ИТИИндустрияОбщийМодульКлиентСервер.ПринадлежитКатегории(КассаККМ,Справочники.КатегорииОбъектов.НайтиПоКоду("000000177"));
	
	Колво=ТоварыВозврта.Количество();
	Сч=1;
	
	МассДляУдаления=Новый Массив;
	Для Каждого СтрокаТовара Из ТоварыВозврта Цикл
		Состояние("Подготовка данных для выгрузки",Окр(Сч/Колво));
		
		Цена  = ПолучитьЦеныИзТаблицы(СтрокаТовара.Номенклатура,ТаблицаЦенАТТ);
		Если НЕ (СтрокаТовара.Комплект И АкционныйТоварБезЦен) Тогда//не акционный товар
			Если Цена=0 Тогда//цены АТТ нету
				Цена = ПолучитьЦеныИзТаблицы(СтрокаТовара.Номенклатура,ТаблицаЦенДоп);//смотрим дополнительную цену
				Если Цена=0 Тогда//цены нету и дополнительной
					МассДляУдаления.Добавить(СтрокаТовара);
					//Сообщить("Для номенклатуры "+СтрокаТовара.Номенклатура.Наименование+" не определена цена. Позиция будет исключена из выгрузки",СтатусСообщения.Информация);
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			//Доп проверка. ПЛУ = ЧИСЛО
			Если НЕ ЭтоЧисло(СтрокаТовара.ПЛУ) Тогда
				Сообщить("Для номенклатуры "+СтрокаТовара.Номенклатура.Наименование+" задан не корректный код позиции """+СтрокаТовара.Номенклатура.Код+""". Позиция будет исключена из выгрузки",СтатусСообщения.Важное);
				МассДляУдаления.Добавить(СтрокаТовара);
			КонецЕсли;
		КонецЕсли;
		СтрокаТовара.Цена = Цена;
		Цена=ПолучитьЦеныИзТаблицы(СтрокаТовара.Номенклатура,ТаблицаЦенДопНочь);
		СтрокаТовара.ЦенаНочь=Цена;
		
		//09-07-2015 Переработка фиксированного бонуса.
		Если ЗначениеЗаполнено(СтрокаТовара.Бонус1) И Бонус1 Тогда
			СтрокаТовара.ФиксированныйБонус=Формат(СтрокаТовара.Бонус1,"ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=")+"%";
		ИначеЕсли ЗначениеЗаполнено(СтрокаТовара.Бонус2) И Бонус2 Тогда
			СтрокаТовара.ФиксированныйБонус=Формат(СтрокаТовара.Бонус2,"ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=")+"%";
		ИначеЕсли Бонус3 Тогда
			Если ЗначениеЗаполнено(СтрокаТовара.Бонус3) Тогда
				СтрокаТовара.ФиксированныйБонус=Формат(СтрокаТовара.Бонус3,"ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=")+"%";
			Иначе
				СтрокаТовара.ФиксированныйБонус=РасчетБонусаПоИерархии(СтрокаТовара.Номенклатура);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;		
	ТоварыВозврта.Колонки.Удалить("Бонус1");
	ТоварыВозврта.Колонки.Удалить("Бонус2");
	Состояние("Удаление товаров без цен из выгрузки");
	Для Каждого Эл Из МассДляУдаления Цикл
		ТоварыВозврта.Удалить(Эл);
	КонецЦикла;
	Возврат ТоварыВозврта
КонецФункции

Функция ПолучитьЦеныИзТаблицы(Номенклатура,ТаблицаЦен)
	СтрЦен=ТаблицаЦен.Найти(Номенклатура,"Номенклатура");
	Если СтрЦен=Неопределено Тогда
		Цена=0;
	Иначе
		Цена=СтрЦен.Цена;
	КонецЕсли;
	Возврат Цена;
КонецФункции

Функция РасчетБонусаПоИерархии(Знач Товар)
	ТекРодитель=Товар.Родитель.Родитель;
	Отбор=Новый Структура("Объект,Свойство",,ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("000000075"));
	Пока ЗначениеЗаполнено(ТекРодитель) Цикл
		Отбор.Объект=ТекРодитель;
		Зн=РегистрыСведений.ЗначенияСвойствОбъектов.Получить(Отбор).Значение;
		Если ЗначениеЗаполнено(Зн) Тогда
			Возврат Формат(Зн,"ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=")+"%";
		Иначе
			ТекРодитель=ТекРодитель.Родитель;
		КонецЕсли;
	КонецЦикла;
	
	Возврат "";
КонецФункции

Функция РассчетОбъема(Номенклатура)
	Объем=0;
	Если Номенклатура.Комплект Тогда
		Запрос=Новый Запрос("ВЫБРАТЬ
		|	СУММА(КомплектующиеНоменклатуры.ЕдиницаИзмерения.Объем * КомплектующиеНоменклатуры.Количество) КАК Объем
		|ИЗ
		|	РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
		|ГДЕ
		|	КомплектующиеНоменклатуры.Номенклатура = &Номенклатура");
		Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
		Рез=Запрос.Выполнить();
		Если Рез.Пустой() Тогда
			Объем=0;
		Иначе
			Объем=Рез.Выгрузить()[0].Объем;
		КонецЕсли;
	Иначе
		Объем=Номенклатура.ЕдиницаХраненияОстатков.Объем;
	КонецЕсли;
	Возврат Объем;
КонецФункции
//ВСПОМОГАТЕЛЬНЫЕ ФУНКЦИИ И ПРОЦЕДУРЫ

Процедура ОтправитьПисьмо(ЗаголовокПисьма,ТелоПисьма)

	УчетныеЗаписи = Новый Массив;
	УчетныеЗаписи.Добавить(Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию("1С").Ссылка);
	Письма = Новый Соответствие;
	СтруктураПисьма = Новый Структура;
	СтруктураПисьма.Вставить("Тема"         , ЗаголовокПисьма);
	СтруктураПисьма.Вставить("УчетнаяЗапись", Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоКоду("000000001"));
	Отбой=Символы.ПС+Символы.ВК;
	ТекстПисьма=Новый ТекстовыйДокумент;
	ТекстПисьма.ДобавитьСтроку(ТелоПисьма);
	ТекстПисьма.ДобавитьСтроку("Начало выгрузки:");
	ТекстПисьма.ДобавитьСтроку(Формат(ТекущаяДата(),"ДЛФ=DDT"));
	СтруктураПисьма.Вставить("Тело"      , ТекстПисьма.ПолучитьТекст());
	СписокКому = Новый СписокЗначений;
	СписокКому.Добавить(ПолучательПисем,"Ответственный");
	СтруктураПисьма.Вставить("Кому", СписокКому);
	Письмо = УправлениеЭлектроннойПочтой.НаписатьПисьмо(Справочники.Пользователи.НайтиПоКоду("Регламент"), СтруктураПисьма,,, Истина, "Ответ", ,,ложь);
	Если ЗначениеЗаполнено(Письмо) Тогда
		ОбъектПисьмо = Письмо.ПисьмоСсылка.ПолучитьОбъект();
		ОбъектПисьмо.СтатусПисьма = Перечисления.СтатусыПисем.Исходящее;
		ОбъектПисьмо.Записать();
		
		Если Не ЗначениеЗаполнено(ОбъектПисьмо.Ответственный) Тогда
			ОбъектПисьмо.Ответственный = Справочники.Пользователи.НайтиПоКоду("Регламент");
		КонецЕсли; 
		
		Письма.Вставить(Письмо.ПисьмоСсылка, ОбъектПисьмо);
		УправлениеЭлектроннойПочтой.ПолучениеОтправкаПисем(Неопределено, Справочники.Пользователи.НайтиПоКоду("Регламент"), УчетныеЗаписи, Письма, Истина,Ложь,Ложь);
	КонецЕсли;
	

КонецПроцедуры


//ПРОЦЕДУРЫ ОБЪЕКТОВ НА ФОРМЕ                              
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	ПолучитьСерверТО().ПодключитьКлиента(ЭтаФорма);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТорговоеОборудование.Модель.ОбработкаОбслуживания КАК ОбработкаОбслуживания,
		|	ТорговоеОборудование.КассаККМ.Ссылка КАК КассаККМ,
		|	ТорговоеОборудование.Идентификатор КАК ID,
		|	ТорговоеОборудование.КассаККМ.Склад КАК Склад,
		|	ТорговоеОборудование.КассаККМ.Наименование КАК Представление
		|ИЗ
		|	РегистрСведений.ТорговоеОборудование КАК ТорговоеОборудование
		|ГДЕ
		|	ТорговоеОборудование.Компьютер = &Компьютер
		|	И ТорговоеОборудование.Подключено
		|	И ТорговоеОборудование.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыТорговогоОборудования.ККМOffline)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТорговоеОборудование.КассаККМ.Склад.Родитель,
		|	ТорговоеОборудование.КассаККМ.Склад.Наименование,
		|	ТорговоеОборудование.КассаККМ.Наименование";

	Запрос.УстановитьПараметр("Компьютер", ПолучитьСерверТО().ПолучитьИмяКомпьютераТО());
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Стр=Новый Структура("ОбработкаОбслуживания,КассаККМ,Склад,ID");
		ЗаполнитьЗначенияСвойств(Стр,ВыборкаДетальныеЗаписи);
		спККМOffline.Добавить(Стр,ВыборкаДетальныеЗаписи.Представление,Ложь);
	КонецЦикла;
КонецПроцедуры

Процедура ПриЗакрытии()
	ПолучитьСерверТО().ОтключитьКлиента(ЭтаФорма);
КонецПроцедуры

Процедура УстановитьФлажкиНажатие(Элемент)
	СпККМOffline.ЗаполнитьПометки(Истина);	
КонецПроцедуры

Процедура СнятьФлажкиНажатие(Элемент)
	СпККМOffline.ЗаполнитьПометки(Ложь);
КонецПроцедуры

Процедура ККМOfflineПриАктивизацииСтроки(Элемент)
	Склад			=Элемент.ТекущаяСтрока.Значение.Склад;
	ККМOfflineID	=Элемент.ТекущаяСтрока.Значение.ID;
	ККМOffline		=РегистрыСведений.ТорговоеОборудование.Получить(Новый Структура("Идентификатор",ККМOfflineID)).Модель;
	Если Не ЗначениеЗаполнено(Склад) Тогда
		ПоказатьОповещениеПользователя("Заполните поле Склад в карточке кассы",ПолучитьНавигационнуюСсылку(Элемент.ТекущаяСтрока.Значение.КассаККМ.Ссылка),Элемент.ТекущаяСтрока.Значение.КассаККМ)
	КонецЕсли;
КонецПроцедуры

Процедура ККМOfflineВыбор(Элемент, ЭлементСписка)
	Склад			=Элемент.ТекущаяСтрока.Значение.Склад;
	ККМOfflineID	=Элемент.ТекущаяСтрока.Значение.ID;
	ККМOffline		=РегистрыСведений.ТорговоеОборудование.Получить(Новый Структура("Идентификатор",ККМOfflineID)).Модель;
	Если Не ЗначениеЗаполнено(Склад) Тогда
		ПоказатьОповещениеПользователя("Заполните поле Склад в карточке кассы",ПолучитьНавигационнуюСсылку(Элемент.ТекущаяСтрока.Значение.КассаККМ.Ссылка),Элемент.ТекущаяСтрока.Значение.КассаККМ)
	Иначе
		ОчиститьСообщения();
		Сообщить("Начало выгрузки: "+Формат(ТекущаяДата(),"ДЛФ=DT"));
		Состояние("Получение номенклатуры для выгрузки");
		
		Товары=ПолучитьТаблицуТоваровДляВыгрузки();
		Если Товары=Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Состояние("Получение цен для выгрузки");
		
		ТоварыВыгрузка=ПодготовитьТаблицуКВыгрузке(Товары,Склад,ККМOffline);
		
		Состояние("Выгрузка в кассу");
		Результат = ПолучитьСерверТО().ВыгрузитьТоварыККМ(ККМOfflineID, ТоварыВыгрузка,ТестовыйРежим);
		Если НЕ ЗначениеЗаполнено(Результат) Тогда
			ОписаниеРезультата = "Выгрузка завершена успешно.
			|Выгружено " + СокрЛП(ТоварыВыгрузка.Количество()) + " строк.";
		Иначе
			ОписаниеРезультата = ПолучитьСерверТО().ПолучитьТекстОшибкиККМOfflineТО(Результат);
		КонецЕсли;
		
		Состояние("");
		Сообщить("Конец выгрузки: "+Формат(ТекущаяДата(),"ДЛФ=DT"));
		ПоказатьОповещениеПользователя(ОписаниеРезультата);
	КонецЕсли;
КонецПроцедуры

//ПРОЦЕДУРЫ ОБЪЕКТОВ НА ФОРМЕ

//КНОПКИ ЗАГРУЗКИ КАСС
Процедура ОсновныеДействияФормыЗагрузитьВсеККМ(Кнопка)
//ZAM+++ 22.05.13 #1046904 Сделать загрузку товаров во все кассы по одной кнопке
    ОчиститьСообщения();
	Сообщить("ГРУППОВАЯ ВЫГРУЗКА КАСС");
	Сообщить("Начало выгрузки: "+Формат(ТекущаяДата(),"ДЛФ=DT"));
	Состояние("Получение номенклатуры для выгрузки");
	
	ТоварыКВыгрузке=ПолучитьТаблицуТоваровДляВыгрузки();
	Если ТоварыКВыгрузке=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Элемент Из СпККМOffline Цикл
		Если НЕ Элемент.Пометка Тогда Продолжить; КонецЕсли;
		Если СоздаватьОповещения Тогда
			ОтправитьПисьмо("Выгружаем кассу "+Элемент.Представление,"");
		КонецЕсли;
		Сообщить("Обрабатываем кассу "+Элемент.Представление);
		Состояние("Получение цен для выгрузки");
		
		КассаККМ=РегистрыСведений.ТорговоеОборудование.Получить(Новый Структура("Идентификатор",Элемент.Значение.ID)).Модель;
		Товары=ПодготовитьТаблицуКВыгрузке(ТоварыКВыгрузке,Элемент.Значение.Склад,КассаККМ);
		
		Состояние("Выгрузка в кассу");
		Результат = ПолучитьСерверТО().ВыгрузитьТоварыККМ(Элемент.Значение.ID, Товары);
		Если НЕ ЗначениеЗаполнено(Результат) Тогда
			ОписаниеРезультата = "Выгрузка завершена успешно.
			|Выгружено " + СокрЛП(Товары.Количество()) + " строк.";
		Иначе
			ОписаниеРезультата = ПолучитьСерверТО().ПолучитьТекстОшибкиККМOfflineТО(Результат);
		КонецЕсли;
		
		Состояние("");
	КонецЦикла;
	Сообщить("Конец выгрузки: "+Формат(ТекущаяДата(),"ДЛФ=DT"));
	Сообщить("ГРУППОВАЯ ВЫГРУЗКА КАСС ЗАВЕРШЕНА");
//ZAM--- 22.05.13
КонецПроцедуры

Процедура КнопкаВыполнитьНажатие(Кнопка)
	Если НЕ ЗначениеЗаполнено(ККМOffline) ИЛИ НЕ ЗначениеЗаполнено(Склад) Тогда
		Предупреждение("Касса и склад должны быть указаны",30);
		Возврат;
	КонецЕсли;
	//ОчиститьСообщения();
	//Сообщить("Начало выгрузки: "+Формат(ТекущаяДата(),"ДЛФ=DT"));
	//Состояние("Получение номенклатуры для выгрузки");
	
	Товары=ПолучитьТаблицуТоваровДляВыгрузки();
	Если Товары=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Состояние("Получение цен для выгрузки");
	
	ТоварыВыгрузка=ПодготовитьТаблицуКВыгрузке(Товары,Склад,ККМOffline);
	
	Состояние("Выгрузка в кассу");
	//Результат = ПолучитьСерверТО().ВыгрузитьТоварыККМ(ККМOffline, ТоварыВыгрузка);
	//Если НЕ ЗначениеЗаполнено(Результат) Тогда
	//	ОписаниеРезультата = "Выгрузка завершена успешно.
	//						 |Выгружено " + СокрЛП(ТоварыВыгрузка.Количество()) + " строк.";
	//Иначе
	//	ОписаниеРезультата = ПолучитьСерверТО().ПолучитьТекстОшибкиККМOfflineТО(Результат);
	//КонецЕсли;

	//Состояние("");
	//Сообщить("Конец выгрузки: "+Формат(ТекущаяДата(),"ДЛФ=DT"));
	//ПоказатьОповещениеПользователя(ОписаниеРезультата);
	Построитель=Новый ПостроительОтчета;
	Построитель.ИсточникДанных=Новый ОписаниеИсточникаДанных(ТоварыВыгрузка);
	ТабДок=Новый ТабличныйДокумент;
	Построитель.Вывести(ТабДок);
	ТабДок.ФиксацияСверху=4;
	ТабДок.Показать("Товары с ценами к выгрузке на кассу "+Строка(ККМOffline));
КонецПроцедуры
 
Процедура КнопкаНашиНажатие(Элемент)
	ГрСкладов=Справочники.Склады.НайтиПоКоду("000000103");
	Для Каждого Эл Из СпККМOffline Цикл
		Эл.Пометка=Эл.Значение.Склад.ПринадлежитЭлементу(ГрСкладов);
	КонецЦикла;
КонецПроцедуры
 
Процедура КнопкаФранчНажатие(Элемент)
	ГрСкладов=Справочники.Склады.НайтиПоКоду("000000103");
	Для Каждого Эл Из СпККМOffline Цикл
		Эл.Пометка=НЕ Эл.Значение.Склад.ПринадлежитЭлементу(ГрСкладов);
	КонецЦикла;
КонецПроцедуры
//КНОПКИ ЗАГРУЗКИ КАСС

//автопрогрузка 

Процедура АвтоВыгрузка(НашиМагазины=Истина) Экспорт

	//1. Только наши магазины
	Если НашиМагазины Тогда
		КнопкаНашиНажатие(Неопределено);
	Иначе
		КнопкаФранчНажатие(Неопределено);
	КонецЕсли;
	//2. Выгрузка 
	ОсновныеДействияФормыЗагрузитьВсеККМ(Неопределено);

КонецПроцедуры

СоздаватьОповещения=Ложь;
