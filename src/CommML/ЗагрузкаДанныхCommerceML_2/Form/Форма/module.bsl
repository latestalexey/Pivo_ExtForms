// Хранит цвет для назначения цвета ячеек таблиц с неопределенными соответствиями
Перем мЦветЯчейки;

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура открывает диалог выбора файла
//
// Параметры:
//  Элемент - элемент управления, для которого выбираем файл
//
Процедура ВыборФайла(Элемент)

	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);

	ДиалогВыбора.Фильтр     = "Файл данных (*.xml)|*.xml";
	ДиалогВыбора.Расширение = "xml";
	
	ДиалогВыбора.Заголовок ="Выберите файлы для загрузки";

	ДиалогВыбора.ПредварительныйПросмотр     = Ложь;
	ДиалогВыбора.ИндексФильтра               = 0;
	ДиалогВыбора.ПолноеИмяФайла              = Элемент.Значение;
	ДиалогВыбора.ПроверятьСуществованиеФайла = Ложь;
	ДиалогВыбора.МножественныйВыбор          = Ложь;
	Если ДиалогВыбора.Выбрать() Тогда
		
		Элемент.Значение = ДиалогВыбора.ПолноеИмяФайла;
		ИмяФайлаДанныхПриИзменении(Элемент);
		
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

// Процедура меняет цвет ячейки Номенклатура, если данные ячейки - пустая ссылка
// Вызывается ТОЛЬКО из обработков события ПриВыводеСтроки
//
// Параметры:
//  ОформлениеСтроки - свойство ОформлениеСтроки обратываемого табличного поля
//  ДанныеСтроки     - данные строки обратываемого табличного поля
//
Процедура ОформитьЯчейкуНоменклатуры(ОформлениеСтроки, ДанныеСтроки)

	Если НЕ ЗначениеЗаполнено(ДанныеСтроки.Номенклатура) Тогда
		ОформлениеСтроки.Ячейки.Номенклатура.ЦветФона = мЦветЯчейки;
		ОформлениеСтроки.Ячейки.Номенклатура.УстановитьТекст(ДанныеСтроки.Наименование);
	ИначеЕсли НЕ ЗначениеЗаполнено(ДанныеСтроки.ХарактеристикаНоменклатуры) Тогда
		ОформлениеСтроки.Ячейки.Номенклатура.УстановитьТекст(ДанныеСтроки.Номенклатура);
	Иначе
		ОформлениеСтроки.Ячейки.Номенклатура.УстановитьТекст(СокрЛП(ДанныеСтроки.Номенклатура) + " (" + СокрЛП(ДанныеСтроки.ХарактеристикаНоменклатуры) + ")");
	КонецЕсли;

КонецПроцедуры

// Процедура меняет цвет ячейки, если данные ячейки - пустая ссылка
// Вызывается ТОЛЬКО из обработков события ПриВыводеСтроки
//
// Параметры:
//  ОформлениеСтроки - свойство ОформлениеСтроки обратываемого табличного поля
//  ДанныеСтроки     - данные строки обратываемого табличного поля
//  ИмяЯчейки        - имя ячейки для которого назначается цвет, должно совпадать с именем поля данных
//
Процедура ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, ИмяЯчейки)

	Если ЗначениеНеОпределено(ДанныеСтроки[ИмяЯчейки]) Тогда
		ОформлениеСтроки.Ячейки[ИмяЯчейки].ЦветФона = мЦветЯчейки;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриИзмененииВариантаЗагрузкиДанных()
	
	Если ЗагружатьИзЭлПочты = ИСТИНА Тогда
		ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.Получить(1);
	Иначе
		ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.Получить(0);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	// Начало ЭлектронныеДокументы
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьОбменCommerceML") Тогда
		
		ТекстСообщения = ЭлектронныеДокументыСлужебныйВызовСервера.ТекстСообщенияОНеобходимостиНастройкиСистемы("РаботаСCommerceML");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		
	КонецЕсли;
	// Конец ЭлектронныеДокументы
КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	ЭлементыФормы.ТоварыКаталог.НастройкаОтбораСтрок.ИдДокумента.Доступность = ЛОЖЬ;
	ЭлементыФормы.ТоварыПрайс.НастройкаОтбораСтрок.ИдДокумента.Доступность = ЛОЖЬ;
	ЭлементыФормы.ТоварыКаталог.НастройкаОтбораСтрок.ИдДокумента.Доступность = ЛОЖЬ;

	ПриИзмененииВариантаЗагрузкиДанных();

КонецПроцедуры

// Процедура - обработчик события "ПослеВосстановленияЗначений" формы
//
Процедура ПослеВосстановленияЗначений()

	ПриИзмененииВариантаЗагрузкиДанных();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
//ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ФОРМЫ

// Процедура - обработчик события НачалоВыбора элемента ИмяФайлаДанных.
//
Процедура ИмяФайлаДанныхНачалоВыбора(Элемент, СтандартнаяОбработка)

	ВыборФайла(Элемент);

КонецПроцедуры

// Процедура - обработчик события "Нажатие" кнопки "КнопкаНастройкаПериода".
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	НП = Новый НастройкаПериода;
	НП.УстановитьПериод(ДатаНачала, ДатаОкончания);
	Если НП.Редактировать() Тогда
		ДатаНачала    = НП.ПолучитьДатуНачала();
		ДатаОкончания = НП.ПолучитьДатуОкончания();
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при нажатии кнопки "ОткрытьСоответствияОбъектов" 
// командной панели формы  для заполнения таблиц соответствий объектов и открытия
// формы определения соответствий
//
Процедура КоманднаяПанельОткрытьСоответствияОбъектов(Кнопка)

	ОткрытьФормуСоответствий(,, ЭтаФорма);

КонецПроцедуры

Процедура ВыполнитьЧтениеДанных(ЗадаватьВопросОЧтенииДанных = Истина)
	
	Если ЗагружатьИзЭлПочты Тогда
		ОбработатьЭлПисьма(ДатаНачала, ДатаОкончания)
	Иначе
		ОбработатьФайлы(ИмяФайлаДанных, ЗадаватьВопросОЧтенииДанных);
	КонецЕсли;
	
	ОбработатьЗагруженныеДанные();
	
	Если ЭлДокументы.Количество() > 0 Тогда
		ЭлементыФормы.ЭлДокументы.ТекущаяСтрока = ЭлДокументы[0];
		
		ЭтоДокумент = ОпределитьПоСтрокеТаблицыЭтоДокументОбмена(ЭлДокументы[0]);
	
		ЭлементыФормы.ЭлДокументы.Колонки.Документ.Доступность = ЭтоДокумент;
		ЭлементыФормы.ЭлДокументы.Колонки.Документ.Видимость = ЭтоДокумент;						
				
	Иначе
		ЭлементыФормы.ПанельТаблиц.ТекущаяСтраница = ЭлементыФормы.ПанельТаблиц.Страницы.Получить(0);
	КонецЕсли;
	
	Если ЭлДокументы.Количество() = 0 Тогда
		ЭлементыФормы.КоманднаяПанельНижняя.Кнопки.СохранитьДанные.Доступность = Ложь;	
		Возврат;
	КонецЕсли;
	
	// проведем тестирование данные сразу же после загрузки
	СтрокаСообщенияПользователю = "";
	РезультатТестирования = ТестированиеДанных(СтрокаСообщенияПользователю);
		
	ЭлементыФормы.КоманднаяПанельНижняя.Кнопки.СохранитьДанные.Доступность = РезультатТестирования;
	
 	Если НЕ РезультатТестирования Тогда
		
		Предупреждение(СтрокаСообщенияПользователю);
		ОткрытьФормуСоответствий(,,ЭтаФорма);		
		
	Иначе
		
		ПредложитьСохранитьДанныеВИнформационнуюБазу();
		
	КонецЕсли;	
		
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "ПрочитатьДанные" 
// командной панели формы для чтения и обработки данных из файла или каталога
//
Процедура КоманднаяПанельПрочитатьДанные(Кнопка)

	ВыполнитьЧтениеДанных(Ложь);
	
КонецПроцедуры

Процедура ВыполнитьСохранениеданныхВФорме(ЗадаватьВопросПользователю = Истина)
	
	КоличествоОбработанныхОбъектов = 0;
	ОбъектыУспешноСохранены = СохранитьДанные(ЗадаватьВопросПользователю, КоличествоОбработанныхОбъектов);
	
	Если ТаблицаЗаписанныхДокументов.Количество() > 0 Тогда
		
		ФормаЗаписаныхДокументов = ПолучитьФорму("ФормаЗаписанныхДокументов");
		ФормаЗаписаныхДокументов.ОбъектыУспешноСохранены = ОбъектыУспешноСохранены;
		ФормаЗаписаныхДокументов.Открыть();
		
	ИначеЕсли КоличествоОбработанныхОбъектов > 0 Тогда
		
		Если Не ОбъектыУспешноСохранены Тогда
			Предупреждение("Возникли ошибки при сохранении объектов в информационную базу. ОБЪЕКТЫ НЕ СОХРАНЕНЫ!");
		Иначе
			Предупреждение("Загруженные объекты успешно сохранены в информационную базу!");
		КонецЕсли;
		
	КонецЕсли;	
	
	Если ЭлДокументы.Количество() = 0 Тогда
		
		Если ОбъектыУспешноСохранены Тогда
			
			Если ЗагружатьИзЭлПочты Тогда
				ОтметитьПисьмаКакПрочтенные();
			КонецЕсли;
			ЭтаФорма.Закрыть();
			
		КонецЕсли;
		
		ЭлементыФормы.КоманднаяПанельНижняя.Кнопки.СохранитьДанные.Доступность = Ложь;	
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "СохранитьДанные" 
// командной панели формы для сохранения электронных документов в базе
//
Процедура КоманднаяПанельСохранитьДанные(Кнопка)
	
	ВыполнитьСохранениеданныхВФорме();
	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "УстановитьФлажки" командной панели
// табличного поля ЭлДокументы
//
Процедура КоманднаяПанельДокументыУстановитьФлажки(Кнопка)

	Для Каждого СтрокаТаблицыДокумент Из ЭлДокументы Цикл
		СтрокаТаблицыДокумент.Обрабатывать = Истина;
	КонецЦикла;

КонецПроцедуры

// Процедура вызывается при нажатии кнопки "СнятьФлажки" командной панели
// табличного поля ЭлДокументы
//
Процедура КоманднаяПанельДокументыСнятьФлажки(Кнопка)

	Для Каждого СтрокаТаблицыДокумент Из ЭлДокументы Цикл
		СтрокаТаблицыДокумент.Обрабатывать = Ложь;
	КонецЦикла;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ЭлДокументы

// Процедура - обработчик события "Выбор" табличного поля ЭлДокументы
//
Процедура ЭлДокументыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)

	Если Колонка.Имя = "Контрагент" Тогда
		
		Если НЕ ЗначениеНеПустаяСсылка(ВыбраннаяСтрока.Контрагент) Тогда
		
			НачОтбор            = Новый Структура("Контрагент");
			НачОтбор.Контрагент = ВыбраннаяСтрока.Контрагент;
			ОткрытьФормуСоответствий("Контрагенты", НачОтбор, ЭтаФорма);
			СтандартнаяОбработка = Ложь;		
		
		КонецЕсли;
		
	ИначеЕсли Колонка.Имя = "Организация" И ОпределитьПоСтрокеТаблицыЭтоДокументОбмена(ВыбраннаяСтрока) Тогда
		
		Если НЕ ЗначениеНеПустаяСсылка(ВыбраннаяСтрока.Организация) Тогда
			
			НачОтбор                  = Новый Структура("Организация");
			НачОтбор.Организация = ВыбраннаяСтрока.Организация;
			ОткрытьФормуСоответствий("Организации", НачОтбор, ЭтаФорма);
			СтандартнаяОбработка = Ложь;
			
		КонецЕсли;

	ИначеЕсли Колонка.Имя = "Валюта" И ОпределитьПоСтрокеТаблицыЭтоДокументОбмена(ВыбраннаяСтрока) Тогда
		
		Если НЕ ЗначениеНеПустаяСсылка(ВыбраннаяСтрока.Валюта) Тогда
			
			НачОтбор        = Новый Структура("Валюта");
			НачОтбор.Валюта = ВыбраннаяСтрока.Валюта;
			ОткрытьФормуСоответствий("Валюты", НачОтбор, ЭтаФорма);	
			СтандартнаяОбработка = Ложь;
			
		КонецЕсли;
		
	ИначеЕсли Колонка.Имя = "Банк"
		ИЛИ Колонка.Имя = "БанкНЕПрямыхРасходов" Тогда
		
		Если НЕ ЗначениеНеПустаяСсылка(ВыбраннаяСтрока[Колонка.Имя]) Тогда
		
			НачОтбор                  = Новый Структура("Банк");
			НачОтбор.Банк = ВыбраннаяСтрока[Колонка.Имя];
			ОткрытьФормуСоответствий("Банки", НачОтбор, ЭтаФорма);
			СтандартнаяОбработка = Ложь;
			
		КонецЕсли;
		
	ИначеЕсли Колонка.Имя = "НомерСчета" Тогда
		
		Если НЕ ЗначениеНеПустаяСсылка(ВыбраннаяСтрока[Колонка.Имя]) Тогда
			
			НачОтбор                  = Новый Структура("НомерСчета");
			НачОтбор.НомерСчета = ВыбраннаяСтрока[Колонка.Имя];
			ОткрытьФормуСоответствий("БанковскиеСчета", НачОтбор, ЭтаФорма);
			СтандартнаяОбработка = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "При активизации строки" табличного поля ЭлДокументы
//
Процедура ЭлДокументыПриАктивизацииСтроки(Элемент)

	Если Элемент.ТекущиеДанные = Неопределено Тогда
		ЭлементыФормы.ПанельТаблиц.ТекущаяСтраница = ЭлементыФормы.ПанельТаблиц.Страницы.Получить(0);
		
	ИначеЕсли Элемент.ТекущиеДанные.Тип = "Каталог" Тогда
		ЭлементыФормы.ТоварыКаталог.ОтборСтрок.ИдДокумента.Значение      = Элемент.ТекущиеДанные.Ид;
		ЭлементыФормы.ТоварыКаталог.ОтборСтрок.ИдДокумента.Использование = ИСТИНА;

		ЭлементыФормы.ПанельТаблиц.ТекущаяСтраница = ЭлементыФормы.ПанельТаблиц.Страницы.Получить(0);

	ИначеЕсли Элемент.ТекущиеДанные.Тип = "Прайс" Тогда
		ЭлементыФормы.ТоварыПрайс.ОтборСтрок.ИдДокумента.Значение      = Элемент.ТекущиеДанные.Ид;
		ЭлементыФормы.ТоварыПрайс.ОтборСтрок.ИдДокумента.Использование = ИСТИНА;

		ЭлементыФормы.ПанельТаблиц.ТекущаяСтраница = ЭлементыФормы.ПанельТаблиц.Страницы.Получить(1);

	ИначеЕсли Элемент.ТекущиеДанные.Тип = "Счет-фактура полученный" Тогда
		
		ЭлементыФормы.ТоварыДокумент.ОтборСтрок.ИдДокумента.Значение      = Элемент.ТекущиеДанные.Ид;
		ЭлементыФормы.ТоварыДокумент.ОтборСтрок.ИдДокумента.Использование = ИСТИНА;

		ЭлементыФормы.ПанельТаблиц.ТекущаяСтраница = ЭлементыФормы.ПанельТаблиц.Страницы.Получить(3);
		
	ИначеЕсли ОпределитьПоСтрокеТаблицыЭтоДокументОбмена(Элемент.ТекущиеДанные) Тогда
		ЭлементыФормы.ТоварыДокумент.ОтборСтрок.ИдДокумента.Значение      = Элемент.ТекущиеДанные.Ид;
		ЭлементыФормы.ТоварыДокумент.ОтборСтрок.ИдДокумента.Использование = ИСТИНА;

		ЭлементыФормы.ПанельТаблиц.ТекущаяСтраница = ЭлементыФормы.ПанельТаблиц.Страницы.Получить(2);

	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "При выводе строки" табличного поля ЭлДокументы
//
Процедура ЭлДокументыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, "Контрагент");
	ЭтоДокумент = ОпределитьПоСтрокеТаблицыЭтоДокументОбмена(ДанныеСтроки);
			
	Если ЭтоДокумент Тогда
		
		ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, "Валюта");
		ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, "Организация");
		ОформлениеСтроки.Ячейки.ВидДокумента.ИндексКартинки = 0;
		
		Если ЗначениеНеПустаяСсылка (ДанныеСтроки.Документ) Тогда
			ОформлениеСтроки.Ячейки["Документ"].ЦветФона = WebЦвета.БледноЗеленый;
		КонецЕсли;
		
	ИначеЕсли ДанныеСтроки.Тип = "Каталог" Тогда
		ОформлениеСтроки.Ячейки.ВидДокумента.ИндексКартинки = 2;
	ИначеЕсли ДанныеСтроки.Тип = "Прайс" Тогда
		ОформлениеСтроки.Ячейки.ВидДокумента.ИндексКартинки = 0;
	КонецЕсли;
	
	ОформлениеСтроки.Ячейки.ВидДокумента.ОтображатьКартинку = Истина;	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ТоварыКаталог

// Процедура - обработчик события "Выбор" табличного поля ТоварыКаталог
//
Процедура ТоварыКаталогВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)

	Если Колонка.Имя = "Номенклатура" Тогда
		НачОтбор                         = Новый Структура("Наименование, Артикул, ШтрихКод, БазоваяЕдиницаИзмерения");
		НачОтбор.Наименование            = ВыбраннаяСтрока.Наименование;
		НачОтбор.Артикул                 = ВыбраннаяСтрока.Артикул;
		НачОтбор.ШтрихКод                = ВыбраннаяСтрока.ШтрихКод;
		НачОтбор.БазоваяЕдиницаИзмерения = ВыбраннаяСтрока.БазоваяЕдиницаИзмерения;
		ОткрытьФормуСоответствий("Номенклатура", НачОтбор, ЭтаФорма);
	ИначеЕсли Колонка.Имя = "БазоваяЕдиницаИзмерения" Тогда
		НачОтбор                  = Новый Структура("ЕдиницаИзмерения");
		НачОтбор.ЕдиницаИзмерения = ВыбраннаяСтрока.БазоваяЕдиницаИзмерения;
		ОткрытьФормуСоответствий("ЕдиницыИзмерения", НачОтбор, ЭтаФорма);
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "При выводе строки" табличного поля ТоварыКаталог
//
Процедура ТоварыКаталогПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	ОформитьЯчейкуНоменклатуры(ОформлениеСтроки, ДанныеСтроки);
	ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, "БазоваяЕдиницаИзмерения");

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ТоварыПрайс

// Процедура - обработчик события "Выбор" табличного поля ТоварыПрайс
//
Процедура ТоварыПрайсВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)

	Если Колонка.Имя = "Номенклатура" Тогда
		НачОтбор                         = Новый Структура("Наименование, Артикул, ШтрихКод, БазоваяЕдиницаИзмерения, Ид");
		НачОтбор.Наименование            = ВыбраннаяСтрока.Наименование;
		НачОтбор.Артикул                 = ВыбраннаяСтрока.Артикул;
		НачОтбор.ШтрихКод                = ВыбраннаяСтрока.ШтрихКод;
		НачОтбор.БазоваяЕдиницаИзмерения = ВыбраннаяСтрока.БазоваяЕдиницаИзмерения;
		НачОтбор.БазоваяЕдиницаИзмерения = ВыбраннаяСтрока.БазоваяЕдиницаИзмерения;
		НачОтбор.Ид                      = ВыбраннаяСтрока.Ид;
		ОткрытьФормуСоответствий("Номенклатура", НачОтбор, ЭтаФорма);

	ИначеЕсли Колонка.Имя = "БазоваяЕдиницаИзмерения" Тогда
		НачОтбор                  = Новый Структура("ЕдиницаИзмерения");
		НачОтбор.ЕдиницаИзмерения = ВыбраннаяСтрока.БазоваяЕдиницаИзмерения;
		ОткрытьФормуСоответствий("ЕдиницыИзмерения", НачОтбор, ЭтаФорма);

	ИначеЕсли Колонка.Имя = "ЕдиницаИзмерения" Тогда
		НачОтбор                  = Новый Структура("ЕдиницаИзмерения");
		НачОтбор.ЕдиницаИзмерения = ВыбраннаяСтрока.ЕдиницаИзмерения;
		ОткрытьФормуСоответствий("ЕдиницыИзмерения", НачОтбор, ЭтаФорма);

	ИначеЕсли Колонка.Имя = "Валюта" Тогда
		НачОтбор        = Новый Структура("Валюта");
		НачОтбор.Валюта = ВыбраннаяСтрока.Валюта;
		ОткрытьФормуСоответствий("Валюты", НачОтбор, ЭтаФорма);

	ИначеЕсли Колонка.Имя = "ТипЦены" Тогда
		НачОтбор                  = Новый Структура("ТипЦены ,Контрагент");
		НачОтбор.ТипЦены    = ВыбраннаяСтрока.ТипЦены;
		НачОтбор.Контрагент = ВыбраннаяСтрока.Контрагент;
		ОткрытьФормуСоответствий("ТипыЦенКонтрагентов", НачОтбор, ЭтаФорма);
		
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "При выводе строки" табличного поля ТоварыПрайс
//
Процедура ТоварыПрайсПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	ОформитьЯчейкуНоменклатуры(ОформлениеСтроки, ДанныеСтроки);
	ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, "БазоваяЕдиницаИзмерения");
	//ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, "ЕдиницаИзмерения");
	ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, "Валюта");
	ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, "ТипЦены");

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ТоварыДокумент

// Процедура - обработчик события "Выбор" табличного поля ТоварыДокумент
//
Процедура ТоварыДокументВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)

	Если Колонка.Имя = "Номенклатура" Тогда
		НачОтбор                         = Новый Структура("Наименование, Артикул, ШтрихКод, БазоваяЕдиницаИзмерения, Ид");
		НачОтбор.Наименование            = ВыбраннаяСтрока.Наименование;
		НачОтбор.Артикул                 = ВыбраннаяСтрока.Артикул;
		НачОтбор.ШтрихКод                = ВыбраннаяСтрока.ШтрихКод;
		НачОтбор.БазоваяЕдиницаИзмерения = ВыбраннаяСтрока.БазоваяЕдиницаИзмерения;
		НачОтбор.БазоваяЕдиницаИзмерения = ВыбраннаяСтрока.БазоваяЕдиницаИзмерения;
		НачОтбор.Ид                      = ВыбраннаяСтрока.Ид;
		ОткрытьФормуСоответствий("Номенклатура", НачОтбор, ЭтаФорма);

	ИначеЕсли Колонка.Имя = "БазоваяЕдиницаИзмерения"
		ИЛИ Колонка.Имя = "ЕдиницаИзмерения" Тогда
		НачОтбор                  = Новый Структура("ЕдиницаИзмерения");
		НачОтбор.ЕдиницаИзмерения = ВыбраннаяСтрока[Колонка.Имя];
		ОткрытьФормуСоответствий("ЕдиницыИзмерения", НачОтбор, ЭтаФорма);
    
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "При выводе строки" табличного поля ТоварыДокумент
//
Процедура ТоварыДокументПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	ОформитьЯчейкуНоменклатуры(ОформлениеСтроки, ДанныеСтроки);
	ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, "БазоваяЕдиницаИзмерения");
	//ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, "ЕдиницаИзмерения");

КонецПроцедуры

Процедура ОбработкаОткрытьФайл(Имя, СтандартнаяОбработка) Экспорт

	СтандартнаяОбработка = Ложь;
	ЗапуститьПриложение("explorer " + Имя);
	
КонецПроцедуры

Процедура ИмяФайлаДанныхОткрытие(Элемент, СтандартнаяОбработка)
	
	ОбработкаОткрытьФайл(Элемент.Значение, СтандартнаяОбработка);	
	
КонецПроцедуры

Процедура ИмяФайлаДанныхПриИзменении(Элемент)
	
	Если ПустаяСтрока(Элемент.Значение) тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьЧтениеДанных(Истина);	
	
КонецПроцедуры

Процедура ВариантЗагрузкиДанныхПриИзменении(Элемент)
	
	ПриИзмененииВариантаЗагрузкиДанных();
	
КонецПроцедуры

Процедура КоманднаяПанельНастройки(Кнопка)
	
	ФормаНастройки = ПолучитьФорму("Настройки", ЭтаФорма);
	ФормаНастройки.Открыть();	
	
КонецПроцедуры

Процедура ДокументыОснованияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, "ДокументОснования");	
	
КонецПроцедуры

Процедура ПредложитьСохранитьДанныеВИнформационнуюБазу()
	
	// предложим пользователю сохранить данные в файл обмена
	ОтветПользователя = Вопрос("Сохранить данные в информационную базу?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, "Сохранение данных");
	Если ОтветПользователя = КодВозвратаДиалога.Да Тогда
				
		ВыполнитьСохранениеданныхВФорме(Ложь);
				
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Сопоставление" Тогда
		
		ПередОткрытиемБылиНеСопоставленные = Параметр.ПередОткрытиемБылиНеСопоставленные; 
		ПриЗакрытииЕстьНесопоставленные = Параметр.ПриЗакрытииЕстьНесопоставленные; 
		
		ЭлементыФормы.КоманднаяПанельНижняя.Кнопки.СохранитьДанные.Доступность = НЕ ПриЗакрытииЕстьНесопоставленные;
		
		Если ПередОткрытиемБылиНеСопоставленные
			И НЕ ПриЗакрытииЕстьНесопоставленные Тогда
			
			ПредложитьСохранитьДанныеВИнформационнуюБазу();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтметитьПисьмаКакПрочтенные()
	
	Если мМассивЗагруженныхПисем = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Эл Из мМассивЗагруженныхПисем Цикл
		
		ОбъектПисьмо = Эл.ПолучитьОбъект();
			
		Если ОбъектПисьмо = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Попытка
			
			ОбъектПисьмо.НеРассмотрено = Ложь;
			Попытка
				ОбъектПисьмо.Ответственный = мТекущийПользователь; 
			Исключение
			КонецПопытки;
			
			ОбъектПисьмо.Записать();
			
		Исключение
			
			ОбщегоНазначения.СообщитьОбОшибке("Ошибка при попытке пометить письмо: " +
				Строка(ОбъектПисьмо) + " как прочтенное. Текст ошибки: " + ОписаниеОшибки());	
			
		КонецПопытки;
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ПометитьОбработанныеПисьмаКакПрочтенныеНажатие(Элемент)
	
	ОтметитьПисьмаКакПрочтенные();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

//Назначаем цвет для ячеек с объектами не имеющими соответствий в базе
мЦветЯчейки = WebЦвета.ЗамшаСветлый;

//Заполнение служебных структур данных для управления загрузкой данных
ЗаполнитьСтруктурыЗагрузки();
