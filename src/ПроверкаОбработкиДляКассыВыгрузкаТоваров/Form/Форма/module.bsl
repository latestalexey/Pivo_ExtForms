Перем Модель;
Перем МодельИД;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	Отказ=Ложь;
	Если Не ЗначениеЗаполнено(КассаККМ) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не выбрана касса ККМ",Отказ);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Обработка) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана проверяемая обработка",Отказ);
	Иначе
		Файл=Новый Файл(Обработка);
		Если Не Файл.Существует() Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Указанный файл не существует",Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если Не Отказ Тогда
		ВыполнитьВыгрузкуТоваров();
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаНачалоВыбора(Элемент, СтандартнаяОбработка)
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = Обработка;
	Фильтр = "Внеш. обработка|*.epf";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.Заголовок = "Выберите файлы";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		Обработка=ДиалогОткрытияФайла.ПолноеИмяФайла;
	КонецЕсли;
КонецПроцедуры

Процедура ВыполнитьВыгрузкуТоваров()
	//1. Подготовка всяких обработок
	ОбработкаВыгрузки=Справочники.ВнешниеОбработки.НайтиПоКоду("000000240");
	Темп=ПолучитьИмяВременногоФайла("erf");
	ОбработкаВыгрузки.ХранилищеВнешнейОбработки.Получить().Записать(Темп);
	ОбработкаВыгрузкаТоваров=ВнешниеОбработки.Создать(Темп,Ложь);
	
	ОбработкаТО=ВнешниеОбработки.Создать(Обработка);
	
	//2. Формируем выгрузку
	ОчиститьСообщения();
	Сообщить("Начало выгрузки: "+Формат(ТекущаяДата(),"ДЛФ=DT"));
	Состояние("Получение номенклатуры для выгрузки");
	
	Товары=ОбработкаВыгрузкаТоваров.ПолучитьТаблицуТоваровДляВыгрузки();
	Если Товары=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Состояние("Получение цен для выгрузки");
	

	ТоварыВыгрузка=ОбработкаВыгрузкаТоваров.ПодготовитьТаблицуКВыгрузке(Товары,КассаККМ.Склад,Модель);
	
	Состояние("Выгрузка в кассу");
	Объект=Неопределено;
	Результат = ПолучитьСерверТО().ПолучитьОбъектДрайвера(МодельИД, ОбработкаВыгрузки, Объект,Ложь);
	
	Результат  = ОбработкаТО.ВыгрузитьТовары(Объект, Товары,Ложь);
	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		ОписаниеРезультата = "Выгрузка завершена успешно.
		|Выгружено " + СокрЛП(ТоварыВыгрузка.Количество()) + " строк.";
	Иначе
		ОписаниеРезультата = ПолучитьСерверТО().ПолучитьТекстОшибкиККМOfflineТО(Результат);
	КонецЕсли;

	Сообщить("Конец выгрузки: "+Формат(ТекущаяДата(),"ДЛФ=DT"));
	Состояние("");
КонецПроцедуры

Процедура КассаККМПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		ПолучитьМодель(Элемент.Значение);
	КонецЕсли;
КонецПроцедуры

Процедура ПолучитьМодель(КассаККМВх)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ТорговоеОборудование.Модель,
		|	ТорговоеОборудование.Идентификатор
		|ИЗ
		|	РегистрСведений.ТорговоеОборудование КАК ТорговоеОборудование
		|ГДЕ
		|	ТорговоеОборудование.КассаККМ = &КассаККМ";
	
	Запрос.УстановитьПараметр("КассаККМ", КассаККМВх);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		МодельИД	=ВыборкаДетальныеЗаписи.Идентификатор;
		Модель		=ВыборкаДетальныеЗаписи.Модель;
	Иначе
		Модель		=Справочники.ТорговоеОборудование.ПустаяСсылка();
		МодельИД	="";
	КонецЕсли;
КонецПроцедуры

Процедура ПослеВосстановленияЗначений()
	ПолучитьМодель(КассаККМ);
КонецПроцедуры

Процедура ПриОткрытии()
	ПолучитьСерверТО().ПодключитьКлиента(ЭтаФорма);
КонецПроцедуры

Процедура ПриЗакрытии()
	ПолучитьСерверТО().ОтключитьКлиента(ЭтаФорма);
КонецПроцедуры
