Перем мВалюта;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	ПостроительОтчета.Параметры.Вставить("Дата",НачалоДня(ДатаПереноса));
	ПостроительОтчета.Выполнить();
	ВыборкаКонтрагентов=ПостроительОтчета.Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Индикатор=0;
	ЭлементыФормы.Индикатор.МаксимальноеЗначение=ВыборкаКонтрагентов.Количество();
	СтруктураРаботы=Новый Структура("Контрагент,ДоговорКонтрагента,НовыйДоговор,Организация,СуммаВзаиморасчетовОстаток");
	ТабличноеПолеРезультат.Очистить();
	Пока ВыборкаКонтрагентов.Следующий() Цикл
		ВыборкаДоговоров=ВыборкаКонтрагентов.Выбрать();
		Пока ВыборкаДоговоров.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(СтруктураРаботы,ВыборкаДоговоров);
			Если Не ЗначениеЗаполнено(СтруктураРаботы.НовыйДоговор) Тогда
				СтруктураРаботы.НовыйДоговор=СоздатьДоговор(СтруктураРаботы.ДоговорКонтрагента);
			КонецЕсли;
			СтрокаНовая=ТабличноеПолеРезультат.Добавить();
			СтрокаНовая.Контрагент	= СтруктураРаботы.Контрагент;
			СтрокаНовая.Договор		= СтруктураРаботы.ДоговорКонтрагента;
			СтрокаНовая.ДоговорНовый= СтруктураРаботы.НовыйДоговор;
			СтрокаНовая.ДокументКорректировки	= СоздатьКорректировкуДолга(СтруктураРаботы);
		КонецЦикла;
		Индикатор=Индикатор+1;
	КонецЦикла;
КонецПроцедуры

Процедура ПриОткрытии()
	ПостроительОтчета.Текст="ВЫБРАТЬ
	                        |	ВзаиморасчетыСКонтрагентамиОстатки.Контрагент КАК Контрагент,
	                        |	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента,
	                        |	НовыеДоговоры.Ссылка КАК НовыйДоговор,
	                        |	ВзаиморасчетыСКонтрагентамиОстатки.Сделка,
	                        |	ВзаиморасчетыСКонтрагентамиОстатки.Организация,
	                        |	ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток,
	                        |	ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток
	                        |ИЗ
	                        |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&Дата, НЕ ДоговорКонтрагента.ВестиПоДокументамРасчетовСКонтрагентом {(Организация).*, (Контрагент).*, (ДоговорКонтрагента).*}) КАК ВзаиморасчетыСКонтрагентамиОстатки
	                        |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК НовыеДоговоры
	                        |		ПО ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец = НовыеДоговоры.Владелец
	                        |			И ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Организация = НовыеДоговоры.Организация
	                        |			И ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ВидДоговора = НовыеДоговоры.ВидДоговора
	                        |			И (НовыеДоговоры.ВестиПоДокументамРасчетовСКонтрагентом)
	                        |
	                        |УПОРЯДОЧИТЬ ПО
	                        |	Контрагент
	                        |ИТОГИ ПО
	                        |	Контрагент";
	ПостроительОтчета.Выполнить();
КонецПроцедуры

Функция СоздатьДоговор(ВхДоговор)
	Об=ВхДоговор.ПолучитьОбъект();
	НовДоговор=Об.Скопировать();
	НовДоговор.ВестиПоДокументамРасчетовСКонтрагентом=Истина;
	НовДоговор.Записать();
	Сообщить("Создан новый договор для "+Строка(ВхДоговор.Владелец));
	Об.Наименование="(не испол) "+Об.Наименование;
	Об.Записать();
	Если ВхДоговор.Владелец.ОсновнойДоговорКонтрагента=ВхДоговор Тогда
		ОбВладелец=ВхДоговор.Владелец.ПолучитьОбъект();
		ОбВладелец.ОсновнойДоговорКонтрагента=НовДоговор.Ссылка;
		ОбВладелец.Записать();
		Сообщить("установлен как основной договор контрагента");
	КонецЕсли;
	
	Возврат НовДоговор.Ссылка;
КонецФункции

Функция СоздатьКорректировкуДолга(СтрокаДанных)
	КоррДолга=Документы.КорректировкаДолга.СоздатьДокумент();
	КоррДолга.ВидОперации		= Перечисления.ВидыОперацийКорректировкаДолга.ПереносЗадолженности;
	КоррДолга.ВалютаДокумента	= мВалюта;
	КоррДолга.Дата				= ДатаПереноса-1;
	КоррДолга.ДоговорКонтрагента= СтрокаДанных.НовыйДоговор;
	КоррДолга.Комментарий		= "Создан автоматически "+ТекущаяДата()+" обработкой Перевод договоров на расчет по документам";
	КоррДолга.КонтрагентДебитор	= СтрокаДанных.Контрагент;
	КоррДолга.КонтрагентКредитор= СтрокаДанных.Контрагент;
	КоррДолга.КратностьДокумента= 1;
	КоррДолга.КурсДокумента		= 1;
	КоррДолга.Организация		= СтрокаДанных.Организация;
	КоррДолга.Ответственный		= глЗначениеПеременной("глТекущийПользователь");
	КоррДолга.ОтражатьВУправленческомУчете=Истина;
	
	СтрокаТЧСписания=КоррДолга.СуммыДолга.Добавить();
	СтрокаТЧПереноса=КоррДолга.СуммыДолга.Добавить();
	Если СтрокаДанных.СуммаВзаиморасчетовОстаток<0 Тогда
		СтрокаТЧСписания.ВидЗадолженности=Перечисления.ВидыЗадолженности.Кредиторская;
		СтрокаТЧПереноса.ВидЗадолженности=Перечисления.ВидыЗадолженности.Дебиторская;
		
		СтрокаТЧСписания.Сумма=-СтрокаДанных.СуммаВзаиморасчетовОстаток;
		СтрокаТЧПереноса.Сумма=-СтрокаДанных.СуммаВзаиморасчетовОстаток;
	Иначе 
		СтрокаТЧСписания.ВидЗадолженности=Перечисления.ВидыЗадолженности.Дебиторская;
		СтрокаТЧПереноса.ВидЗадолженности=Перечисления.ВидыЗадолженности.Кредиторская;
		
		СтрокаТЧСписания.Сумма=СтрокаДанных.СуммаВзаиморасчетовОстаток;
		СтрокаТЧПереноса.Сумма=СтрокаДанных.СуммаВзаиморасчетовОстаток;
	КонецЕсли;
	СтрокаТЧСписания.ДоговорКонтрагента=СтрокаДанных.ДоговорКонтрагента;
	СтрокаТЧПереноса.ДоговорКонтрагента=СтрокаДанных.НовыйДоговор;
	СтрокаТЧСписания.КратностьВзаиморасчетов=1;
	СтрокаТЧСписания.КурсВзаиморасчетов=1;
	СтрокаТЧПереноса.КратностьВзаиморасчетов=1;
	СтрокаТЧПереноса.КурсВзаиморасчетов=1;
	
	КоррДолга.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Неоперативный);
	
	Возврат КоррДолга.Ссылка;
КонецФункции

мВалюта=Константы.ВалютаРегламентированногоУчета.Получить();
