Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель2Подбор(Кнопка)
	
КонецПроцедуры

Процедура ПриОткрытии()
	Построитель.Текст="ВЫБРАТЬ
	                  |	ВзаиморасчетыСКонтрагентамиОбороты.Организация КАК Организация,
	                  |	ВзаиморасчетыСКонтрагентамиОбороты.Контрагент
	                  |ИЗ
	                  |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(&ДатаНачала, &ДатаКонца, , {(Организация).* КАК Организация, (Контрагент).* КАК Контрагент}) КАК ВзаиморасчетыСКонтрагентамиОбороты
	                  |ИТОГИ ПО
	                  |	Организация";
	Построитель.Выполнить();
    Если СокрЛП(НастройкиПостроителя)<>"" Тогда
        Попытка
            Построитель.УстановитьНастройки(ЗначениеИзСтрокиВнутр(НастройкиПостроителя));
        Исключение
        КонецПопытки;
    КонецЕсли;
КонецПроцедуры

Процедура СоздатьАктыНажатие(Элемент)
	Построитель.Параметры.Вставить("ДатаНачала",	Новый Граница( ?(НачПериода = Дата('00010101000000'), НачПериода, НачалоДня(НачПериода) ) ,ВидГраницы.Включая));
	Построитель.Параметры.Вставить("ДатаКонца",	Новый Граница( ?(КонПериода = Дата('00010101000000'), Дата("39991231"), КонецДня(КонПериода) ),ВидГраницы.Включая));
	
    ЗапросРабочий=Построитель.ПолучитьЗапрос();
	ВыборкаПоОрганизациям=ЗапросРабочий.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	мВалюта=Константы.ВалютаРегламентированногоУчета.Получить();
	Пока ВыборкаПоОрганизациям.Следующий() Цикл
		ВыборкаПоКонтрагентам=ВыборкаПоОрганизациям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоКонтрагентам.Следующий() Цикл
			Док=Документы.АктСверкиВзаиморасчетов.СоздатьДокумент();
			
			Док.ДатаНачала		= НачПериода;
			Док.ДатаОкончания	= КонПериода;
			Док.Организация		= ВыборкаПоКонтрагентам.Организация;
			Док.Контрагент		= ВыборкаПоКонтрагентам.Контрагент;
			Док.ВалютаДокумента	= мВалюта;
			Док.Комментарий		= "Создан обработкой "+ЭтотОбъект.Метаданные().Представление()+" "+Формат(ТекущаяДата(),"ДЛФ=DD");
			Док.ВходитВРеестр	= Истина;
			Док.Дата			= НачалоДня(ТекущаяДата());
			
			Док.ПоДаннымОрганизации.Очистить();
			Док.ЗаполнитьПоДаннымУправленческогоУчета();
			Док.ЗаполнитьПоДаннымОрганизации();
			Док.Расхождение = Док.ОстатокНаНачало + Док.ПоДаннымОрганизации.Итог("Дебет") -  Док.ПоДаннымОрганизации.Итог("Кредит");
			
			Док.Записать();
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура ПередСохранениемЗначений(Отказ)
    НастройкиПостроителя=ЗначениеВСтрокуВнутр(Построитель.ПолучитьНастройки());
КонецПроцедуры

Процедура ПослеВосстановленияЗначений()
	Если СокрЛП(НастройкиПостроителя)<>"" Тогда
		Попытка
			Построитель.УстановитьНастройки(ЗначениеИзСтрокиВнутр(НастройкиПостроителя));
		Исключение
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

Процедура ПоПокупателямПриИзменении(Элемент)
	Если ПоПокупателям Тогда
		Эл=Построитель.Отбор.Добавить("Контрагент.Покупатель","ОтборПоПокупателям");
		Эл.ВидСравнения=ВидСравнения.Равно;
		Эл.Значение=Истина;
		Эл.Использование=Истина;
	Иначе
		Эл=Построитель.Отбор.Найти("ОтборПоПокупателям");
		Если Эл<>Неопределено Тогда
			Построитель.Отбор.Удалить(Построитель.Отбор.Индекс(Эл));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПоПоставщикамПриИзменении(Элемент)
	Если ПоПоставщикам Тогда
		Эл=Построитель.Отбор.Добавить("Контрагент.Поставщик","ОтборПоПоставщикам");
		Эл.ВидСравнения=ВидСравнения.Равно;
		Эл.Значение=Истина;
		Эл.Использование=Истина;
	Иначе
		Эл=Построитель.Отбор.Найти("ОтборПоПоставщикам");
		Если Эл<>Неопределено Тогда
			Построитель.Отбор.Удалить(Построитель.Отбор.Индекс(Эл));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
