Перем ОтчетПоВерсионированию;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	ИндикаторДокументов=0;
	ИндикаторРазборВерсия=0;
	
	//1. Определяем "раннюю версию" для документов
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВерсииОбъектов.Объект КАК Документ,
		|	ВерсииОбъектов.НомерВерсии,
		|	ВерсииОбъектов.ДатаВерсии,
		|	ВерсииОбъектов.АвторВерсии
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВерсииОбъектов.Объект КАК Объект,
		|		МИНИМУМ(ВерсииОбъектов.ДатаВерсии) КАК ДатаВерсии
		|	ИЗ
		|		РегистрСведений.ВерсииОбъектов КАК ВерсииОбъектов
		|	ГДЕ
		|		ВерсииОбъектов.Объект В(&МассивДокументов)
		|		И ВерсииОбъектов.ДатаВерсии МЕЖДУ &НачПериода И &КонПериода
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВерсииОбъектов.Объект) КАК ВложенныйЗапрос
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ВерсииОбъектов КАК ВерсииОбъектов
		|		ПО ВложенныйЗапрос.Объект = ВерсииОбъектов.Объект
		|			И ВложенныйЗапрос.ДатаВерсии = ВерсииОбъектов.ДатаВерсии";
		
	Запрос.УстановитьПараметр("МассивДокументов", СписокДокументовДляАнализа.ВыгрузитьКолонку("Документ"));
	Запрос.УстановитьПараметр("КонПериода", КонецДня(КонПериода));
	Запрос.УстановитьПараметр("НачПериода", НачалоДня(НачПериода));
	Результат=Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		ВызватьИсключение "Не найдено оригинальных версий объектов";
	КонецЕсли;
	ТаблицаОригинальныхВерсий=ПолучитьТаблицуВерсийПоЗапросу(Результат.Выбрать(),"Расчет оригинальных версий","ИндикаторДокументов",50);
	
	//2. Определяем остальные для документов
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВерсииОбъектов.Объект КАК Документ,
		|	ВерсииОбъектов.НомерВерсии,
		|	ВерсииОбъектов.ДатаВерсии,
		|	ВерсииОбъектов.АвторВерсии
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВерсииОбъектов.Объект КАК Объект,
		|		МИНИМУМ(ВерсииОбъектов.ДатаВерсии) КАК ДатаВерсии
		|	ИЗ
		|		РегистрСведений.ВерсииОбъектов КАК ВерсииОбъектов
		|	ГДЕ
		|		ВерсииОбъектов.Объект В(&МассивДокументов)
		|		И ВерсииОбъектов.ДатаВерсии МЕЖДУ &НачПериода И &КонПериода
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВерсииОбъектов.Объект) КАК ВложенныйЗапрос
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ВерсииОбъектов КАК ВерсииОбъектов
		|		ПО ВложенныйЗапрос.Объект = ВерсииОбъектов.Объект
		|			И ВложенныйЗапрос.ДатаВерсии < ВерсииОбъектов.ДатаВерсии
		|ИТОГИ ПО
		|	Документ";
	Результат=запрос.Выполнить();
	Если Результат.Пустой() Тогда
		ВызватьИсключение "Нет версий объектов для анализа";
	КонецЕсли;
	ТаблицаВерсий=ТаблицаОригинальныхВерсий.Скопировать();
	ТаблицаВерсий.Очистить();
	ВыборкаДокументов=Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ИндикаторДокументов=0;
	Пока ВыборкаДокументов.Следующий() Цикл
		ВыборкаВерсий=ВыборкаДокументов.Выбрать();
		ИндикаторРазборВерсия=0;
		ТабТемп=ПолучитьТаблицуВерсийПоЗапросу(ВыборкаВерсий,"Расчет версий для "+Строка(ВыборкаДокументов.Документ),"ИндикаторРазборВерсия",50);
		Для Каждого ВремСтрока из ТабТемп Цикл
			ЗаполнитьЗначенияСвойств(ТаблицаВерсий.Добавить(),ВремСтрока);
		КонецЦикла;
		ИндикаторДокументов=ИндикаторДокументов+1;
	КонецЦикла;
	
	//3. Запрос построитель отчета
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаОригинальныхВерсий.НомерСтроки,
		|	ТаблицаОригинальныхВерсий.Документ,
		|	ТаблицаОригинальныхВерсий.Номенклатура,
		|	ТаблицаОригинальныхВерсий.Количество,
		|	ТаблицаОригинальныхВерсий.АвторВерсии,
		|	ТаблицаОригинальныхВерсий.НомерВерсии,
		|	ТаблицаОригинальныхВерсий.ДатаВерсии
		|ПОМЕСТИТЬ ВТ_Оригиналы
		|ИЗ
		|	&ТаблицаОригинальныхВерсий КАК ТаблицаОригинальныхВерсий
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Версии.НомерСтроки,
		|	ВТ_Версии.Документ,
		|	ВТ_Версии.Номенклатура,
		|	ВТ_Версии.Количество,
		|	ВТ_Версии.АвторВерсии,
		|	ВТ_Версии.НомерВерсии,
		|	ВТ_Версии.ДатаВерсии
		|ПОМЕСТИТЬ ВТ_Версии
		|ИЗ
		|	&ТаблицаВерсий КАК ВТ_Версии
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Оригиналы.Документ КАК ДокументОригинал,
		|	ВТ_Оригиналы.АвторВерсии КАК АвторВерсииОригинал,
		|	ВТ_Оригиналы.НомерВерсии КАК НомерВерсииОригинал,
		|	ВТ_Оригиналы.ДатаВерсии КАК ДатаВерсииОригинал,
		|	ВТ_Версии.АвторВерсии,
		|	ВТ_Версии.НомерВерсии,
		|	ВТ_Версии.ДатаВерсии,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Оригиналы.Номенклатура ЕСТЬ НЕ NULL 
		|					И ВТ_Оригиналы.Количество ЕСТЬ НЕ NULL 
		|					И ВТ_Версии.Номенклатура ЕСТЬ НЕ NULL 
		|					И ВТ_Версии.Количество ЕСТЬ НЕ NULL 
		|					И ВТ_Оригиналы.Номенклатура = ВТ_Версии.Номенклатура
		|					И ВТ_Версии.Количество = ВТ_Оригиналы.Количество
		|				ТОГДА 0
		|			КОГДА ВТ_Оригиналы.НомерСтроки ЕСТЬ NULL 
		|				ТОГДА 1
		|			КОГДА ВТ_Версии.НомерСтроки ЕСТЬ NULL 
		|				ТОГДА 1
		|			ИНАЧЕ 1
		|		КОНЕЦ) КАК СчетчикРазличий
		|ИЗ
		|	ВТ_Оригиналы КАК ВТ_Оригиналы
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Версии КАК ВТ_Версии
		|		ПО ВТ_Оригиналы.Документ = ВТ_Версии.Документ
		|			И ВТ_Оригиналы.НомерСтроки = ВТ_Версии.НомерСтроки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Оригиналы.Документ,
		|	ВТ_Оригиналы.АвторВерсии,
		|	ВТ_Оригиналы.НомерВерсии,
		|	ВТ_Оригиналы.ДатаВерсии,
		|	ВТ_Версии.АвторВерсии,
		|	ВТ_Версии.НомерВерсии,
		|	ВТ_Версии.ДатаВерсии";
	Запрос.УстановитьПараметр("ТаблицаОригинальныхВерсий",	ТаблицаОригинальныхВерсий);
	Запрос.УстановитьПараметр("ТаблицаВерсий",				ТаблицаВерсий);
	РезультатЗапроса = Запрос.Выполнить();
КонецПроцедуры

Функция ПолучитьТаблицуВерсийПоЗапросу(Версии,СообщениеСостояния,ИндикаторПроцесса,ДолжноБыть=0)
#Область Инициализация_таблицы
	ТаблицаОригинальныхВерсий=Новый ТаблицаЗначений;
	
	ТаблицаОригинальныхВерсий.Колонки.Добавить("Документ",		ЭтотОбъект.Метаданные().ТабличныеЧасти.СписокДокументовДляАнализа.Реквизиты.Документ.Тип);
	ТаблицаОригинальныхВерсий.Колонки.Добавить("НомерВерсии",	ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(10,0));
	ТаблицаОригинальныхВерсий.Колонки.Добавить("ДатаВерсии",	ОбщегоНазначения.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	ТаблицаОригинальныхВерсий.Колонки.Добавить("АвторВерсии",	Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
	
	ТаблицаОригинальныхВерсий.Колонки.Добавить("НомерСтроки",	ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(10,0));
	ТаблицаОригинальныхВерсий.Колонки.Добавить("Номенклатура",	Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаОригинальныхВерсий.Колонки.Добавить("Количество",	ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15,3));	
#КонецОбласти
	Состояние(СообщениеСостояния);
	ЭлементыФормы[ИндикаторПроцесса].МаксимальноеЗначение=Версии.Количество();
	ИндикаторДокументов=0;
	Пока Версии.Следующий() Цикл
		//Получим объект
		ОтчетПоВерсионированию.СсылкаНаОбъект=Версии.Документ;
		Оригинал=ОтчетПоВерсионированию.ПолучитьОбъектИзXML(ОтчетПоВерсионированию.ПолучитьСтрокуXMLПоНомеруВерсии(Версии.НомерВерсии));
		ЭтаФорма[ИндикаторПроцесса]=ЭтаФорма[ИндикаторПроцесса]+1;
		Сч=0;
		Пока Сч < Оригинал.Товары.Количество() Цикл
			СтрокаВерсий=ТаблицаОригинальныхВерсий.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаВерсий,Версии);
			ЗаполнитьЗначенияСвойств(СтрокаВерсий,Оригинал.Товары[сч],"НомерСтроки,Номенклатура,Количество");
			Сч=Сч+1;
		КонецЦикла;
		Пока Сч < ДолжноБыть Цикл
			СтрокаВерсий=ТаблицаОригинальныхВерсий.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаВерсий,Версии);
			СтрокаВерсий.НомерСтроки=Сч;
			Сч=Сч+1;
		КонецЦикла;
	КонецЦикла;
	Состояние("");
	Возврат ТаблицаОригинальныхВерсий;
КонецФункции

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

ОтчетПоВерсионированию=Отчеты.ИсторияИзмененийОбъектов.Создать();