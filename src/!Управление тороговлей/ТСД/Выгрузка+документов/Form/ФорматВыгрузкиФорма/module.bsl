Перем мФорматУмолч;
Перем мСохрФормат;
Перем мМетДок;
Перем мТаблУмолч;

Перем ТипДокумента Экспорт;
Перем ТипДокументаСиноним Экспорт;

Перем БатчДрайвер;

Процедура ЗаполнитьТабличныеЧасти()
	ТабличнаяЧасть = Неопределено;
	ЭлементыФормы.ТабличнаяЧасть.СписокВыбора.Очистить();
	Если ТипДокумента1С = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	мМетДок = Неопределено;
	мМетДок = Метаданные.Документы.Найти(ТипДокумента1С);

	Если мМетДок = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ТаблЧасть из мМетДок.ТабличныеЧасти Цикл
		ЭлементыФормы.ТабличнаяЧасть.СписокВыбора.Добавить(ТаблЧасть);
		Если ТаблЧасть.Имя = "Товары" Тогда
			ТабличнаяЧасть = ТаблЧасть;
		КонецЕсли;
	КонецЦикла;
	
	Если ТабличнаяЧасть = Неопределено И 
		ЭлементыФормы.ТабличнаяЧасть.СписокВыбора.Количество() > 0 Тогда
		ТабличнаяЧасть = ЭлементыФормы.ТабличнаяЧасть.СписокВыбора[0].Значение;	
	КонецЕсли;	
	
КонецПроцедуры

Процедура СоздатьФорматУмолч()
	
	мФорматУмолч = ЭтаФорма.ВладелецФормы.ВладелецФормы.мФорматУмолч;
	мТаблУмолч = Новый Соответствие;
	мТаблУмолч.Вставить("Номенклатура", "ИдТовара");	
	мТаблУмолч.Вставить("Количество", "КоличествоПлан");
	мТаблУмолч.Вставить("ЕдиницаИзмерения", "ИдУпаковки");
	мТаблУмолч.Вставить("ХарактеристикаНоменклатуры", "descr");
	мТаблУмолч.Вставить("СерияНоменклатуры", "serial");
			
КонецПроцедуры	

Процедура ЗаполнитьФорматУмолч(ЗаполнятьРеквизиты=Истина)			
	ФорматВыгрузки.Очистить();
	Если (ТабличнаяЧасть = Неопределено) Или (мМетДок = Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗаполнятьРеквизиты = Истина Тогда
		Реквизиты.Очистить();
		Для каждого реквизит из мМетДок.Реквизиты Цикл
			Строка = Реквизиты.Добавить();
			Строка.Реквизит = реквизит.Имя;
			Строка.Выгружать = Ложь;
		КонецЦикла;
	КонецЕсли;
	
	Для каждого реквизит из ТабличнаяЧасть.Реквизиты Цикл
		Строка = ФорматВыгрузки.Добавить();	
		Строка.ПолеДокумента1С = реквизит.Имя;		
		ПолеТСД = мТаблУмолч.Получить(реквизит.Имя);
		Если ПолеТСД <> Неопределено Тогда
			Строка.Выгружать = Истина;
			Строка.ПолеСтрокиДокументаТСД = ПолеТСД;
		Иначе
			Строка.Выгружать = Ложь;
		КонецЕсли;		
	КонецЦикла;	
	
	Реквизиты.Сортировать("Выгружать УБЫВ , Реквизит");
	ФорматВыгрузки.Сортировать("Выгружать УБЫВ , ПолеДокумента1С");
	
КонецПроцедуры	

Процедура Сохранить()
	
	Если ПустаяСтрока(ТипДокументаСмартс) Тогда
		Предупреждение("Не задан Тип документа Mobile Smarts!");
		Возврат;
	КонецЕсли;
	
	Если БатчДрайвер Тогда
		ЭлементыФормы.КоллективнаяРабота.Значение = Ложь;	
	КонецЕсли;	
	
	Если мСохрФормат = Неопределено Тогда
		мСохрФормат = Новый Соответствие;
	КонецЕсли;
	
	ФорматДок = Новый Структура;	
	ФорматДок.Вставить("ТипДокументаСмартс", ТипДокументаСмартс);
	ТипДокументаСмартсСиноним = ?(ЗначениеЗаполнено(ЭлементыФормы.ТипДокументаСмартс.Значение),ЭлементыФормы.ТипДокументаСмартс.СписокВыбора.НайтиПоЗначению(ЭлементыФормы.ТипДокументаСмартс.Значение).Представление,ТипДокументаСмартс);
	ФорматДок.Вставить("ТипДокументаСмартсСиноним",ТипДокументаСмартсСиноним);
	
	РеквизитыСохр = Новый ТаблицаЗначений;
	РеквизитыСохр.Колонки.Добавить("Выгружать");
	РеквизитыСохр.Колонки.Добавить("Реквизит");
	РеквизитыСохр.Колонки.Добавить("ПолеДокументаТСД");

	Для каждого строка из Реквизиты Цикл
		НовСтрока = РеквизитыСохр.Добавить();
		НовСтрока.Выгружать = строка.Выгружать;
		НовСтрока.Реквизит  = строка.Реквизит;
		НовСтрока.ПолеДокументаТСД = строка.ПолеДокументаТСД;
	КонецЦикла;	
	ФорматДок.Вставить("Реквизиты", РеквизитыСохр);
	
	ФорматДок.Вставить("ТабличнаяЧасть",?(ТабличнаяЧасть = Неопределено,"",ТабличнаяЧасть.Имя));
	
	ФорматСохр = Новый ТаблицаЗначений;
	ФорматСохр.Колонки.Добавить("Выгружать");
	ФорматСохр.Колонки.Добавить("ПолеДокумента1С");
	ФорматСохр.Колонки.Добавить("ПолеСтрокиДокументаТСД");
	
	Для каждого строка из ФорматВыгрузки Цикл
		НовСтрока = ФорматСохр.Добавить();
		НовСтрока.Выгружать = строка.Выгружать;
		НовСтрока.ПолеДокумента1С = строка.ПолеДокумента1С;
		НовСтрока.ПолеСтрокиДокументаТСД = строка.ПолеСтрокиДокументаТСД;
	КонецЦикла;	
	
	ФорматДок.Вставить("ФорматВыгрузки", ФорматСохр);
	ФорматДок.Вставить("КонтрольКоличества", КонтрольКоличества);
	ФорматДок.Вставить("ОтборПоЯчейкам", ОтборПоЯчейкам);
	ФорматДок.Вставить("ИсполняемыйНаСервере", КоллективнаяРабота);

	мСохрФормат.Вставить(ТипДокумента1С, ФорматДок); 

	СохранитьЗначение(ЭтаФорма.ВладелецФормы.ВладелецФормы.мИмяДляХраненияНастроек, мСохрФормат);
	
	ЭтаФорма.ВладелецФормы.ВладелецФормы.ЗагрузитьФормат(ТипДокумента1С);
    ЭтаФорма.ВладелецФормы.ВладелецФормы.ОбновитьКонтрольКоличества();
	
КонецПроцедуры	

Функция Загрузить(ВыбрТаблЧасть=Неопределено)
	Перем ТаблЧастьНайдена;
	Если мСохрФормат = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ФорматДок = мСохрФормат.Получить(ТипДокумента1С);
	Если ФорматДок = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	времТипДокументаСмартс = Неопределено;
	времФорматВыгрузки = Неопределено;
	времРеквизиты = Неопределено;
	
	ФорматДок.Свойство("ТипДокументаСмартс", времТипДокументаСмартс);
	ФорматДок.Свойство("ФорматВыгрузки", времФорматВыгрузки);
	ФорматДок.Свойство("Реквизиты", времРеквизиты);
	ФорматДок.Свойство("КонтрольКоличества", КонтрольКоличества);
    ФорматДок.Свойство("ОтборПоЯчейкам", ОтборПоЯчейкам);
	
	Если ФорматДок.Свойство("ИсполняемыйНаСервере") Тогда 
		ФорматДок.Свойство("ИсполняемыйНаСервере", КоллективнаяРабота);
	КонецЕсли;
	
	Если БатчДрайвер Тогда
		ЭлементыФормы.КоллективнаяРабота.Значение = Ложь;
	КонецЕсли;
	
	ТипДокументаСмартс = времТипДокументаСмартс;
	
	ПроверитьВозможностьВыгрузкиЯчеек();

	Если времФорматВыгрузки = Неопределено Или времФорматВыгрузки.Количество() = 0 Тогда 		
		Возврат Ложь;
	КонецЕсли;
	
	Если ВыбрТаблЧасть=Неопределено Тогда
		Если времРеквизиты = Неопределено Тогда
			времРеквизиты = Новый ТаблицаЗначений;
			времРеквизиты.Колонки.Добавить("Выгружать");
			времРеквизиты.Колонки.Добавить("Реквизит");
			времРеквизиты.Колонки.Добавить("ПолеДокументаТСД");
		КонецЕсли;
		
		Реквизиты.Очистить();
		//+AVA. 27.05.2014. №159.
		//добавить в список реквизитов дату и номер документа
		СписокРеквизитовДокумента1С = Новый СписокЗначений;
		Для каждого реквизит из мМетДок.Реквизиты Цикл
			СписокРеквизитовДокумента1С.Добавить(реквизит.Имя);
		КонецЦикла;	
		Попытка
			Для каждого реквизит из мМетДок.СтандартныеРеквизиты Цикл
				СписокРеквизитовДокумента1С.Добавить(реквизит.Имя);
			КонецЦикла;	  		
		исключение
		КонецПопытки;
		//-AVA. 27.05.2014. №159.
		
		Для каждого ЭлементСписка из СписокРеквизитовДокумента1С Цикл
			НовСтрока = Реквизиты.Добавить();
			НовСтрока.Реквизит = ЭлементСписка.Значение;

			строкаРекв = ФорматДок.Реквизиты.Найти(ЭлементСписка.Значение, "Реквизит");
			Если строкаРекв <> Неопределено Тогда
				НовСтрока.ПолеДокументаТСД = строкаРекв.ПолеДокументаТСД;
				НовСтрока.Выгружать = строкаРекв.Выгружать;
				
				ПолеНайдено = Ложь;
				СписПолей = ЭлементыФормы.Реквизиты.Колонки.ПолеДокументаТСД.ЭлементУправления.СписокВыбора;
				Для каждого поле из СписПолей Цикл
					Если поле = НовСтрока.ПолеДокументаТСД Тогда
						ПолеНайдено = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				Если ПолеНайдено = Ложь И ПустаяСтрока(НовСтрока.ПолеДокументаТСД) = Ложь Тогда
					Спис = Новый СписокЗначений;
					Спис.ЗагрузитьЗначения(СписПолей.ВыгрузитьЗначения());
					Спис.Добавить(НовСтрока.ПолеДокументаТСД);
					ЭлементыФормы.Реквизиты.Колонки.ПолеДокументаТСД.ЭлементУправления.СписокВыбора = Спис;
				КонецЕсли;			
			КонецЕсли;						
		КонецЦикла;
	КонецЕсли;

	Если ВыбрТаблЧасть=Неопределено Тогда		
		ТаблЧастьНайдена = Ложь;
		Для каждого ТаблЧасть из ЭлементыФормы.ТабличнаяЧасть.СписокВыбора Цикл
			Если ТаблЧасть.Значение.Имя = ФорматДок.ТабличнаяЧасть Тогда
				ТабличнаяЧасть = ТаблЧасть.Значение;
				ТаблЧастьНайдена = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Если ВыбрТаблЧасть.Имя = ФорматДок.ТабличнаяЧасть Тогда
			ТаблЧастьНайдена = Истина;
		Иначе
			ТаблЧастьНайдена = Ложь;
		КонецЕсли;	
	КонецЕсли;

	Если ТаблЧастьНайдена = Ложь Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	ФорматВыгрузки.Очистить();	
	ТаблПолей = времФорматВыгрузки;
	
 	Спис = ЭлементыФормы.ФорматВыгрузки.Колонки.ПолеСтрокиДокументаТСД.ЭлементУправления.СписокВыбора.Скопировать();
 	Для каждого реквизит из ТабличнаяЧасть.Реквизиты Цикл
		Строка = ФорматВыгрузки.Добавить();	
		Строка.ПолеДокумента1С = реквизит.Имя;	
		
		Для каждого поле из ТаблПолей Цикл
			Если поле.ПолеДокумента1С = реквизит.Имя Тогда
				Строка.Выгружать = поле.Выгружать;
				Строка.ПолеСтрокиДокументаТСД = поле.ПолеСтрокиДокументаТСД;
				Если спис.НайтиПоЗначению(поле.ПолеСтрокиДокументаТСД) = Неопределено и ЗначениеЗаполнено(поле.ПолеСтрокиДокументаТСД) Тогда
					спис.Добавить(поле.ПолеСтрокиДокументаТСД)
				КонецЕсли;
				Прервать;
			КонецЕсли;	
		КонецЦикла;
	КонецЦикла;		
	
	ЭлементыФормы.ФорматВыгрузки.Колонки.ПолеСтрокиДокументаТСД.ЭлементУправления.СписокВыбора = Спис;
	
	Реквизиты.Сортировать("Выгружать УБЫВ , Реквизит");
	ФорматВыгрузки.Сортировать("Выгружать УБЫВ , ПолеДокумента1С");

	Возврат Истина;	
	
КонецФункции

Процедура КнопкаОКНажатие(Кнопка)
	Сохранить();
	Закрыть("ОК");
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)				
	
	БатчДрайвер = Нрег(мТипПодключенногоДрайвера) = "batch";
	
	Если БатчДрайвер Тогда
		ЭлементыФормы.КоллективнаяРабота.Заголовок = "";	
		ЭлементыФормы.КоллективнаяРабота.Доступность = Ложь;
		
		ЭлементыФормы.НадписьНеДоступно.Видимость = Истина;
	КонецЕсли;
	
	ТипДокумента1С = ТипДокумента;
	
	СоздатьФорматУмолч();
	мСохрФормат = ВосстановитьЗначение(ЭтаФорма.ВладелецФормы.ВладелецФормы.мИмяДляХраненияНастроек);
	Если мСохрФормат = Неопределено Тогда
		мСохрФормат = мФорматУмолч;	
	КонецЕсли;	
	
	ЭлементыФормы.ТипДокументаСмартс.СписокВыбора.Очистить();
	
	Если мEnv = неопределено Тогда
		Для каждого СтрокаНастройки из мФорматУмолч Цикл
			ИмяДокумента = СтрокаНастройки.Значение.ТипДокументаСмартс;
			Если ЭлементыФормы.ТипДокументаСмартс.СписокВыбора.НайтиПоЗначению(ИмяДокумента)= неопределено Тогда
				ЭлементыФормы.ТипДокументаСмартс.СписокВыбора.Добавить(ИмяДокумента);
			КонецЕсли; 
		КонецЦикла;
	иначе
		ТипыДокументовТСД = мEnv.DocumentTypes;
		Для каждого ТипДокументаТСД из ТипыДокументовТСД Цикл
			Если не ТипДокументаТСД.Virtual и не ТипДокументаТСД.RemoveAfterFinish Тогда
				ИмяДокумента = ТипДокументаТСД.name;
				Если ЭлементыФормы.ТипДокументаСмартс.СписокВыбора.НайтиПоЗначению(ИмяДокумента)= неопределено Тогда
					ЭлементыФормы.ТипДокументаСмартс.СписокВыбора.Добавить(ИмяДокумента,ТипДокументаТСД.Alias);
				КонецЕсли; 
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ЭлементыФормы.ТипДокументаСмартс.СписокВыбора.СортироватьПоЗначению();
	
	ЗаполнитьТабличныеЧасти();
	Если Загрузить() = Ложь Тогда
		ЗаполнитьФорматУмолч();
	КонецЕсли;
	
	ТипДокументаСмартсПриИзменении(ЭлементыФормы.ТипДокументаСмартс);
	
КонецПроцедуры

Процедура ТабличнаяЧастьПриИзменении(Элемент)
	
	Если Загрузить(ТабличнаяЧасть) = Ложь Тогда
		ЗаполнитьФорматУмолч(Ложь);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ТипДокумента1СПриИзменении(Элемент)
	
	ТабличнаяЧасть     = Неопределено;
	КонтрольКоличества = Ложь;
	ОтборПоЯчейкам     = Ложь;
	ЗаполнитьТабличныеЧасти();
	
	Если не Загрузить() Тогда
		ЗаполнитьФорматУмолч();
	КонецЕсли;
	
	ЭтаФорма.ВладелецФормы.ВладелецФормы.ТипДокумента1С = Элемент.Значение;
	ЭтаФорма.ВладелецФормы.ВладелецФормы.Документ1С     = Неопределено;
	ЭтаФорма.ВладелецФормы.ВладелецФормы.ТипДокумента1СПриИзменении(Неопределено);
																	
КонецПроцедуры

Процедура РеквизитыПолеДокументаТСДОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Значение = Текст; 
	ЭлементыФормы.Реквизиты.ТекущаяСтрока.ПолеДокументаТСД = Текст;	
	
	Спис = Новый СписокЗначений;
	
	Спис.Добавить(Текст);
	Для каждого элементСписка из Элемент.СписокВыбора Цикл
		Если Спис.НайтиПоЗначению(элементСписка.Значение) = Неопределено Тогда
			Спис.Добавить(элементСписка.Значение)
		КонецЕсли;
	КонецЦикла;
	
	ЭлементыФормы.Реквизиты.Колонки.ПолеДокументаТСД.ЭлементУправления.СписокВыбора = Спис;	
	
КонецПроцедуры

Процедура ФорматВыгрузкиПолеСтрокиДокументаТСДОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Значение = Текст; 
	ЭлементыФормы.ФорматВыгрузки.ТекущаяСтрока.ПолеСтрокиДокументаТСД = Текст;	
	
	Спис = Новый СписокЗначений;
	
	Спис.Добавить(Текст);
	Для каждого элементСписка из Элемент.СписокВыбора Цикл
		Если Спис.НайтиПоЗначению(элементСписка.Значение) = Неопределено Тогда
			Спис.Добавить(элементСписка.Значение)
		КонецЕсли;
	КонецЦикла;
	
	ЭлементыФормы.ФорматВыгрузки.Колонки.ПолеСтрокиДокументаТСД.ЭлементУправления.СписокВыбора = Спис;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыЗаписать(Кнопка)
	
	Сохранить();
	
КонецПроцедуры

Процедура КомандыРеквизитовВыделитьВсе(Кнопка)
	
	Реквизиты.ЗаполнитьЗначения(Истина, "Выгружать");
	
КонецПроцедуры

Процедура КомандыРеквизитовОчиститьВыделение(Кнопка)
	
	Реквизиты.ЗаполнитьЗначения(Ложь, "Выгружать");
	
КонецПроцедуры

Процедура КомандыДокументовВыделитьВсе(Кнопка)
	
	ФорматВыгрузки.ЗаполнитьЗначения(Истина, "Выгружать");
	
КонецПроцедуры

Процедура КомандыДокументовОчиститьВыделение(Кнопка)
	
	ФорматВыгрузки.ЗаполнитьЗначения(Ложь, "Выгружать");
	
КонецПроцедуры

Процедура ТипДокументаСмартсОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Значение = Текст; 
	
	Если ПустаяСтрока(Текст) Тогда
		Возврат;
	КонецЕсли;
	
	Спис = Новый СписокЗначений;
	Спис.ЗагрузитьЗначения(Элемент.СписокВыбора.ВыгрузитьЗначения());
	Если Спис.НайтиПоЗначению(Текст) = Неопределено Тогда
		Спис.Добавить(Текст);
		ЭлементыФормы.ТипДокументаСмартс.СписокВыбора = Спис;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ТипДокументаСмартсПриИзменении(Элемент)

	Если мСписокДокументовКоллективнойРаботы.НайтиПоЗначению(ЭлементыФормы.ТипДокументаСмартс.Значение) = Неопределено Тогда 
		ЭлементыФормы.КоллективнаяРабота.Значение = Ложь;
		ЭлементыФормы.КоллективнаяРабота.Доступность = Ложь;
	Иначе 
		ЭлементыФормы.КоллективнаяРабота.Доступность = Истина;	
	КонецЕсли;
	
	Если БатчДрайвер Тогда
		ЭлементыФормы.КоллективнаяРабота.Значение = Ложь;
		ЭлементыФормы.КоллективнаяРабота.Доступность = Ложь;
	КонецЕсли;

	ЭтаФорма.ВладелецФормы.ВладелецФормы.ТипДокумента1СПриИзменении(Неопределено);
	ЭтаФорма.ВладелецФормы.ВладелецФормы.ЗагрузитьФормат(ТипДокумента1С);
    ПроверитьВозможностьВыгрузкиЯчеек();

КонецПроцедуры

 Процедура ПроверитьВозможностьВыгрузкиЯчеек()
	 
	 //мEnv = Этаформа.ВладелецФормы.мEnv;
	                    	 
	 //УДокументаТСДЕстьПолеПоЯчейкам = Ложь;
	 //ТипыДокументовТСД = мEnv.DocumentTypes;
	 //Для каждого ТипДокументаТСД из ТипыДокументовТСД Цикл
	 //	Если  ТипДокументаСмартс = ТипДокументаТСД.name Тогда
	 //   	 УДокументаТСДЕстьПолеПоЯчейкам = ТипДокументаТСД.Fields.FindByFieldName("ПоЯчейкам") <> Неопределено или ТипДокументаСмартс = "Перемещение";
	 //   	 Прервать;
	 //	КонецЕсли;
	 //КонецЦикла;
	 //
	 //ЭлементыФормы.ОтборПоЯчейкам.Доступность = УДокументаТСДЕстьПолеПоЯчейкам; 
	 //Если не УДокументаТСДЕстьПолеПоЯчейкам Тогда
	 //	ОтборПоЯчейкам  = УДокументаТСДЕстьПолеПоЯчейкам;
	 //КонецЕсли;
 
 КонецПроцедуры

Процедура КоманднаяПанель1Справка(Кнопка)
	
	ФормаСправки = ПолучитьФорму("ФормаСправки");
	
	ФормаСправки.МакетСправки = "Настройка выгрузки документов на ТСД.mht";
	ФормаСправки.Заголовок = "Сравка к форме """+ЭтаФорма.Заголовок+""" обработки """+ ОбработкаОбъект.Метаданные().Синоним+"""";
	
	Если НЕ ФормаСправки.Открыта() Тогда
		ФормаСправки.Открыть();
	Иначе
		ФормаСправки.ОбновитьДанные();
	КонецЕсли;

КонецПроцедуры

Процедура НажатаНадписьНеДоступно(Элемент)
	
	НавигационнаяСсылка =  "http://www.cleverence.ru/sw/soft.aspx?m=MS-1C-WIFI-DRIVER-PRO";
	ЗапуститьПриложение(НавигационнаяСсылка);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыСохранитьНастройкиВXML(Кнопка)
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	Фильтр = "XML(*.xml)|*.xml";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		ПутьКФайлуXML = ДиалогОткрытияФайла.ПолноеИмяФайла;
	Иначе
		Предупреждение("Не выбран файл. Настройки не сохранены.");
		Возврат;		
 	КонецЕсли;
	
	Запись = Новый ЗаписьXML;
    Запись.ОткрытьФайл(ПутьКФайлуXML,"windows-1251");
    Запись.ЗаписатьОбъявлениеXML();
	Запись.ЗаписатьНачалоЭлемента("Документ");
	Запись.ЗаписатьАтрибут("Конфигурация1С", ТипДокумента1С); 
	Запись.ЗаписатьАтрибут("ТСД", ТипДокументаСмартс); 
	
	//запись реквизитов шапки
	Запись.ЗаписатьНачалоЭлемента("Шапка");
	Для каждого СтрокаТаблицы из Реквизиты Цикл
		Если СтрокаТаблицы.Выгружать тогда
			Запись.ЗаписатьНачалоЭлемента("Реквизит");
			Запись.ЗаписатьАтрибут("Конфигурация1С",СокрЛП(СтрокаТаблицы.Реквизит));
			Запись.ЗаписатьАтрибут("ТСД",СокрЛП(СтрокаТаблицы.ПолеДокументаТСД));
			Запись.ЗаписатьКонецЭлемента();
		КонецЕсли;
	КонецЦикла;
	Запись.ЗаписатьКонецЭлемента();  	
	
	//запись реквизтов табличной части
	Запись.ЗаписатьНачалоЭлемента("ТабЧасть");
	Запись.ЗаписатьАтрибут("Вид",ТабличнаяЧасть.Имя);
	Для каждого СтрокаТаблицы из ФорматВыгрузки Цикл
		Если СтрокаТаблицы.Выгружать тогда
			Запись.ЗаписатьНачалоЭлемента("Реквизит");
			Запись.ЗаписатьАтрибут("Конфигурация1С",СокрЛП(СтрокаТаблицы.ПолеДокумента1С));
			Запись.ЗаписатьАтрибут("ТСД",СокрЛП(СтрокаТаблицы.ПолеСтрокиДокументаТСД));
			Запись.ЗаписатьКонецЭлемента();
		КонецЕсли;
	КонецЦикла;
	Запись.ЗаписатьКонецЭлемента();  
	
	//+запись дополнительных настроек.
	Запись.ЗаписатьНачалоЭлемента("ДопНастройки");
	
	Запись.ЗаписатьНачалоЭлемента("КоллективнаяРабота");
	ЗаписатьXML(Запись,КоллективнаяРабота); 
	Запись.ЗаписатьКонецЭлемента();
	
	Запись.ЗаписатьНачалоЭлемента("ОтборПоЯчейкам");
	ЗаписатьXML(Запись,ОтборПоЯчейкам); 
	Запись.ЗаписатьКонецЭлемента();
	
	Запись.ЗаписатьНачалоЭлемента("КонтрольКоличества");
	ЗаписатьXML(Запись,КонтрольКоличества); 
	Запись.ЗаписатьКонецЭлемента();	
	
	Запись.ЗаписатьКонецЭлемента();  
 	//-запись дополнительных настроек.
	
	Запись.ЗаписатьКонецЭлемента();
    Запись.Закрыть();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыВосстановитьНастройкиИзXML(Кнопка)
	
	Если Вопрос("Все текущие настройки выгрузки документа будут потеряны. Продолжить?", РежимДиалогаВопрос.ДаНет, 0,,"Изменение данных") <> КодВозвратаДиалога.Да Тогда
		Возврат
	КонецЕсли;
	
	НачальноеЗначениеВыбора = Новый Структура;
	НачальноеЗначениеВыбора.Вставить("Документ", Документы[ТипДокумента1С].ПустаяСсылка());
	НачальноеЗначениеВыбора.Вставить("ЗагрузитьБезВопроса", Истина);
	
	ЭтаФорма.ВладелецФормы.ВладелецФормы.НачальноеЗначениеВыбора = НачальноеЗначениеВыбора;
	ЗагрузкаВыполненаУспешно = ЭтаФорма.ВладелецФормы.ВладелецФормы.ЗагрузитьНастройкиДляКонфигурацииИзФайла();
	Если ЗагрузкаВыполненаУспешно Тогда
		ПередОткрытием(Ложь,Истина);
	КонецЕсли;
	
КонецПроцедуры
