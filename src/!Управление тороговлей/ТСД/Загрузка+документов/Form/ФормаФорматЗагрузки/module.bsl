Перем ТипДокумента Экспорт;
Перем СтруктураНастройки;

Функция ПолучитьНастройку(СтруктураНастройки) Экспорт
	
	НастройкаПолучена = Ложь;	
	Если Найти(мНазваниеКонфигурации, "далионуправлениемагазином") > 0 Тогда
		СохраненнаяНастройка = Справочники.НастройкиПользователей.НайтиПоНаименованию(мНазваниеСохраненнойНастройкиЗаполненияДокументов,Истина);
		Если НЕ СохраненнаяНастройка.Пустая() Тогда
			СтруктураНастройки = СохраненнаяНастройка.Значение.Получить();
			НастройкаПолучена = Истина;
		КонецЕсли;
	ИначеЕсли Найти(мНазваниеКонфигурации, "автосалон5") > 0 Тогда
		СохраненнаяНастройка = Справочники.ВнешниеПечатныеФормы.НайтиПоНаименованию(мНазваниеСохраненнойНастройкиЗаполненияДокументов,Истина);
		Если НЕ СохраненнаяНастройка.Пустая() Тогда
			СтруктураНастройки = СохраненнаяНастройка.Хранилище.Получить();
			НастройкаПолучена = Истина;
		КонецЕсли;
	ИначеЕсли ПоддержкаДругихВерсий() Тогда
		СохраненнаяНастройка = ВосстановитьЗначение(мНазваниеСохраненнойНастройкиЗаполненияДокументов);	
		Если  СохраненнаяНастройка <> Неопределено Тогда
			НастройкаПолучена = истина;
			СтруктураНастройки = СохраненнаяНастройка;
		КонецЕсли;
	иначе
		Выполнить("НастройкаПолучена = УниверсальныеМеханизмы.ПолучитьНастройку(СтруктураНастройки)");
	КонецЕсли;
	
	Возврат НастройкаПолучена;
	
КонецФункции

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	
	СтруктураНастройки = ПолучитьСтруктуруНастройки();
	
	Если ПолучитьНастройку(СтруктураНастройки) Тогда
		мСтруктураНастройки = СтруктураНастройки.СохраненнаяНастройка;
		Если  СтруктураНастройки.СохраненнаяНастройка.Свойство("НастройкаПоДокументам") Тогда
			мСтруктураНастройкиДокумента1 = СтруктураНастройки.СохраненнаяНастройка.НастройкаПоДокументам;	
		иначе
			мСтруктураНастройкиДокумента1 = Новый Структура;
		КонецЕсли;
	Иначе
		мСтруктураНастройки           = Новый Структура;
		мСтруктураНастройкиДокумента1 = Новый Структура;
	КонецЕсли;
	
	//**
	мСтруктураНастройкиДокумента = Новый Структура;
	мСтруктураНастройкиДокумента.Вставить("ИспользоватьСтандартнуюНастройку",ИспользоватьСтандартнуюНастройку);
 	мСтруктураНастройкиДокумента.Вставить("ТабличнаяЧасть",ТабличнаяЧасть.Имя);
	мСтруктураНастройкиДокумента.Вставить("ФорматЗагрузки",ФорматЗагрузки);
	мСтруктураНастройкиДокумента.Вставить("ФорматПоискаНоменклатуры",ФорматПоискаНоменклатуры);
	
	мСтруктураНастройкиДокумента1.Вставить(ТипДокумента,мСтруктураНастройкиДокумента);
	мСтруктураНастройки.Вставить("НастройкаПоДокументам",мСтруктураНастройкиДокумента1);
	СтруктураНастройки.Вставить("СохраненнаяНастройка", мСтруктураНастройки);
	//**
	
	СохранитьНастройку(СтруктураНастройки);	
	
	Закрыть(КодВозвратаДиалога.ОК);
	
КонецПроцедуры

Процедура ИспользоватьСтандартнуюНастройкуПриИзменении(Элемент)
	
	УстановитьВидимость();

КонецПроцедуры

Процедура УстановитьВидимость()
	
	ЭлементыФормы.ТабличнаяЧасть.Доступность          = НЕ ИспользоватьСтандартнуюНастройку;	
 	ЭлементыФормы.ФорматЗагрузки.Доступность          = НЕ ИспользоватьСтандартнуюНастройку;
 	ЭлементыФормы.ФорматПоискаНоменклатуры.Доступность = НЕ ИспользоватьСтандартнуюНастройку;
	ЭлементыФормы.КоманднаяПанельФорматПоиска.Доступность = НЕ ИспользоватьСтандартнуюНастройку;
    ЭлементыФормы.КоманднаяПанельФорматЗагрузки.Доступность = НЕ ИспользоватьСтандартнуюНастройку;


КонецПроцедуры

Процедура ПриОткрытии()
	
	ИспользоватьСтандартнуюНастройку = Истина;
	 
	Для каждого ТаблЧасть из Метаданные.документы[ТипДокумента].ТабличныеЧасти Цикл
		Если ТаблЧасть.Реквизиты.Найти("Номенклатура")<> Неопределено Тогда
			Если ЭлементыФормы.ТабличнаяЧасть.СписокВыбора.НайтиПоЗначению(ТаблЧасть) = Неопределено Тогда    //AVA. 29.05.2014. №159.
				ЭлементыФормы.ТабличнаяЧасть.СписокВыбора.Добавить(ТаблЧасть);
			КонецЕсли;
			Если ТаблЧасть.Имя = "Товары" Тогда
				ТабличнаяЧасть = ТаблЧасть;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ТабличнаяЧасть = Неопределено И 
		ЭлементыФормы.ТабличнаяЧасть.СписокВыбора.Количество() > 0 Тогда
		ТабличнаяЧасть = ЭлементыФормы.ТабличнаяЧасть.СписокВыбора[0].Значение;	
	КонецЕсли;		
	
	СохраненнаяНастройка = ПолучитьСохраненнуюНастройку();
	Если СохраненнаяНастройка = Неопределено или  не СохраненнаяНастройка.НастройкаПоДокументам.Свойство(ТипДокумента) тогда
		ОбновитьТаблицуСоответствияКолонок(ТабличнаяЧасть);
	Иначе
		ОбновитьТаблицуСоответствияКолонок(ТабличнаяЧасть,истина);
		Если СохраненнаяНастройка.Свойство("НастройкаПоДокументам") и СохраненнаяНастройка.НастройкаПоДокументам.Свойство(ТипДокумента) Тогда
			СохраненнаяНастройка = СохраненнаяНастройка.НастройкаПоДокументам[ТипДокумента];
			СохраненнаяНастройка.Свойство("ИспользоватьСтандартнуюНастройку",ИспользоватьСтандартнуюНастройку);
			// 20.11.2013 +
			// СохраненнаяНастройка.Свойство("ОчищатьКоличествоПередЗаполнением",ОчищатьКоличествоПередЗаполнением);
			// 20.11.2013 -
			ТабличнаяЧастьИмя  = "";
			СохраненнаяНастройка.Свойство("ТабличнаяЧасть",ТабличнаяЧастьИмя);
			Если ЗначениеЗаполнено(ТабличнаяЧастьИмя) Тогда			
				ТабличнаяЧасть     =  Метаданные.документы[ТипДокумента].ТабличныеЧасти[ТабличнаяЧастьИмя];
				//ОбновитьТаблицуСоответствияКолонок(ТабличнаяЧасть);
			КонецЕсли;    
			Если  СохраненнаяНастройка.Свойство("ФорматЗагрузки") Тогда
				Для каждого СтрокаТаблицы из СохраненнаяНастройка.ФорматЗагрузки Цикл
					ЗаполнитьЗначенияСвойств(ФорматЗагрузки.Добавить(),СтрокаТаблицы);
 				КонецЦикла;
			КонецЕсли;
			Если  СохраненнаяНастройка.Свойство("ФорматПоискаНоменклатуры") Тогда
				Для каждого СтрокаТаблицы из СохраненнаяНастройка.ФорматПоискаНоменклатуры Цикл
					ЗаполнитьЗначенияСвойств(ФорматПоискаНоменклатуры.Добавить(),СтрокаТаблицы);
 				КонецЦикла;
			КонецЕсли; 
		КонецЕсли;
		
	КонецЕсли;	
	
	УстановитьВидимость();    
	
КонецПроцедуры

Процедура ОбновитьТаблицуСоответствияКолонок(ТабличнаяЧасть,ОбновитьТолькоСписокВыбораЭлементов = Ложь)
	
	ЭлементыФормы.ФорматЗагрузки.Колонки.ПолеТабличнойЧастиДокумента.ЭлементУправления.СписокВыбора.Очистить();
	ЭлементыФормы.ФорматПоискаНоменклатуры.Колонки.ПолеТабличнойЧастиДокумента.ЭлементУправления.СписокВыбора.Очистить();
    СписокРеквизитовФорматПоискаНоменклатуры = Новый СписокЗначений;

	ФорматЗагрузки.Очистить();
	ФорматПоискаНоменклатуры.Очистить();
	СписокРеквизитовТабличнойЧасти = Новый СписокЗначений;
	ЕстьПолеСТипомЯчейка1 = Ложь;
	
	Для каждого РеквизитТаблицы из ТабличнаяЧасть.Реквизиты Цикл
		ЕстьПолеСТипомЯчейка = (Найти(мНазваниеКонфигурации, "автосалон5") и РеквизитТаблицы.Тип.СодержитТип(Тип("СправочникСсылка.ЯчейкиХранения")));
		Если не ЕстьПолеСТипомЯчейка1 Тогда
			ЕстьПолеСТипомЯчейка1 = ЕстьПолеСТипомЯчейка;
		КонецЕсли;
		ТипРеквизита = Строка(РеквизитТаблицы.Тип);
		Если РеквизитТаблицы.Тип.СодержитТип(Тип("Строка"))
			ИЛИ РеквизитТаблицы.Тип.СодержитТип(Тип("Число"))
			ИЛИ РеквизитТаблицы.Тип.СодержитТип(Тип("Дата"))
			ИЛИ РеквизитТаблицы.Тип.СодержитТип(Тип("Булево"))			
			или ЕстьПолеСТипомЯчейка Тогда
			СписокРеквизитовТабличнойЧасти.Добавить(РеквизитТаблицы.Имя,РеквизитТаблицы.Синоним);
		КонецЕсли;
	КонецЦикла;
	
	СписокРеквизитовТабличнойЧасти.СортироватьПоЗначению();
	ЭлементыФормы.ФорматЗагрузки.Колонки.ПолеТабличнойЧастиДокумента.ЭлементУправления.СписокВыбора = СписокРеквизитовТабличнойЧасти;
	
	СписокРеквизитовФорматПоискаНоменклатуры = Новый СписокЗначений;
 	Для каждого РеквизитТаблицы из ТабличнаяЧасть.Реквизиты Цикл
 		СписокРеквизитовФорматПоискаНоменклатуры.Добавить(РеквизитТаблицы.Имя,РеквизитТаблицы.Синоним);
	КонецЦикла;     	
	СписокРеквизитовФорматПоискаНоменклатуры.СортироватьПоЗначению();
	ЭлементыФормы.ФорматПоискаНоменклатуры.Колонки.ПолеТабличнойЧастиДокумента.ЭлементУправления.СписокВыбора = СписокРеквизитовФорматПоискаНоменклатуры;

    ЗаполнитьФорматыПоУмолчанию("ФорматЗагрузки",ОбновитьТолькоСписокВыбораЭлементов,ЕстьПолеСТипомЯчейка1);
	ЗаполнитьФорматыПоУмолчанию("ФорматПоискаНоменклатуры",ОбновитьТолькоСписокВыбораЭлементов,ЕстьПолеСТипомЯчейка1);
	 
КонецПроцедуры

Процедура ЗаполнитьФорматыПоУмолчанию(ТЧФорматИмя,ОбновитьТолькоСписокВыбораЭлементов,ЕстьПолеСТипомЯчейка1 = ложь)
	
	Список = Новый СписокЗначений;
	Список.Добавить("КоличествоПлан","04_Количество");
	Список.Добавить("КоличествоФакт","05_Количество");
	Список.Добавить("Цена","06_Цена");
	Список.Добавить("СуммаПлан","07_Сумма");
	Список.Добавить("СуммаФакт","08_Сумма");
	
	ТЧДОкумента1С = Метаданные.Документы[ТипДокумента].ТабличныеЧасти[ТабличнаяЧасть.Имя].Реквизиты; 

	ФорматЗагрузкиСписокВыбора = Новый СписокЗначений;
	ФорматПоискаСписокВыбора = Новый СписокЗначений;
	Если ТЧФорматИмя = "ФорматЗагрузки"  Тогда  		
		Для Каждого ЭлементСписка из Список Цикл
			Если Не ОбновитьТолькоСписокВыбораЭлементов Тогда
				НоваяСтрока = ФорматЗагрузки.Добавить();
				НоваяСтрока.ПолеТабличнойЧастиОбработки = ЭлементСписка.Значение;
				РеквизитИмя = Прав(ЭлементСписка.Представление,СтрДлина(ЭлементСписка.Представление)-3);
				Если ТЧДОкумента1С.найти(РеквизитИмя) <> Неопределено  Тогда
					НоваяСтрока.ПолеТабличнойЧастиДокумента = РеквизитИмя;
				КонецЕсли;	
			КонецЕсли;  		
			ФорматЗагрузкиСписокВыбора.Добавить(ЭлементСписка.Значение);
		КонецЦикла;
		
		//добавление полей документа ТСД.+
		ДокументыТСД = Этаформа.ВладелецФормы.ВладелецФормы.ДокументыТСД;
		Спис = Новый СписокЗначений;
		Спис.ЗагрузитьЗначения(ДокументыТСД.ВыгрузитьКолонку("ИдДокумента"));
 		
		ДокументыТСДНаСервере = Этаформа.ВладелецФормы.ВладелецФормы.мОбъект.Драйвер.ПолучитьДокументы(Спис);
		ТаблицаСоВсемиПолямиДокументаТСД = Этаформа.ВладелецФормы.ВладелецФормы.ПолучитьСписокКолонокДляТаблицыЗначенийИзДокументовТСД(ДокументыТСДНаСервере);
		Для каждого КолонкаТаблицы из ТаблицаСоВсемиПолямиДокументаТСД.Колонки Цикл
			КолонкаТаблицыИмя = КолонкаТаблицы.Имя;
			ФорматЗагрузкиСписокВыбора.Добавить(КолонкаТаблицыИмя);
		КонецЦикла;
		//добавление полей документа ТСД.-
		ФорматЗагрузкиСписокВыбора.СортироватьПоПредставлению();
		ЭлементыФормы.ФорматЗагрузки.Колонки.ПолеТабличнойЧастиОбработки.ЭлементУправления.СписокВыбора = ФорматЗагрузкиСписокВыбора;
	КонецЕсли;
	
	Список.Добавить("Номенклатура","01_Номенклатура");
	Список.Добавить("ХарактеристикаНоменклатуры","02_ХарактеристикаНоменклатуры");
	Список.Добавить("ЕдиницаИзмерения","03_ЕдиницаИзмерения");
	
	Если ТабличнаяЧасть.Реквизиты.Найти("СерияНоменклатуры") <> Неопределено тогда
		Список.Добавить("СерияНоменклатуры","03_СерияНоменклатуры");
	КонецЕсли;
	
	Если ТЧФорматИмя = "ФорматПоискаНоменклатуры"  Тогда
		Если ЕстьПолеСТипомЯчейка1 Тогда
			Список.Добавить("ЯчейкаОткуда","09_Ячейка");
			Список.Добавить("ЯчейкаКуда","10_Ячейка");
		КонецЕсли;
		
		Список.СортироватьПоПредставлению();
		Для Каждого ЭлементСписка из Список Цикл
			Если Не ОбновитьТолькоСписокВыбораЭлементов Тогда
				НоваяСтрока = ФорматПоискаНоменклатуры.Добавить();
				НоваяСтрока.ПолеТабличнойЧастиОбработки = ЭлементСписка.Значение;
				РеквизитИмя = Прав(ЭлементСписка.Представление,СтрДлина(ЭлементСписка.Представление)-3);
				Если ТЧДОкумента1С.найти(РеквизитИмя) <> Неопределено  Тогда
					НоваяСтрока.ПолеТабличнойЧастиДокумента = РеквизитИмя;
				КонецЕсли;	
			КонецЕсли;
			ФорматПоискаСписокВыбора.Добавить(ЭлементСписка.Значение);
		КонецЦикла;	
		
		//+MAV. 26.08.2014. №207. Поиск строк ТЧ по новым полям ТСД.
		ДокументыТСД = Этаформа.ВладелецФормы.ВладелецФормы.ДокументыТСД;
		Спис = Новый СписокЗначений;
		Спис.ЗагрузитьЗначения(ДокументыТСД.ВыгрузитьКолонку("ИдДокумента"));
 		
		ДокументыТСДНаСервере = Этаформа.ВладелецФормы.ВладелецФормы.мОбъект.Драйвер.ПолучитьДокументы(Спис);
		ТаблицаСоВсемиПолямиДокументаТСД = Этаформа.ВладелецФормы.ВладелецФормы.ПолучитьСписокКолонокДляТаблицыЗначенийИзДокументовТСД(ДокументыТСДНаСервере);
		Для каждого КолонкаТаблицы из ТаблицаСоВсемиПолямиДокументаТСД.Колонки Цикл
			КолонкаТаблицыИмя = КолонкаТаблицы.Имя;
			ФорматПоискаСписокВыбора.Добавить(КолонкаТаблицыИмя);
		КонецЦикла;
		//-MAV. 26.08.2014. №207. Поиск строк ТЧ по новым полям ТСД.
		
		ЭлементыФормы.ФорматПоискаНоменклатуры.Колонки.ПолеТабличнойЧастиОбработки.ЭлементУправления.СписокВыбора = ФорматПоискаСписокВыбора;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличнаяЧастьПриИзменении(Элемент)
	
	ОбновитьТаблицуСоответствияКолонок(ТабличнаяЧасть);
    ПроверитьТаблицуФорматПоискаНоменклатурыНаСоответствиеРеквизитамВыбраннойТЧ(ТабличнаяЧасть);
	
КонецПроцедуры

Функция ПолучитьСтруктуруНастройки() Экспорт
	
	СтруктураНастройки = Новый Структура;
	Если Найти(мНазваниеКонфигурации,"штрихм") > 0 Тогда
		СтруктураНастройки.Вставить("Пользователь", ПараметрыСеанса.глТекущийПользователь);
	ИначеЕсли Найти(мНазваниеКонфигурации,"автосалон5") > 0 тогда
	Иначе
		СтруктураНастройки.Вставить("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	КонецЕсли;
	СтруктураНастройки.Вставить("ИмяОбъекта", мНазваниеСохраненнойНастройкиЗаполненияДокументов);
	СтруктураНастройки.Вставить("НаименованиеНастройки", мНазваниеСохраненнойНастройкиЗаполненияДокументов);
	
	мСтруктураНастройкиДокумента = Новый Структура;
	мСтруктураНастройкиДокумента.Вставить("ИспользоватьСтандартнуюНастройку",ИспользоватьСтандартнуюНастройку);
	мСтруктураНастройкиДокумента.Вставить("ТабличнаяЧасть",?(ТабличнаяЧасть <> Неопределено,ТабличнаяЧасть.Имя,""));
	мСтруктураНастройкиДокумента.Вставить("ФорматЗагрузки",ФорматЗагрузки);
	
	мСтруктураНастройки = Новый Структура;
	мСтруктураНастройкиДокумента1 = Новый Структура;
	мСтруктураНастройкиДокумента1.Вставить(ТипДокумента,мСтруктураНастройкиДокумента);
	мСтруктураНастройки.Вставить("НастройкаПоДокументам",мСтруктураНастройкиДокумента1);
	СтруктураНастройки.Вставить("СохраненнаяНастройка", мСтруктураНастройки);
	
	Возврат СтруктураНастройки;
	
КонецФункции

Функция СохранитьНастройку(СтруктураНастройки) Экспорт
	
	НастройкаСохранена = Ложь;	
	Если Найти(мНазваниеКонфигурации, "далионуправлениемагазином") > 0 Тогда
		СохраненнаяНастройка = Справочники.НастройкиПользователей.НайтиПоНаименованию(мНазваниеСохраненнойНастройкиЗаполненияДокументов,истина);
		Если СохраненнаяНастройка.Пустая() тогда
			СохраненнаяНастройкаОбъект = Справочники.НастройкиПользователей.СоздатьЭлемент();
			СохраненнаяНастройкаОбъект.Наименование = мНазваниеСохраненнойНастройкиЗаполненияДокументов;
			СохраненнаяНастройкаОбъект.ТипНастройки = Перечисления.ТипНастройкиПользователя.НастройкаОтчета;
		Иначе
			СохраненнаяНастройкаОбъект = СохраненнаяНастройка.ПолучитьОбъект();
		КонецЕсли;
		СохраненнаяНастройкаОбъект.Значение = Новый ХранилищеЗначения(СтруктураНастройки);
		Попытка
			СохраненнаяНастройкаОбъект.Записать();
			НастройкаСохранена = Истина;
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	ИначеЕсли Найти(мНазваниеКонфигурации, "автосалон5") > 0 Тогда
		СохраненнаяНастройка = Справочники.ВнешниеПечатныеФормы.НайтиПоНаименованию(мНазваниеСохраненнойНастройкиЗаполненияДокументов,истина);
		Если СохраненнаяНастройка.Пустая() тогда
			СохраненнаяНастройкаОбъект = Справочники.ВнешниеПечатныеФормы.СоздатьЭлемент();
			СохраненнаяНастройкаОбъект.Наименование = мНазваниеСохраненнойНастройкиЗаполненияДокументов;
			СохраненнаяНастройкаОбъект.ВидОбработки = Перечисления.ВидыВнешнихОбработок.Обработка;
			СохраненнаяНастройкаОбъект.Родитель     = Справочники.ВнешниеПечатныеФормы.ВнешниеОбработки;
		Иначе
			СохраненнаяНастройкаОбъект = СохраненнаяНастройка.ПолучитьОбъект();
		КонецЕсли;
		СохраненнаяНастройкаОбъект.Хранилище = Новый ХранилищеЗначения(СтруктураНастройки);
		Попытка
			СохраненнаяНастройкаОбъект.Записать();
			НастройкаСохранена = Истина;
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;     		
	ИначеЕсли ПоддержкаДругихВерсий() Тогда	
		СохранитьЗначение(мНазваниеСохраненнойНастройкиЗаполненияДокументов,СтруктураНастройки);
	Иначе
		Выполнить("НастройкаСохранена = УниверсальныеМеханизмы.СохранитьНастройку(СтруктураНастройки)");
	КонецЕсли;
	
	Возврат НастройкаСохранена;
	
КонецФункции

Функция ПолучитьСохраненнуюНастройку() Экспорт
	
	ЗапросНастройки = новый Запрос;
	Если Найти(мНазваниеКонфигурации, "далионуправлениемагазином") > 0   Тогда
		ЗапросНастройки.Текст = "ВЫБРАТЬ
		|	НастройкиПользователей.Значение как СохраненнаяНастройка
		|ИЗ
		|	Справочник.НастройкиПользователей КАК НастройкиПользователей
		|ГДЕ
		|	НастройкиПользователей.Наименование = &НаименованиеНастройки" ;
	ИначеЕсли Найти(мНазваниеКонфигурации, "автосалон5") > 0   Тогда
		ЗапросНастройки.Текст = "ВЫБРАТЬ
		|	НастройкиПользователей.Хранилище как СохраненнаяНастройка
		|ИЗ
		|	Справочник.ВнешниеПечатныеФормы КАК НастройкиПользователей
		|ГДЕ
		|	НастройкиПользователей.Наименование = &НаименованиеНастройки" ;
	ИначеЕсли ПоддержкаДругихВерсий() Тогда	
		СохраненноеЗначение = ВосстановитьЗначение(мНазваниеСохраненнойНастройкиЗаполненияДокументов);
		Возврат ?(СохраненноеЗначение = Неопределено, Неопределено, СохраненноеЗначение.СохраненнаяНастройка);
	Иначе
		ЗапросНастройки.Текст = "ВЫБРАТЬ
		|СохраненныеНастройки.СохраненнаяНастройка
		|ИЗ
		|	РегистрСведений.СохраненныеНастройки КАК СохраненныеНастройки
		|ГДЕ
		|СохраненныеНастройки.Пользователь = &Пользователь
		|	И СохраненныеНастройки.НаименованиеНастройки = &НаименованиеНастройки" ;
	КонецЕсли;
	
	Если Найти(мНазваниеКонфигурации,"штрихм") > 0 Тогда
		ТекущийПользователь = ПараметрыСеанса.глТекущийПользователь;
	ИначеЕсли  Найти(мНазваниеКонфигурации, "автосалон5") > 0 Тогда	
	Иначе
		ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	ЗапросНастройки.УстановитьПараметр("Пользователь",  ТекущийПользователь);
	ЗапросНастройки.УстановитьПараметр("НаименованиеНастройки",мНазваниеСохраненнойНастройкиЗаполненияДокументов);
	РезультатЗапроса = ЗапросНастройки.Выполнить();
	ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
	Если ВыборкаИзРезультатаЗапроса.Следующий() Тогда
		Если  Найти(мНазваниеКонфигурации, "далионуправлениемагазином") > 0 или Найти(мНазваниеКонфигурации, "автосалон5") > 0 Тогда 
			Возврат ВыборкаИзРезультатаЗапроса.СохраненнаяНастройка.Получить().СохраненнаяНастройка;
		иначе
			Возврат ВыборкаИзРезультатаЗапроса.СохраненнаяНастройка.Получить();
		КонецЕсли;
	Иначе
		Возврат Неопределено
	конецесли;
	
КонецФункции
  
Процедура ДействияФормыСравка(Кнопка)
	
	ФормаСправки = ПолучитьФорму("ФормаСправки");
	ФормаСправки.МакетСправки = "Загрузка данных с ТСД Настройки заполнения.mht";
	ФормаСправки.Заголовок = "Справка к форме """+ЭтаФорма.Заголовок+""" обработки """+ ОбработкаОбъект.Метаданные().Синоним+"""";
	
	Если НЕ ФормаСправки.Открыта() Тогда
		ФормаСправки.Открыть();
	Иначе
		ФормаСправки.ОбновитьДанные();
	КонецЕсли; 

КонецПроцедуры

Процедура ПроверитьТаблицуФорматПоискаНоменклатурыНаСоответствиеРеквизитамВыбраннойТЧ(ТабличнаяЧасть)
 	
	сч = 0;
	Пока сч < ФорматПоискаНоменклатуры.Количество() Цикл
		Если ТабличнаяЧасть.Реквизиты.найти(ФорматПоискаНоменклатуры[сч].ПолеТабличнойЧастиДокумента) <> Неопределено Тогда
			сч = сч +1;
		Иначе
			ФорматПоискаНоменклатуры.Удалить(сч);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ФорматЗагрузкиПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ = истина;
КонецПроцедуры

Процедура ФорматЗагрузкиПослеУдаления(Элемент)
	Отказ = истина;
КонецПроцедуры

Процедура ФорматПоискаНоменклатурыПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ = истина;
КонецПроцедуры

Процедура ФорматПоискаНоменклатурыПередУдалением(Элемент, Отказ)
	Отказ = истина;
КонецПроцедуры

Процедура КоманднаяПанельФорматЗагрузкиФорматЗагрузкиУстановитьНастройкиПоУмолчанию(Кнопка)
	
	Если ФорматЗагрузки.Количество()> 0 и Вопрос("Текущие настройки переноса данных в табличную часть будут очищены. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда		
		ФорматЗагрузки.Очистить();
	КонецЕсли;
	
	Если Вопрос("Заполнить настройки переноса данных в табличную часть по умолчанию?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		ЗаполнитьФорматыПоУмолчанию("ФорматЗагрузки", Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельФорматПоискаФорматПоискаНоменклатурыУстановитьНастройкиПоУмолчанию(Кнопка)
	
	Если ФорматПоискаНоменклатуры.Количество()> 0 и Вопрос("Текущие настройки поиска строк в табличной части документа 1С будут очищены. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда		
		ФорматПоискаНоменклатуры.Очистить();
	КонецЕсли;
	
	Если Вопрос("Заполнить настройки поиска строк в табличной части документа 1С по умолчанию?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		ЗаполнитьФорматыПоУмолчанию("ФорматПоискаНоменклатуры", Ложь)
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОсновныеДействияФормыСохранитьНастройкиВXML(Кнопка)
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	Фильтр = "XML(*.xml)|*.xml";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		ПутьКФайлуXML = ДиалогОткрытияФайла.ПолноеИмяФайла;
	Иначе
		Предупреждение("Не выбран файл. Настройки не сохранены.");
		Возврат;		
 	КонецЕсли;
	
	Запись = Новый ЗаписьXML;
    Запись.ОткрытьФайл(ПутьКФайлуXML,"windows-1251");
    Запись.ЗаписатьОбъявлениеXML();
	Запись.ЗаписатьНачалоЭлемента("Документ");
	Запись.ЗаписатьАтрибут("Конфигурация1С", ТипДокумента); 
	
	//запись реквизтов табличной части
	Запись.ЗаписатьНачалоЭлемента("ТабЧасть");
	Запись.ЗаписатьАтрибут("Вид",ТабличнаяЧасть.Имя);
	Для каждого СтрокаТаблицы из ФорматЗагрузки Цикл
		Если СтрокаТаблицы.Выгружать Тогда
			Запись.ЗаписатьНачалоЭлемента("Реквизит");
			Запись.ЗаписатьАтрибут("Конфигурация1С",СокрЛП(СтрокаТаблицы.ПолеТабличнойЧастиДокумента));
			Запись.ЗаписатьАтрибут("ТСД",СокрЛП(СтрокаТаблицы.ПолеТабличнойЧастиОбработки));
			Запись.ЗаписатьКонецЭлемента();
		КонецЕсли;
	КонецЦикла;
	Запись.ЗаписатьКонецЭлемента(); 	
		
	//запись реквизитов поиска
	Запись.ЗаписатьНачалоЭлемента("ФорматПоискаНоменклатуры");
	Для каждого СтрокаТаблицы из ФорматПоискаНоменклатуры Цикл
		Если СтрокаТаблицы.Выгружать Тогда
			Запись.ЗаписатьНачалоЭлемента("Реквизит");
			Запись.ЗаписатьАтрибут("Конфигурация1С",СокрЛП(СтрокаТаблицы.ПолеТабличнойЧастиДокумента));
			Запись.ЗаписатьАтрибут("ТСД",СокрЛП(СтрокаТаблицы.ПолеТабличнойЧастиОбработки));
			Запись.ЗаписатьКонецЭлемента();
		КонецЕсли;
	КонецЦикла;
	Запись.ЗаписатьКонецЭлемента();  
		
	////+запись дополнительных настроек.
	Запись.ЗаписатьНачалоЭлемента("ДопНастройки");
	
	Запись.ЗаписатьНачалоЭлемента("ИспользоватьСтандартнуюНастройку");
	ЗаписатьXML(Запись,ИспользоватьСтандартнуюНастройку); 
	Запись.ЗаписатьКонецЭлемента();
	
	Запись.ЗаписатьКонецЭлемента();  
	// //-запись дополнительных настроек.
	
	Запись.ЗаписатьКонецЭлемента();
    Запись.Закрыть();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыВосстановитьНастройкиИзXML(Кнопка)
	
	Если Вопрос("Все текущие настройки загрузки документа будут потеряны. Продолжить?", РежимДиалогаВопрос.ДаНет, 0,,"Изменение данных") <> КодВозвратаДиалога.Да Тогда
		Возврат
	КонецЕсли;
	
	НачальноеЗначениеВыбора = Новый Структура;
	НачальноеЗначениеВыбора.Вставить("Документ", Документы[ТипДокумента].ПустаяСсылка());
	НачальноеЗначениеВыбора.Вставить("ЗагрузитьБезВопроса", Истина);
	
	ЭтаФорма.ВладелецФормы.ВладелецФормы.НачальноеЗначениеВыбора = НачальноеЗначениеВыбора;
	ЗагрузкаВыполненаУспешно = ЭтаФорма.ВладелецФормы.ВладелецФормы.ЗагрузитьНастройкиЗагрузкиДокумента1СИзФайла();
	Если ЗагрузкаВыполненаУспешно Тогда
		ПриОткрытии();
	КонецЕсли;
	
КонецПроцедуры
