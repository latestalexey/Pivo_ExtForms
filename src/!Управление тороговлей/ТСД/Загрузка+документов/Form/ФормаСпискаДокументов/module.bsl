Перем НажатаКнопкаOK Экспорт;

Процедура ПриОткрытии()	
	
	ТаблицаДокументов.Колонки.Добавить("Загружать");
	
	колонка = ЭтаФорма.ЭлементыФормы.ТаблицаДокументов.Колонки.Вставить(0, "Загружать");
	колонка.УстановитьЭлементУправления(Тип("Флажок"));
	колонка.Имя = "Загружать";
	колонка.Данные = "Загружать";
	колонка.ДанныеФлажка = "Загружать";
	колонка.Формат = "БЛ= ; БИ= ";
	колонка.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
	колонка.Ширина = 12;
	колонка.ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Центр;
	
	ТаблицаДокументов.Колонки.Добавить("ОчищатьКоличествоПередЗаполнением");
	
	колонка = ЭтаФорма.ЭлементыФормы.ТаблицаДокументов.Колонки.Вставить(3, "Очищать количество" + Символы.ПС + "перед заполнением");
	колонка.УстановитьЭлементУправления(Тип("Флажок"));
	колонка.Имя = "ОчищатьКоличествоПередЗаполнением";
	колонка.Данные = "ОчищатьКоличествоПередЗаполнением";
	колонка.ДанныеФлажка = "ОчищатьКоличествоПередЗаполнением";
	колонка.Формат = "БЛ= ; БИ= ";
	колонка.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
	колонка.Ширина = 22;
	колонка.ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Центр;
	
	Для каждого ОбъектДок из Метаданные.Документы Цикл
		ДобавитьДокументВСписокВыбора = Ложь;
		Для каждого ТабличнаяЧастьДокумента из ОбъектДок.ТабличныеЧасти Цикл
			Если ТабличнаяЧастьДокумента.Реквизиты.Найти("Номенклатура")<> Неопределено Тогда
				ДобавитьДокументВСписокВыбора = Истина;
			КонецЕсли;
		КонецЦикла;
		Если ДобавитьДокументВСписокВыбора Тогда
			Строка = ТаблицаДокументов.Добавить();
			Строка.Документ = ОбъектДок.Представление();
			Строка.ТипДокумента = ОбъектДок.Имя;
			Строка.НастройкаЗаполнения = ПолучитьНастройкуЗаполненияДокумента(ОбъектДок.Имя);
		КонецЕсли;
	КонецЦикла;	
	
	СохрФормат = ВосстановитьЗначение(мИмяДляХраненияНастроек);
	СписокОчисткиКоличества = ВосстановитьЗначение(мИмяДляХраненияНастроек+"ОчищатьКолВо");
	
	Если ТипЗнч(СохрФормат) <> Тип("СписокЗначений") 
		//или СохрФормат.Количество() = 0 
		Тогда
		 СохрФормат = Неопределено; 
	КонецЕсли;
	
	Если СохрФормат = Неопределено Тогда
		СохрФормат = ОбработкаОбъект.ПолучитьСписокДокументовПоУмолчнию();	
	КонецЕсли;
 
	Для каждого Строка из ТаблицаДокументов Цикл
		Если СохрФормат.НайтиПоЗначению(Строка.ТипДокумента) <> Неопределено Тогда
			Строка.Загружать = истина;	
		КонецЕсли;
		
		Если СписокОчисткиКоличества <> Неопределено И СписокОчисткиКоличества.НайтиПоЗначению(Строка.ТипДокумента) <> Неопределено Тогда
			Строка.ОчищатьКоличествоПередЗаполнением = истина;		
		КонецЕсли;
	КонецЦикла;
	
	// + ZHKN. 07.03.2014. №108.  Сортировка типов документов.
	// ТаблицаДокументов.Сортировать("Загружать УБЫВ,НастройкаЗаполнения Возр, ТипДокумента Возр");
	ТаблицаДокументов.Сортировать("Загружать УБЫВ,Документ Возр");
	// - ZHKN. 07.03.2014.
	   
КонецПроцедуры

Процедура ОКНажатие(Элемент)
	Спис = Новый СписокЗначений;
	СписокОчисткиКоличества = Новый СписокЗначений; 
		
	Для каждого Строка из ТаблицаДокументов Цикл
		Если Строка.Загружать = Истина Тогда
			Спис.Добавить(Строка.ТипДокумента);	
		КонецЕсли;
		
		Если Строка.ОчищатьКоличествоПередЗаполнением = Истина Тогда
        	СписокОчисткиКоличества.Добавить(Строка.ТипДокумента);
		КонецЕсли;
	КонецЦикла;
	Спис.СортироватьПоЗначению();
	НажатаКнопкаOK = Истина;
	СохранитьЗначение(мИмяДляХраненияНастроек, Спис);
	СохранитьЗначение(мИмяДляХраненияНастроек+"ОчищатьКолВо", СписокОчисткиКоличества);
	
	Закрыть();
	
КонецПроцедуры

Процедура ТаблицаДокументовНастройкаЗаполненияНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуНастройки();
	
КонецПроцедуры

Функция ПолучитьНастройкуЗаполненияДокумента(ТипДокумента) Экспорт
	
	НастройкаЗаполнения = "стандартная настройка";
	ФормаНастройкиЗаполненияДокумента = ПолучитьФорму("ФормаФорматЗагрузки", ЭтаФорма);
	ФормаНастройкиЗаполненияДокумента.ТипДокумента = ТипДокумента;
	СохраненнаяНастройка = ФормаНастройкиЗаполненияДокумента.ПолучитьСохраненнуюНастройку();
	Если СохраненнаяНастройка <> Неопределено тогда
		Если СохраненнаяНастройка.Свойство("НастройкаПоДокументам") и СохраненнаяНастройка.НастройкаПоДокументам.Свойство(ТипДокумента)
			и не СохраненнаяНастройка.НастройкаПоДокументам[ТипДокумента].ИспользоватьСтандартнуюНастройку Тогда
			 НастройкаЗаполнения = "настройка пользователя";
		КонецЕсли;
	КонецЕсли;
	
	Возврат НастройкаЗаполнения;
	 
КонецФункции

Процедура ТаблицаДокументовНастройкаЗаполненияОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуНастройки();
	
КонецПроцедуры

Процедура ОткрытьФормуНастройки()
	
	ТекущаяСтрока = ЭлементыФормы.ТаблицаДокументов.ТекущаяСтрока;
	ФормаНастройкиЗаполненияДокумента = ПолучитьФорму("ФормаФорматЗагрузки",ЭтаФорма);
	ФормаНастройкиЗаполненияДокумента.ТипДокумента = ТекущаяСтрока.ТипДокумента;
	Если ФормаНастройкиЗаполненияДокумента.ОткрытьМодально() <> КодВозвратаДиалога.ОК Тогда 
		Возврат;	
	КонецЕсли;
	
	Если не ФормаНастройкиЗаполненияДокумента.ИспользоватьСтандартнуюНастройку Тогда
		ТекущаяСтрока.НастройкаЗаполнения = "настройка пользователя";
	иначе
		ТекущаяСтрока.НастройкаЗаполнения = "стандартная настройка";
	КонецЕсли;

КонецПроцедуры

Процедура КоманднаяПанельФормыВерхняяСправка(Кнопка)
	
	ФормаСправки = ПолучитьФорму("ФормаСправки");
	ФормаСправки.МакетСправки = "Загрузка данных с ТСД Настройки заполнения.mht";
	ФормаСправки.Заголовок = "Справка к форме """+ЭтаФорма.Заголовок+""" обработки """+ ОбработкаОбъект.Метаданные().Синоним+"""";
	
	Если НЕ ФормаСправки.Открыта() Тогда
		ФормаСправки.Открыть();
	Иначе
		ФормаСправки.ОбновитьДанные();
	КонецЕсли; 

КонецПроцедуры

Процедура ТаблицаДокументовПередУдалением(Элемент, Отказ)
	Отказ = истина;
КонецПроцедуры

Процедура ТаблицаДокументовПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ = истина;
КонецПроцедуры

Процедура ТаблицаДокументовПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для каждого СтрокаОформления из ОформленияСтрок Цикл
		Если Найти(СтрокаОформления.ДанныеСтроки.НастройкаЗаполнения,"стандартная") > 0 Тогда
			СтрокаОформления.Ячейки.НастройкаЗаполнения.ЦветТекста = WebЦвета.Серый;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

НажатаКнопкаOK = ложь;