  Перем ЗаписаныНовыеШтрихкоды;
  
Процедура ПриОткрытии()
	
	//создать колонки табличной части в соответствии с данными объекта, в котором хранятся штрихкоды.
 	ТаблицаНовыеШтрихкоды = Новый ТаблицаЗначений;
	ТаблицаНовыеШтрихкоды.Колонки.Добавить("НомерСтроки",Новый  ОписаниеТипов("Число"),"N");
	ТаблицаНовыеШтрихкоды.Колонки.Добавить("Изменить",Новый  ОписаниеТипов("Булево"));

	Если Найти(СтруктураОбъектаХраненияШтрихкодов.ОбъектМетаданных,"РегистрСведений") Тогда
	 	ОбработатьКоллекциюМетаданныхОбъекта(ТаблицаНовыеШтрихкоды,СтруктураОбъектаХраненияШтрихкодов.ОбъектМетаданных+".Измерения");
		ОбработатьКоллекциюМетаданныхОбъекта(ТаблицаНовыеШтрихкоды,СтруктураОбъектаХраненияШтрихкодов.ОбъектМетаданных+".Ресурсы");
		ОбработатьКоллекциюМетаданныхОбъекта(ТаблицаНовыеШтрихкоды,СтруктураОбъектаХраненияШтрихкодов.ОбъектМетаданных+".Реквизиты");
	Иначе
		ОбработатьКоллекциюМетаданныхОбъекта(ТаблицаНовыеШтрихкоды,СтруктураОбъектаХраненияШтрихкодов.ОбъектМетаданных+".Реквизиты");
	КонецЕсли;
	
	ЭлементыФормы.ТаблицаНовыеШтрихкоды.Значение = ТаблицаНовыеШтрихкоды;
	ЭлементыФормы.ТаблицаНовыеШтрихкоды.СоздатьКолонки();
	
	Для каждого Колонка из ТаблицаНовыеШтрихкоды.Колонки Цикл
		КолонкаТЧ =  ЭлементыФормы.ТаблицаНовыеШтрихкоды.Колонки[Колонка.Имя];
		ЭлементУправленияТЧ = КолонкаТЧ.ЭлементУправления;
		ЭлементУправленияТЧ.УстановитьДействие("НачалоВыбора",Новый Действие("ДействиеНачалоВыбораЗначения"));
		ЭлементУправленияТЧ.УстановитьДействие("ПриИзменении",Новый Действие("ДействиеПриИзмененииЗначения"));
		ЭлементУправленияТЧ.АвтоОтметкаНезаполненного = Истина;
		ЭлементУправленияТЧ.ОтметкаНезаполненного     = Истина;
		КолонкаТЧ.Ширина  = 15;
	КонецЦикла;
	
	КолонкаФлагВыбора = ЭлементыФормы.ТаблицаНовыеШтрихкоды.Колонки.Найти("Изменить");
	КолонкаФлагВыбора.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;  
	КолонкаФлагВыбора.УстановитьЭлементУправления(Тип("Флажок"));
	КолонкаФлагВыбора.ДанныеФлажка     = "Изменить";
	КолонкаФлагВыбора.Данные           = "";
	КолонкаФлагВыбора.ТекстШапки       = "Записывать";
	КолонкаФлагВыбора.Ширина           = 10;
	КолонкаФлагВыбора.ЭлементУправления.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
	КолонкаФлагВыбора.ИзменениеРазмера = ИзменениеРазмераКолонки.НеИзменять;
	
	КолонкаНомерСтроки = ЭлементыФормы.ТаблицаНовыеШтрихкоды.Колонки.Найти("НомерСтроки");
	КолонкаНомерСтроки.Ширина           = 3;
    КолонкаНомерСтроки.ТолькоПросмотр   = Истина;
 	КолонкаНомерСтроки.ИзменениеРазмера = ИзменениеРазмераКолонки.НеИзменять;
	
	КолонкаШтрихкод = ЭлементыФормы.ТаблицаНовыеШтрихкоды.Колонки.Найти(СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаГдеХранитсяШтрихКод);
	КолонкаШтрихкод.Ширина           = 13;
    КолонкаШтрихкод.ТолькоПросмотр   = Истина;
  	КолонкаШтрихкод.ИзменениеРазмера = ИзменениеРазмераКолонки.НеИзменять;

	
	 	
	КолонкаНоменклатура = ЭлементыФормы.ТаблицаНовыеШтрихкоды.Колонки[СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаНоменклатура]; 
	КолонкаНоменклатура.ЭлементУправления.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Номенклатура"); 
	КолонкаНоменклатура.ЭлементУправления.Значение = КолонкаНоменклатура.ЭлементУправления.ОграничениеТипа.ПривестиЗначение(КолонкаНоменклатура.ЭлементУправления.Значение);

	//обработка полученной таблицы штрихкодов с MobileSMARTS в соответствии с объектом 1С где хранятся штрихкоды.Начало.
	ВладелецФормы.ТЗНовыеШтрихкоды.Свернуть("КодТовара,НаименованиеТовара,НаименованиеУпаковки,Штрихкод,Характеристика,СерияНоменклатуры");
	Для каждого СтрокаТЧ из ВладелецФормы.ТЗНовыеШтрихкоды Цикл
		Если ШтрихКодЕстьВБазе(Ложь,СтрокаТЧ.ШтрихКод) Тогда
			Продолжить
		КонецЕсли;
		
		НоваяСтрока =  ТаблицаНовыеШтрихкоды.Добавить();
		НоваяСтрока.НомерСтроки = ТаблицаНовыеШтрихкоды.Индекс(НоваяСтрока)+1;
		НоваяСтрока[СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаГдеХранитсяШтрихКод] = СтрокаТЧ.ШтрихКод;
		НоваяСтрока[СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаНоменклатура] = Справочники.Номенклатура.ПустаяСсылка();
		Если ЗначениеЗаполнено(СтрокаТЧ.НаименованиеТовара) или  ЗначениеЗаполнено(СтрокаТЧ.КодТовара)Тогда
			Номенклатура = Справочники.Номенклатура.НайтиПоКоду(СтрокаТЧ.КодТовара);
			Если не ЗначениеЗаполнено(Номенклатура) Тогда
				Номенклатура = Справочники.Номенклатура.НайтиПоНаименованию(СтрокаТЧ.НаименованиеТовара,истина);
			КонецЕсли;
			Если не ЗначениеЗаполнено(Номенклатура) Тогда
				Продолжить;
			КонецЕсли;	
			
			НоваяСтрока[СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаНоменклатура]   = Номенклатура;
			НоваяСтрока[СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаХарактеристика] = Справочники.ХарактеристикиНоменклатуры.найтиПоНаименованию(СтрокаТЧ.Характеристика,Истина,,Номенклатура);
			
			ЕдИзм = Справочники.ЕдиницыИзмерения.НайтиПоКоду(СтрокаТЧ.НаименованиеУпаковки,,,Номенклатура);
			Если не ЗначениеЗаполнено(ЕдИзм) Тогда
				ЕдИзм = Справочники.ЕдиницыИзмерения.НайтиПоНаименованию(СтрокаТЧ.НаименованиеУпаковки,,,Номенклатура);
			КонецЕсли;
			Если ЗначениеЗаполнено(ЕдИзм) Тогда
				НоваяСтрока[СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаУпаковка] = ЕдИзм;
			КонецЕсли;
		КонецЕсли;
		ЗаполнитьЗначенияПоУмолчанию(НоваяСтрока);
	КонецЦикла;
	//обработка полученной таблицы штрихкодов с MobileSMARTS в соответствии с объектом 1С где хранятся штрихкоды.Окончание.
 
КонецПроцедуры

Процедура ЗаполнитьЗначенияПоУмолчанию(НоваяСтрока)
	
	Попытка
		Если Найти(мНазваниеКонфигурации,"далионуправлениемагазином") > 0 Тогда
			Выполнить("НоваяСтрока.ТипШтрихкода = ОпределениеТипаШтрихКода(НоваяСтрока.Штрихкод)");
		ИначеЕсли Найти(мНазваниеКонфигурации,"штрихм") > 0 Тогда
		ИначеЕсли Найти(мНазваниеКонфигурации,"розница") > 0  Тогда
			НоваяСтрока.ТипШтрихкода  = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13;
			НоваяСтрока.ПредставлениеШтрихкода = НоваяСтрока[СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаГдеХранитсяШтрихКод];
		ИначеЕсли Найти(мНазваниеКонфигурации,"автосалон5") > 0 Тогда 
		Иначе // ут 10.3 упп ка
			НоваяСтрока.Качество      = Справочники.Качество.Новый;
			НоваяСтрока.ТипШтрихкода  = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13;
			НоваяСтрока.ПредставлениеШтрихкода = НоваяСтрока[СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаГдеХранитсяШтрихКод];
		КонецЕсли;  
	Исключение
	КонецПопытки;
	
КонецПроцедуры

Процедура ОбработатьКоллекциюМетаданныхОбъекта(ТаблицаНовыеШтрихкоды,Знач КоллекцияМетаданныхОбъектаИмя)
	
	КоллекцияМетаданныхОбъекта = "";
	КоллекцияМетаданныхОбъектаИмя = СтрЗаменить(КоллекцияМетаданныхОбъектаИмя,"РегистрСведений","РегистрыСведений");
	КоллекцияМетаданныхОбъектаИмя = СтрЗаменить(КоллекцияМетаданныхОбъектаИмя,"Справочник","Справочники");
	
	Выполнить("КоллекцияМетаданныхОбъекта = Метаданные."+КоллекцияМетаданныхОбъектаИмя);
	 	Если Найти(КоллекцияМетаданныхОбъектаИмя, "Справочник") Тогда
		ЕстьКолонкаНоменклатура = Ложь;
		ЕстьКолонкаШтрихКод     = Ложь;
		Для каждого КолонкаТаблицы из ТаблицаНовыеШтрихкоды Цикл
			Если  КолонкаТаблицы.Синоним = "Номенклатура" Тогда
				ЕстьКолонкаНоменклатура = Истина;
			КонецЕсли;
			Если  КолонкаТаблицы.Синоним = "Штрихкод" Тогда
				ЕстьКолонкаШтрихКод = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если не ЕстьКолонкаНоменклатура Тогда
			ТаблицаНовыеШтрихкоды.Колонки.Добавить(СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаНоменклатура,Новый ОписаниеТипов("СправочникСсылка.номенклатура"),"Номенклатура");
		КонецЕсли;
		Если не ЕстьКолонкаШтрихКод Тогда
			ТаблицаНовыеШтрихкоды.Колонки.Добавить(СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаГдеХранитсяШтрихКод,Новый ОписаниеТипов("Строка"),"Штрихкод");
		КонецЕсли;
	КонецЕсли;

	ТипНоменклатура = Тип("СправочникСсылка.Номенклатура");
	
	Для каждого ЭлементКоллекции из КоллекцияМетаданныхОбъекта Цикл
		Если  Найти(ЭлементКоллекции.имя,"Удалить") = 0 Тогда
			НазваниеКолонкиНоменклатура = ?(ЭлементКоллекции.тип.СодержитТип(ТипНоменклатура),"Номенклатура", ЭлементКоллекции.Синоним);
			ТаблицаНовыеШтрихкоды.Колонки.Добавить(ЭлементКоллекции.имя,ЭлементКоллекции.Тип,НазваниеКолонкиНоменклатура);
		КонецЕсли;
	КонецЦикла;
		 
КонецПроцедуры

Процедура ДействиеПриИзмененииЗначения(Элемент)
	
	//если номенклатура перевыбрана, проверить соответствие всех значений колонок, выбранных ранее
	Если ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.Номенклатура") Тогда
		Если Элемент.Значение.ЭтоГруппа Тогда
			Элемент.Значение = Справочники.Номенклатура.ПустаяСсылка();
		КонецЕсли;

		Для каждого КолонкаТч из ТаблицаНовыеШтрихкоды.Колонки Цикл
			ИмяКолонки = нрег(КолонкаТч.Имя);
			Если не (ИмяКолонки = нрег(СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаНоменклатура)
				или ИмяКолонки = нрег(СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаГдеХранитсяШтрихКод) 
				или Найти("изменить,номерстроки",НРег(ИмяКолонки))>0) Тогда
				ЭлементыФормы.ТаблицаНовыеШтрихкоды.ТекущаяСтрока[КолонкаТч.Имя] = Неопределено;
			КонецЕсли;
		КонецЦикла;
		ЗаполнитьЗначенияПоУмолчанию(ЭлементыФормы.ТаблицаНовыеШтрихкоды.ТекущаяСтрока)
	КонецЕсли;
	
КонецПроцедуры
 
Процедура ДействиеНачалоВыбораЗначения(Элемент,СтандартнаяОбработка)
	
	//получить владельцев
	попытка
		ВладельцыОбъекта = Элемент.Значение.Метаданные().Владельцы;
		Если ВладельцыОбъекта.Количество() > 0 Тогда
			СтандартнаяОбработка  = Ложь;
		КонецЕсли;
	Исключение
 	КонецПопытки;
	
	//отбор в поле по владельцу
	Если НЕ СтандартнаяОбработка Тогда
		Попытка
			НазваниеРеквизитаНоменклатура = СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаНоменклатура;
			Номенклатура = ЭлементыФормы.ТаблицаНовыеШтрихкоды.ТекущаяСтрока[НазваниеРеквизитаНоменклатура];
			Если ЗначениеЗаполнено(Номенклатура) Тогда
				ФормаВыбора = Справочники[Элемент.Значение.метаданные().имя].ПолучитьФормуВыбора();
 				ФормаВыбора.ПараметрВыборПоВладельцу = Номенклатура;
				ФормаВыбора.ПараметрОтборПоВладельцу = Номенклатура;  
				Элемент.Значение = ФормаВыбора.ОткрытьМодально();
			Иначе
				Предупреждение("Не выбрана номенклатура!",10,"Изменение данных");
			КонецЕсли;
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры


Процедура ОсновныеДействияФормыЗаписатьШтрихкоды(Кнопка)
	
	Отказ = Ложь;
	
	ДобавленныеШК = Новый СписокЗначений;
	
	ОбъектХраненияРегистрСведений = Найти(СтруктураОбъектаХраненияШтрихкодов.ОбъектМетаданных,"РегистрСведений")>0;
	
	РегистрСведенийИмя = СтруктураОбъектаХраненияШтрихкодов.ОбъектМетаданных;
	РегистрСведенийИмя = СтрЗаменить(РегистрСведенийИмя,"РегистрСведений.","");
	
	Для каждого СтрокаТЧ из ТаблицаНовыеШтрихкоды Цикл
		Если Не СтрокаТЧ.Изменить Тогда
			Продолжить;
		КонецЕсли;
		
		//проверить заполненность колонок строки.Начало.
		//все отображаемые колонки должны быть заполнены.
		ДанныеКолонокНеЗаполнены = ложь;
		Для каждого КолонкаТЧ из ТаблицаНовыеШтрихкоды.Колонки Цикл
			КолонкаТЧИмя = Нрег(КолонкаТЧ.имя);
 			Если Найти("изменить,номерстроки",НРег(КолонкаТЧИмя))>0 Тогда
				Продолжить
			КонецЕсли;
			
			Если ОбъектХраненияРегистрСведений Тогда
				ИзмерениеРегистра = Метаданные.РегистрыСведений[РегистрСведенийИмя].Измерения.Найти(КолонкаТЧИмя); 
				Если (ИзмерениеРегистра <> Неопределено и ИзмерениеРегистра.ЗапрещатьНезаполненныеЗначения) 
					или КолонкаТЧИмя = нрег(СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаГдеХранитсяШтрихКод)
					или КолонкаТЧИмя = "качество" 
					или КолонкаТЧИмя = Нрег(СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаНоменклатура) Тогда
					Если не ЗначениеЗаполнено(СтрокаТЧ[КолонкаТЧИмя]) Тогда
						ДанныеКолонокНеЗаполнены = Истина;
						Сообщить("В строке №"+Формат(СтрокаТЧ.НомерСтроки,"ЧГ=")+" не задано значение в колонке """ +КолонкаТЧ.Заголовок+"""",СтатусСообщения.Важное);
					КонецЕсли;
				КонецЕсли;
			Иначе
				Если КолонкаТЧИмя = Нрег(СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаГдеХранитсяШтрихКод)
					или КолонкаТЧИмя = Нрег(СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаНоменклатура)
					или КолонкаТЧИмя = Нрег(СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаУпаковка) тогда
					  Если не ЗначениеЗаполнено(СтрокаТЧ[КолонкаТЧИмя]) Тогда
						ДанныеКолонокНеЗаполнены = Истина;
						Сообщить("В строке №"+Формат(СтрокаТЧ.НомерСтроки,"ЧГ=")+" не задано значение в колонке """ +КолонкаТЧ.Заголовок+"""",СтатусСообщения.Важное);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;			
		КонецЦикла;
		
		Если ДанныеКолонокНеЗаполнены Тогда
			Отказ = Истина;
			Продолжить
		КонецЕсли;
		//проверить заполненность колонок строки.Окончание.
		
		Штрихкод =  СтрокаТЧ[СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаГдеХранитсяШтрихКод];

		//проверка существования штрихкода в базе.Начало.
		Если  ШтрихКодЕстьВБазе(Ложь,Штрихкод) Тогда
			ДобавленныеШК.Добавить(Штрихкод);
			Продолжить
		КонецЕсли;
		//проверка существования штрихкода в базе.Окончание.
		
		Запись = "";
		РегистрСведенийМенеджер = СтруктураОбъектаХраненияШтрихкодов.ОбъектМетаданных;
		РегистрСведенийМенеджер = СтрЗаменить(РегистрСведенийМенеджер,"РегистрСведений.","РегистрыСведений.");
		РегистрСведенийМенеджер = СтрЗаменить(РегистрСведенийМенеджер,"Справочник.","Справочники.");
		Выполнить("Запись = "+РегистрСведенийМенеджер+"."
		+?(Найти(РегистрСведенийМенеджер,"Справочник")>0,"СоздатьЭлемент()","СоздатьМенеджерЗаписи()"));
		ЗаполнитьЗначенияСвойств(Запись,СтрокаТЧ);
		Попытка
			Запись.Записать();
			Сообщить("Добавлен штрихкод """+Штрихкод+""" для номенклатуры """+СокрЛП(Запись[СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаНоменклатура])+"""",СтатусСообщения.Информация);
			ДобавленныеШК.Добавить(Штрихкод);
			ЗаписаныНовыеШтрихкоды = Истина;
		Исключение
			ТекстОшибки = ОписаниеОшибки();
			Сообщить(ТекстОшибки, СтатусСообщения.Важное);
			Предупреждение(ТекстОшибки);	
		КонецПопытки;
	КонецЦикла;
	
	ЕстьДобавленныеШтрихкоды = Ложь;
	Если ДобавленныеШК.Количество()>0 Тогда   //если штрихкоды добавлены в 1с, удалить их с терминала
		ЕстьДобавленныеШтрихкоды = Истина;
		//Ответ = ВладелецФормы.мОбъект.Драйвер.ОбновитьШтрихкоды(ДобавленныеШК);
		//Если Не Ответ Тогда
		//	ОписаниеОшибки = "";
		//	НомерОшибки = ВладелецФормы.мОбъект.Драйвер.ПолучитьОшибку(ОписаниеОшибки);
		//	Сообщить("Ошибка при загрузке новых штрихкодов: " + ОписаниеОшибки);
		//Иначе
			//убрать из ТЧ штрихкоды, которые были успешно добавлены.Начало.
			сч = 0;
			Пока сч < ТаблицаНовыеШтрихкоды.Количество()  Цикл
				Если ДобавленныеШК.НайтиПоЗначению(ТаблицаНовыеШтрихкоды[сч][СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаГдеХранитсяШтрихКод]) <> Неопределено Тогда
					ТаблицаНовыеШтрихкоды.Удалить(сч);
				Иначе
					сч = сч + 1;
				КонецЕсли
			КонецЦикла;      
			
			сч = 0;
			Пока сч < ВладелецФормы.ТЗНовыеШтрихкоды.Количество()  Цикл
				//Если ДобавленныеШК.НайтиПоЗначению(ВладелецФормы.ТЗНовыеШтрихкоды[сч][СтруктураОбъектаХраненияШтрихкодов.НазваниеРеквизитаГдеХранитсяШтрихКод]) <> Неопределено Тогда
				Если ДобавленныеШК.НайтиПоЗначению(ВладелецФормы.ТЗНовыеШтрихкоды[сч]["Штрихкод"]) <> Неопределено Тогда
					ВладелецФормы.ТЗНовыеШтрихкоды.Удалить(сч);
				Иначе
					сч = сч + 1;
				КонецЕсли
			КонецЦикла;   
			//убрать из ТЧ штрихкоды, которые были успешно добавлены.Окончание.
		//КонецЕсли;  		
	КонецЕсли; 
	
	Если Отказ тогда
		Предупреждение("Возникли ошибки при добавлении новых штрихкодов! Не все выбранные для добавления штрихкоды были записаны в базу! Подробное описание ошибки смотрите в окне сообщений!",20,"Изменение данных");
	Иначе
		Если ЕстьДобавленныеШтрихкоды Тогда
			Предупреждение("Штрихкоды успешно добавлены! Список добавленных штрихкодов приведен в окне сообщений!",20,"Изменение данных");
		КонецЕсли;
	КонецЕсли;
	
	Если ТаблицаНовыеШтрихкоды.Количество() = 0 Тогда
		Закрыть()
	КонецЕсли;
	
КонецПроцедуры
 
Процедура КоманднаяПанельТаблицыШтрхкодыОчиститьВыделение(Кнопка)
	
	ТаблицаНовыеШтрихкоды.ЗаполнитьЗначения(Ложь,"Изменить");
	
КонецПроцедуры

Процедура КоманднаяПанельТаблицыШтрхкодыВыделитьВсе(Кнопка)
	
	ТаблицаНовыеШтрихкоды.ЗаполнитьЗначения(Истина,"Изменить");

КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ВладелецФормы.ТЗНовыеШтрихкоды.Количество() = 0 Тогда
		Отказ = истина;
		Предупреждение("Нет новых штрихкодов для добавления!",20);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	Если ЗаписаныНовыеШтрихкоды 
		//и Вопрос("Перезаполнить таблицу товаров полученных из ТСД?", РежимДиалогаВопрос.ДаНет, 0,,"Изменение данных") = КодВозвратаДиалога.Да 
		Тогда			
		ВладелецФормы.ЗагрузитьДанныеНажатие(Неопределено,Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаНовыеШтрихкодыПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = истина;
	
КонецПроцедуры

СтруктураОбъектаХраненияШтрихкодов = ПолучитьСтруктуруОбъектаХраненияШтрихкодов();
ЗаписаныНовыеШтрихкоды = Ложь;