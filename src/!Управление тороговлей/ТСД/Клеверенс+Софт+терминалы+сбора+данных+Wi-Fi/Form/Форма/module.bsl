Перем сНазваниеОбработки;
Перем сВидДрайвера;
Перем сМодельТОпоУмолчанию;
Перем мНазваниеКонфигурации;
Перем сКаталогХраненияКопийКлеверенс;
Перем сПуть;
Перем сОтносительныйПуть;

Процедура ПриОткрытии()
	
	Попытка
		ПрогИД = "AddIn.Cl.TerminalConnector";
		ПодключитьВнешнююКомпоненту(ПрогИД);
		Драйвер = Новый (ПрогИД);
		
		сВидДрайвера = НРег(Драйвер.ПолучитьТипДрайвера());
	Исключение
		сВидДрайвера = "батч";
	КонецПопытки;

	
	хШелл = Новый COMОбъект("Wscript.Shell");
	Путь_AppData = хШелл.ExpandEnvironmentStrings("%ALLUSERSPROFILE%");
	
	мФайл = Новый Файл(ЭтотОбъект.ИспользуемоеИмяФайла);
	сПуть = мФайл.Путь;
	сКаталогХраненияКопийКлеверенс = Путь_AppData + "\Cleverence\Driver1C\Backup\";
	// сКаталогХраненияКопийКлеверенс +
	мФайл = Новый Файл(сКаталогХраненияКопийКлеверенс);
	Если Не мФайл.Существует() Тогда
		сКаталогХраненияКопийКлеверенс = Путь_AppData + "\Application Data\Cleverence\Driver1C\Backup\";	
		мФайл = Новый Файл(сКаталогХраненияКопийКлеверенс);
		Если Не мФайл.Существует() Тогда
			сКаталогХраненияКопийКлеверенс = Путь_AppData + "\";	
		КонецЕсли;	
	КонецЕсли;
	мФайл = Новый Файл(ЭтотОбъект.ИспользуемоеИмяФайла);
	// сКаталогХраненияКопийКлеверенс -
	сОтносительныйПуть = "";
	
	сНазваниеОбработки = мФайл.ИмяБезРасширения;
	сМодельТОпоУмолчанию = "Автонастройка";
	
	Автозапуск_01();
	//мФорма = ПолучитьФорму("ФормаНастройки");
	//мФорма.Открыть();
	Закрыть();
КонецПроцедуры

Процедура Автозапуск_01()
	
	ВнешняяОбработка = Неопределено;
		
	сИмяФайла         = сНазваниеОбработки + ".epf";
 	сПутьОбработки    = ПолучитьПутьКФайлуОбработкиДрайвера();
	сПутьTMPОбработки = ПолучитьПутьКФайлуОбработкиВАрхиве();
	
	//ВнешняяОбработка = ЭтотОбъект;//ВнешниеОбработки.Создать(сПутьОбработки);
	
	// Проверка уже установленной ОбработкиОбслуживанияТО
	// Если нет, добавляем
	// мОписание = ВнешняяОбработка.ПолучитьОписание();
	мОписание = ПолучитьОписание();

	
	мЗапрос = Новый Запрос;
	мЗапрос.Текст = "ВЫБРАТЬ
	|	ОбработкиОбслуживанияТО.Ссылка
	|ИЗ
	|	Справочник.ОбработкиОбслуживанияТО КАК ОбработкиОбслуживанияТО
	|ГДЕ
	|	ОбработкиОбслуживанияТО.ПометкаУдаления = ЛОЖЬ
	|	И ОбработкиОбслуживанияТО.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыТорговогоОборудования.ТерминалСбораДанных)
	|	И ОбработкиОбслуживанияТО.ВерсияAPI = &ВерсияAPI
	|	И ОбработкиОбслуживанияТО.ИмяФайла = &ИмяФайла";
					
	мЗапрос.УстановитьПараметр("ВерсияAPI",мОписание.ВерсияОбработки);		
	мЗапрос.УстановитьПараметр("ИмяФайла",сИмяФайла);			
	
	Попытка
		Выборка = мЗапрос.Выполнить().Выбрать(); 
	Исключение
		Выборка = Неопределено;
	КонецПопытки;
	
	мНовыйЭлемент = Неопределено;
	
	Если Выборка = Неопределено Или Выборка.Количество() = 0 Тогда 
		// ОбработкиОбслуживания не установлена - устанавливаем
		Данные = Новый ДвоичныеДанные(сПутьОбработки);
		Сжатие = Новый СжатиеДанных();
		
		мНовыйЭлемент = Справочники.ОбработкиОбслуживанияТО.СоздатьЭлемент();
		мНовыйЭлемент.Наименование = "Клеверенс Софт: Терминалы сбора данных "+ВРег(сВидДрайвера)+" версия";
		мНовыйЭлемент.Вид = Перечисления.ВидыТорговогоОборудования.ТерминалСбораДанных;
		мНовыйЭлемент.Описание = мОписание.Описание;
		
		мНовыйЭлемент.ИмяФайла 		= сИмяФайла;
		мНовыйЭлемент.Обработка 	= Новый ХранилищеЗначения(Данные, Сжатие);
		мНовыйЭлемент.Версия 		= мОписание.ВерсияОбработки;
		мНовыйЭлемент.Идентификатор = мОписание.Идентификатор;
		Попытка
			мНовыйЭлемент.ВерсияAPI 	= мОписание.ВерсияОбработки;
		Исключение
		КонецПопытки;
		
		мНовыйЭлемент.Модели.Очистить();
		Для Каждого Модель Из мОписание.СписокМоделей Цикл
			мНоваяМодель = мНовыйЭлемент.Модели.Добавить();
			мНоваяМодель.Модель = Модель;
		КонецЦикла;

		мНовыйЭлемент.Записать();
	Иначе
		// Уже есть подобная обработка
		Выборка.Следующий();
		мНовыйЭлемент = Выборка.Ссылка.ПолучитьОбъект();
		
		// Сохраняем старую обработку
		Данные = мНовыйЭлемент.Обработка.Получить();
		Данные.Записать(сПутьTMPОбработки);
		
		// Сравниваем старую и новую обработку
		мСравнениеФайлов = Новый СравнениеФайлов;
		мСравнениеФайлов.ПервыйФайл = сПутьОбработки;
		мСравнениеФайлов.ВторойФайл = сПутьTMPОбработки;
		мСравнениеФайлов.СпособСравнения = СпособСравненияФайлов.Двоичное;
		
		Если Не мСравнениеФайлов.Сравнить() Тогда
			// Если обработки разные - переписываем данные под новую обработку
			Данные = Новый ДвоичныеДанные(сПутьОбработки);
			Сжатие = Новый СжатиеДанных();
		
			мНовыйЭлемент.Наименование = "Клеверенс Софт: Терминалы сбора данных "+ВРег(сВидДрайвера)+" версия";
			мНовыйЭлемент.Вид = Перечисления.ВидыТорговогоОборудования.ТерминалСбораДанных;
			мНовыйЭлемент.Описание = мОписание.Описание;
			
			мНовыйЭлемент.ИмяФайла 		= сИмяФайла;
			мНовыйЭлемент.Обработка 	= Новый ХранилищеЗначения(Данные, Сжатие);
			мНовыйЭлемент.Версия 		= мОписание.ВерсияОбработки;
			мНовыйЭлемент.Идентификатор = мОписание.Идентификатор;
			мНовыйЭлемент.ВерсияAPI 	= мОписание.ВерсияОбработки;
			
			мНовыйЭлемент.Модели.Очистить();
			Для Каждого Модель Из мОписание.СписокМоделей Цикл
				мНоваяМодель = мНовыйЭлемент.Модели.Добавить();
				мНоваяМодель.Модель = Модель;
			КонецЦикла;

			мНовыйЭлемент.Записать();
		Иначе
			// Обработки идентичны, темп файл не нужен
			Попытка
				УдалитьФайлы(сПутьTMPОбработки); 
			Исключение
			КонецПопытки;
		КонецЕсли;
		
	КонецЕсли;
	
	// Удаление настроек от ранее удаленного торгового оборудования
	мЗапрос.Текст = "ВЫБРАТЬ
	                |	ТорговоеОборудование.Ссылка,
	                |	ТорговоеОборудование1.Идентификатор
	                |ИЗ
	                |	Справочник.ТорговоеОборудование КАК ТорговоеОборудование
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТорговоеОборудование КАК ТорговоеОборудование1
	                |		ПО ТорговоеОборудование.Ссылка = ТорговоеОборудование1.Модель
	                |ГДЕ
	                |	ТорговоеОборудование1.Идентификатор ЕСТЬ NULL ";
					
	Попытка
		Выборка = мЗапрос.Выполнить().Выбрать(); 
	Исключение
		Выборка = Неопределено;	
	КонецПопытки;	
	
	Если Выборка <> Неопределено И Выборка.Количество() > 0 Тогда
		Пока Выборка.Следующий() Цикл
			мТОобъект = Выборка[0].ПолучитьОбъект();
			мТОобъект.Удалить();	
		КонецЦикла;
	КонецЕсли;
	
	// Проверка уже установленного ТорговогоОборудования с такой ОбработкиОбслуживанияТО
	// Если нет, добавляем                                   
	мТоргОборуд = Справочники.ТорговоеОборудование.НайтиПоРеквизиту("ОбработкаОбслуживания", мНовыйЭлемент.Ссылка); 
	
	Если мТоргОборуд = Справочники.ТорговоеОборудование.ПустаяСсылка() Тогда
		
		// ТорговоеОборудование не установлено - устанавливаем            
		мТоргОборуд = Справочники.ТорговоеОборудование.СоздатьЭлемент();
		мТоргОборуд.Наименование = "Клеверенс "+ВРег(сВидДрайвера)+" драйвер";
		мТоргОборуд.ОбработкаОбслуживания = мНовыйЭлемент.Ссылка;
		мТоргОборуд.Модель = сМодельТОпоУмолчанию;
		мТоргОборуд.Записать();
		
		мТоргОборуд = мТоргОборуд.Ссылка;
		
	КонецЕсли;
	             	
	// Проверка записи в регистр
	// Если нет, добавляем
	мЗапрос.Текст = "ВЫБРАТЬ
	                |	ТорговоеОборудование.Идентификатор
	                |ИЗ
	                |	РегистрСведений.ТорговоеОборудование КАК ТорговоеОборудование
	                |ГДЕ
	                |	ТорговоеОборудование.Модель = &Модель
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	Подключено УБЫВ";
	
	мЗапрос.УстановитьПараметр("Модель", мТоргОборуд);	
	
	Попытка
		Выборка = мЗапрос.Выполнить().Выбрать(); 
	Исключение
		Выборка = Неопределено;
		// Сообщить(ОписаниеОшибки());	
	КонецПопытки;
	
	
	нИдентификатор = мТоргОборуд.ОбработкаОбслуживания.Идентификатор;
	
	Если Выборка <> Неопределено И Выборка.Количество() > 0 Тогда	
		Выборка.Следующий();
		
		Если Выборка.Идентификатор <> Неопределено Тогда
			нИдентификатор = Выборка.Идентификатор;
		КонецЕсли;	
	КонецЕсли;
	
	Набор = РегистрыСведений.ТорговоеОборудование.СоздатьНаборЗаписей();
	Набор.Отбор.Идентификатор.Установить(нИдентификатор);
	Набор.Прочитать();                    
	
	Если Набор.Количество() = 0 Тогда
		Набор.Добавить();
		Набор[0].Идентификатор = нИдентификатор;
	КонецЕсли;
	
	// 24.12.2013 +
	Набор[0].Компьютер 	= ИмяКомпьютера();
	// 24.12.2013 -
	
	Если Набор[0].Модель = Справочники.ТорговоеОборудование.ПустаяСсылка() Или Набор[0].Компьютер = "" Тогда
		Набор[0].Идентификатор = нИдентификатор;
		Набор[0].Модель 	= мТоргОборуд;
		Набор[0].Компьютер 	= ИмяКомпьютера();
		Попытка
			Набор[0].Подключено	= Истина;
			Набор[0].Вид 		= Перечисления.ВидыТорговогоОборудования.ТерминалСбораДанных;
		Исключение
		КонецПопытки;
		Набор[0].Параметры 	= ЗначениеВСтрокуВнутр(Новый Структура());
		Набор.Записать();
	Иначе
		Попытка
			Если Не Набор[0].Подключено Тогда
				Набор[0].Подключено	= Истина;
			КонецЕсли;
		Исключение
		КонецПопытки;
		Набор.Записать();
	КонецЕсли;
	
	// 29.01.2014 +
	// До УТ 10.3.6 нужно прописывать пользователей которые будут работать с ТО
	нВерсияКонфы	= ВерсияСтрокаВЧисло(Метаданные.Версия);
	сНазваниеКонфы 	= Метаданные.Имя;
	
	Если Найти(сНазваниеКонфы, "УправлениеТорговлей") > 0 И нВерсияКонфы < 10030600 Тогда
		
		Попытка
			мГруппа = Неопределено;
			Выполнить("мГруппа = Справочники.ГруппыПользователейТорговогоОборудования.ТерминалСбораДанных.ПолучитьОбъект();");
			
			Если мГруппа.ПользователиГруппы.Найти(ПараметрыСеанса.ТекущийПользователь, "Пользователь") = Неопределено Тогда			
				мСтрока = мГруппа.ПользователиГруппы.Добавить();
				мСтрока.Пользователь = ПараметрыСеанса.ТекущийПользователь;
				мГруппа.Записать();
			КонецЕсли;
		Исключение
		КонецПопытки;
		
	КонецЕсли;
	// 29.01.2014 -
	
	// Открываем окно настроек
	//мОбработка = Неопределено;
	//Ошибка = "";
	//Выполнить("Ошибка = РаботаСТорговымОборудованием.ПолучитьОбработкуОбслуживанияТО(мТоргОборуд, мОбработка);");
	//Если НЕ ЗначениеЗаполнено(Ошибка) Тогда
		Набор = РегистрыСведений.ТорговоеОборудование.СоздатьНаборЗаписей();
		Набор.Отбор.Идентификатор.Установить(нИдентификатор);
		Набор.Прочитать();
		
		Параметры = ?(ПустаяСтрока(Набор[0].Параметры), Новый Структура(),
		ЗначениеИзСтрокиВнутр(Набор[0].Параметры));
		
		СтарыеПараметры = Параметры;	
		
		//мОбработка.НастроитьОборудование(мТоргОборуд.Модель, Параметры);
		НастроитьОборудование(мТоргОборуд.Модель, Параметры);
		
		ТребуетясПерезапуск = СтарыеПараметры <> Параметры;
		
		Набор[0].Параметры = ЗначениеВСтрокуВнутр(Параметры);
		Набор.Записать();
	//Иначе
	//	сТекст = "";
	//	Выполнить("сТекст = ПолучитьСерверТО().ПолучитьТекстОшибкиТО(Ошибка);");
	//	Предупреждение("Ошибка при попытке открыть форму настройки параметров модели:
	//				   |" + сТекст);
	//КонецЕсли;

КонецПроцедуры

Функция ПолучитьПутьКФайлуОбработкиВАрхиве()
	
	сИмяTMPФайла      = мНазваниеКонфигурации+" "+сНазваниеОбработки + " " + Формат(ТекущаяДата(), "ДФ=""ггггММддЧЧммсс""") + ".epf";
	сПутьTMPОбработки = сКаталогХраненияКопийКлеверенс + "\" + сИмяTMPФайла;
	
	Возврат  сПутьTMPОбработки;
	
КонецФункции

Функция ПолучитьПутьКФайлуОбработкиДрайвера()
	
	сИмяФайла         = сНазваниеОбработки + ".epf";
	сПутьОбработки    = сПуть + сОтносительныйПуть + "\" + сИмяФайла;
	
	Возврат  сПутьОбработки;
	
КонецФункции


мНазваниеКонфигурации = Нрег(Метаданные.Имя);
