// Обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	Перем ЗаполнитьЦены;

	Перем НастройкиПостроителя;

	Если Не глЗначениеПеременной("ИспользоватьХарактеристикиНоменклатуры") Тогда
		Колонка                   = ЭлементыФормы.Товары.Колонки.ХарактеристикаНоменклатуры;
		Колонка.Видимость         = Ложь;
		Колонка.ИзменятьВидимость = Ложь;
	КонецЕсли;

	СтруктураНастроек = ВосстановитьЗначение("Обработка.ПечатьЦенников.Настройки");
	Если ТипЗнч(СтруктураНастроек) = Тип("Структура") Тогда
		СтруктураНастроек.Свойство("Организация", Организация);
		СтруктураНастроек.Свойство("ТипЦен", ТипЦен);
		СтруктураНастроек.Свойство("Валюта", Валюта);
		СтруктураНастроек.Свойство("ТолькоИмеющиесяВНаличии", ТолькоИмеющиесяВНаличии);
		СтруктураНастроек.Свойство("НастройкиПостроителя", НастройкиПостроителя);
		СтруктураНастроек.Свойство("КолСтрок", КолСтрок);
		СтруктураНастроек.Свойство("КолСтолбцов", КолСтолбцов);
	КонецЕсли;

	ЗаполнитьПостроительОтчета();

	Если НастройкиПостроителя <> Неопределено Тогда
		ПостроительОтчета.УстановитьНастройки(НастройкиПостроителя);
	КонецЕсли;

	Если ТипЗнч(Параметр) = Тип("Структура") Тогда
		Параметр.Свойство("ЗаполнитьЦены", ЗаполнитьЦены);
		Если ЗаполнитьЦены = Истина Тогда
			Если ПроверитьПараметрыЗаполненияЦен(Параметр.Свойство("ПечетьБезПроверкиЗаполненияПараметров")) Тогда
				ПерезаполнитьЦены();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	ДатаПечати=РабочаяДата;
КонецПроцедуры // ПриОткрытии()

// Обработчик события "ПриИзменении" флажка "ТолькоИмеющиесяВНаличии".
//
Процедура ТолькоИмеющиесяВНаличииПриИзменении(Элемент)

	ЗаполнитьПостроительОтчета();

КонецПроцедуры // ТолькоИмеющиесяВНаличииПриИзменении()

// Обработчик события "Нажатие" кнопки "ЗаполнитьПоУстановленнымОтборам" в подменю "Заполнить".
//
Процедура КоманднаяПанельТоварыЗаполнитьПоУстановленнымОтборам(Кнопка)

	Если Не ПроверитьПараметрыЗаполненияЦен() Тогда
		Возврат;
	КонецЕсли;

	Если Товары.Количество() > 0 Тогда
		Ответ = Вопрос("Перед заполнением табличная часть будет очищена." + Символы.ПС + "Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Товары.Загрузить(ПостроительОтчета.Результат.Выгрузить());

	ПерезаполнитьЦены();

КонецПроцедуры // КоманднаяПанельТоварыЗаполнитьПоУстановленнымОтборам()

// Обработчик события "ПриНажатии" кнопки "ВыделитьВсе"
// командной панели "КомандыТоваров"
//
// Параметры
//  Кнопка - <КнопкаКоманднойПанели>
//         - кнопка "ВыделитьВсе"
//
Процедура КоманднаяПанельТоварыВыделитьВсе(Кнопка)

	Для Каждого СтрокаТЧ Из Товары Цикл
		СтрокаТЧ.Печать = Истина;
	КонецЦикла;

КонецПроцедуры // КоманднаяПанельТоварыВыделитьВсе()

// Обработчик события "ПриНажатии" кнопки "ОчиститьВыделение"
// командной панели "КомандыТоваров"
//
// Параметры
//  Кнопка - <КнопкаКоманднойПанели>
//         - кнопка "ОчиститьВыделение"
//
Процедура КоманднаяПанельТоварыОчиститьВыделение(Кнопка)

	Для Каждого СтрокаТЧ Из Товары Цикл
		СтрокаТЧ.Печать = Ложь;
	КонецЦикла;

КонецПроцедуры // КоманднаяПанельТоварыОчиститьВыделение()

// Обработчик события "ПриНажатии" кнопки "ИнвертироватьВыделение"
// командной панели "КомандыТоваров"
//
// Параметры
//  Кнопка - <КнопкаКоманднойПанели>
//         - кнопка "ОчиститьВыделение"
//
Процедура КоманднаяПанельТоварыИнвертироватьВыделение(Кнопка)

	Для Каждого СтрокаТЧ Из Товары Цикл
		СтрокаТЧ.Печать = Не СтрокаТЧ.Печать;
	КонецЦикла;

КонецПроцедуры // КоманднаяПанельТоварыИнвертироватьВыделение()

// Обработчик события ПриЗакрытии формы.
//
Процедура ПриЗакрытии()

	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("Организация", Организация);
	СтруктураНастроек.Вставить("ТипЦен", ТипЦен);
	СтруктураНастроек.Вставить("Валюта", Валюта);
	СтруктураНастроек.Вставить("ТолькоИмеющиесяВНаличии", ТолькоИмеющиесяВНаличии);
	СтруктураНастроек.Вставить("НастройкиПостроителя", ПостроительОтчета.ПолучитьНастройки(Истина, Ложь, Ложь, Ложь, Ложь));
	СтруктураНастроек.Вставить("КолСтрок", КолСтрок);
	СтруктураНастроек.Вставить("КолСтолбцов", КолСтолбцов);

	СохранитьЗначение("Обработка.ПечатьЦенников.Настройки", СтруктураНастроек);

КонецПроцедуры // ПриЗакрытии()

// Обработчик события "Нажатие" кнопки "ДействиеПечать".
//
Процедура ОсновныеДействияФормыДействиеПечать(Кнопка)
	Если ВариантПечати=2 Тогда
		УниверсальныеМеханизмы.НапечататьДокумент(ПечатьПрайса(), , , "Ценники");
	Иначе
		УниверсальныеМеханизмы.НапечататьДокумент(ПечатьЦенника(), , , "Ценники");
	КонецЕсли;

КонецПроцедуры // ОсновныеДействияФормыДействиеПечать()

// Обработчик события "Нажатие" кнопки "ПерезаполнитьЦены" в подменю "Заполнить".
//
Процедура КоманднаяПанельТоварыПерезаполнитьЦены(Кнопка)

	Если Не ПроверитьПараметрыЗаполненияЦен() Тогда
		Возврат;
	КонецЕсли;

	ПерезаполнитьЦены();

КонецПроцедуры // КоманднаяПанельТоварыПерезаполнитьЦены()

// Обработчик события "Нажатие" кнопки "Подбор".
//
Процедура КоманднаяПанельТоварыДействиеПодбор(Кнопка)

	ДействиеПодбор();

КонецПроцедуры // КоманднаяПанельТоварыДействиеПодбор()

// Процедура вызывает сервисный механизм для подбора номеклатуры в табличную часть.
//
Процедура ДействиеПодбор()

	СписокВидовПодбора = Новый СписокЗначений;
	СписокВидовПодбора.Добавить(, "По справочнику");

	СтруктураПараметровПодбора = Новый Структура;
	СтруктураПараметровПодбора.Вставить("Команда"           , "");
	СтруктураПараметровПодбора.Вставить("СписокВидовПодбора", СписокВидовПодбора);
	СтруктураПараметровПодбора.Вставить("Заголовок"         , "Подбор товаров для печати ценников");
	СтруктураПараметровПодбора.Вставить("ЕстьКоличество"    , Истина);
	СтруктураПараметровПодбора.Вставить("ЕстьЦена"          , Ложь);
	СтруктураПараметровПодбора.Вставить("ЕстьСерия"         , Ложь);
	СтруктураПараметровПодбора.Вставить("Склад"             , Неопределено);

	// Открываем форму подбора.
	ФормаПодбора = Обработки.ПодборНоменклатуры.ПолучитьФорму("ОсновнаяФорма", ЭтаФорма, ЭтаФорма);
	ФормаПодбора.ОбработкаОбъект.СтруктураИсходныхПараметров = СтруктураПараметровПодбора;
	ФормаПодбора.Открыть();

КонецПроцедуры // ДействиеПодбор()

// Обработчик события "ОбработкаВыбора" формы.
//
Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)

	Если ТипЗнч(ЗначениеВыбора) = Тип("Структура") Тогда
		ОбработкаПодбора(ЗначениеВыбора);
	КонецЕсли;

КонецПроцедуры // ОбработкаВыбора()

// Производит заполнение переданными из формы подбора данными.
//
// Параметры:
//  ЗначениеВыбора - структура, содержащая параметры подбора.
//
Процедура ОбработкаПодбора(ЗначениеВыбора)

	Перем Номенклатура, ЕдиницаИзмерения, Количество, ХарактеристикаНоменклатуры;

	// Получим параметры подбора из структуры подбора.
	ЗначениеВыбора.Свойство("Номенклатура"    , Номенклатура);
	ЗначениеВыбора.Свойство("ЕдиницаИзмерения", ЕдиницаИзмерения);
	ЗначениеВыбора.Свойство("Количество"      , Количество);
	ЗначениеВыбора.Свойство("Характеристика"  , ХарактеристикаНоменклатуры);

	// Ищем выбранную позицию в таблице подобранной номенклатуры.
	//  Если найдем - увеличим количество; не найдем - добавим новую строку.
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Номенклатура"              , Номенклатура);
	СтруктураОтбора.Вставить("ЕдиницаИзмерения"          , ЕдиницаИзмерения);
	СтруктураОтбора.Вставить("ХарактеристикаНоменклатуры", ХарактеристикаНоменклатуры);

	СтрокаТабличнойЧасти = ОбработкаТабличныхЧастей.НайтиСтрокуТабЧасти(Товары, СтруктураОтбора);
	Если СтрокаТабличнойЧасти <> Неопределено Тогда

		// Нашли, увеличиваем количество в первой найденной строке.
		СтрокаТабличнойЧасти.Количество = СтрокаТабличнойЧасти.Количество + Количество;
	Иначе // не нашли - добавляем новую строку
		СтрокаТабличнойЧасти = Товары.Добавить();
		СтрокаТабличнойЧасти.Номенклатура               = Номенклатура;
		СтрокаТабличнойЧасти.ЕдиницаИзмерения           = ЕдиницаИзмерения;
		СтрокаТабличнойЧасти.ХарактеристикаНоменклатуры = ХарактеристикаНоменклатуры;
		СтрокаТабличнойЧасти.Количество                 = Количество;
		СтрокаТабличнойЧасти.Печать                     = Истина;
	КонецЕсли;

	ЭлементыФормы.Товары.ТекущаяСтрока = СтрокаТабличнойЧасти;
	ЭлементыФормы.Товары.ТекущаяКолонка = ЭлементыФормы.Товары.Колонки.Количество;

КонецПроцедуры // ОбработкаПодбора()

Процедура СтандартныйПриИзменении(Элемент)

	Если ВариантПечати=2 Тогда
		КолСтрок = 37;
		КолСтолбцов = 2;
	Иначе
		КолСтрок=?(ЦенникСигареты,3*2,?(ВариантПечати=3,4,3));
		КолСтолбцов=?(ВариантПечати=3,4,5);
	КонецЕсли;

КонецПроцедуры
