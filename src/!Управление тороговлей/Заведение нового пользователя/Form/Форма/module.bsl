Перем МассивСложностей;
Перем МассивДлинПаролей;
Перем МассивЦветТекста;

Процедура ОбновитьПользователя()
	Если Не ЗначениеЗаполнено(Пользователь) Тогда
		Возврат;
	КонецЕсли;
	
	ОбразцовыйПользователь								= ПользователиИнформационнойБазы.НайтиПоИмени(СокрЛП(Образец.Код));
	ПользовательИБ										= ПользователиИнформационнойБазы.НайтиПоИмени(СокрЛП(Пользователь.Код));
	Если ПользовательИБ=Неопределено Тогда
		Сообщить("Не найден пользователь в ИБ!!");
		Возврат;
	КонецЕсли;
	Для Каждого Роль Из ОбразцовыйПользователь.Роли Цикл
		ПользовательИБ.Роли.Добавить(Роль);
	КонецЦикла;
	ПользовательИБ.Язык									= ОбразцовыйПользователь.Язык;
	
	ПользовательИБ.Записать();
	
	НовыйПользователь=Пользователь.ПолучитьОбъект();
	//Копируем настройки
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиПользователей.Пользователь,
		|	НастройкиПользователей.Настройка,
		|	НастройкиПользователей.Значение
		|ИЗ
		|	РегистрСведений.НастройкиПользователей КАК НастройкиПользователей
		|ГДЕ
		|	НастройкиПользователей.Пользователь = &Пользователь";

	Запрос.УстановитьПараметр("Пользователь", Образец.Ссылка);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Настройка=РегистрыСведений.НастройкиПользователей.СоздатьМенеджерЗаписи();
		Настройка.Пользователь		= НовыйПользователь.Ссылка;
		Настройка.Настройка			= ВыборкаДетальныеЗаписи.Настройка;
		Настройка.Значение			= ВыборкаДетальныеЗаписи.Значение;
		Настройка.Записать();
	КонецЦикла;
	Настройка=РегистрыСведений.НастройкиПользователей.СоздатьМенеджерЗаписи();
	Настройка.Пользователь		= НовыйПользователь.Ссылка;
	Настройка.Настройка			= ПланыВидовХарактеристик.НастройкиПользователей.ОсновнойОтветственный;
	Настройка.Значение			= НовыйПользователь.Ссылка;
	Настройка.Записать();
	//копируем доп. настройки
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗначенияДополнительныхПравПользователя.Пользователь,
		|	ЗначенияДополнительныхПравПользователя.Право,
		|	ЗначенияДополнительныхПравПользователя.Значение
		|ИЗ
		|	РегистрСведений.ЗначенияДополнительныхПравПользователя КАК ЗначенияДополнительныхПравПользователя
		|ГДЕ
		|	ЗначенияДополнительныхПравПользователя.Пользователь = &Пользователь";

	Запрос.УстановитьПараметр("Пользователь", Образец.Ссылка);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДопНастройка=РегистрыСведений.ЗначенияДополнительныхПравПользователя.СоздатьМенеджерЗаписи();
		ДопНастройка.Пользователь	= НовыйПользователь.Ссылка;
		ДопНастройка.Право			= ВыборкаДетальныеЗаписи.Право;
		ДопНастройка.Значение		= ВыборкаДетальныеЗаписи.Значение;
		ДопНастройка.Записать();
	КонецЦикла;
	//группы пользователей
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ГруппыПользователей.Ссылка
		|ИЗ
		|	Справочник.ГруппыПользователей.ПользователиГруппы КАК ГруппыПользователейПользователиГруппы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыПользователей КАК ГруппыПользователей
		|		ПО ГруппыПользователейПользователиГруппы.Ссылка = ГруппыПользователей.Ссылка
		|ГДЕ
		|	ГруппыПользователейПользователиГруппы.Пользователь.Ссылка = &Пользователь";

	Запрос.УстановитьПараметр("Пользователь", Образец.Ссылка);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Об=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		СтрокаТЧ=Об.ПользователиГруппы.Добавить();
		СтрокаТЧ.Пользователь=НовыйПользователь.Ссылка;
		Об.Записать();
	КонецЦикла;      
	Сообщить("Права пользователя обновлены!");
КонецПроцедуры

Процедура СоздатьПользователя()
	Если Не Проверка() Тогда
		Возврат;
	КонецЕсли;
	
	ОбразцовыйПользователь							= ПользователиИнформационнойБазы.НайтиПоИмени(СокрЛП(Образец.Код));
	ПользовательИБ									= ПользователиИнформационнойБазы.СоздатьПользователя();
	ПользовательИБ.Имя								= КрНаименование;
	ПользовательИБ.ПолноеИмя						= ?(ЗначениеЗаполнено(ПолноеНаименование),ПолноеНаименование,КрНаименование);
	ПользовательИБ.Пароль							= Пароль;
	ПользовательИБ.АутентификацияОС					= ОбразцовыйПользователь.АутентификацияОС;
	ПользовательИБ.АутентификацияСтандартная		= ОбразцовыйПользователь.АутентификацияСтандартная;
	ПользовательИБ.ЗапрещеноИзменятьПароль			= ОбразцовыйПользователь.ЗапрещеноИзменятьПароль;
	ПользовательИБ.ОсновнойИнтерфейс				= ОбразцовыйПользователь.ОсновнойИнтерфейс;
	ПользовательИБ.ПоказыватьВСпискеВыбора			= ОбразцовыйПользователь.ПоказыватьВСпискеВыбора;
	ПользовательИБ.РежимЗапуска						= ОбразцовыйПользователь.РежимЗапуска;
	Для Каждого Роль Из ОбразцовыйПользователь.Роли Цикл
		ПользовательИБ.Роли.Добавить(Роль);
	КонецЦикла;
	ПользовательИБ.Язык								= ОбразцовыйПользователь.Язык;
	
	ПользовательИБ.Записать();
	
	НовыйПользователь=Справочники.Пользователи.СоздатьЭлемент();
	НовыйПользователь.Код=КрНаименование;
	НовыйПользователь.Наименование=?(ЗначениеЗаполнено(ПолноеНаименование),ПолноеНаименование,КрНаименование);
	НовыйПользователь.ФизЛицо=Справочники.ФизическиеЛица.НайтиПоНаименованию(?(ЗначениеЗаполнено(ПолноеНаименование),ПолноеНаименование,КрНаименование)).Ссылка;
	НовыйПользователь.Записать();
	//Копируем настройки
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиПользователей.Пользователь,
		|	НастройкиПользователей.Настройка,
		|	НастройкиПользователей.Значение
		|ИЗ
		|	РегистрСведений.НастройкиПользователей КАК НастройкиПользователей
		|ГДЕ
		|	НастройкиПользователей.Пользователь = &Пользователь";

	Запрос.УстановитьПараметр("Пользователь", Образец.Ссылка);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Настройка=РегистрыСведений.НастройкиПользователей.СоздатьМенеджерЗаписи();
		Настройка.Пользователь		= НовыйПользователь.Ссылка;
		Настройка.Настройка			= ВыборкаДетальныеЗаписи.Настройка;
		Настройка.Значение			= ВыборкаДетальныеЗаписи.Значение;
		Настройка.Записать();
	КонецЦикла;
	Настройка=РегистрыСведений.НастройкиПользователей.СоздатьМенеджерЗаписи();
	Настройка.Пользователь		= НовыйПользователь.Ссылка;
	Настройка.Настройка			= ПланыВидовХарактеристик.НастройкиПользователей.ОсновнойОтветственный;
	Настройка.Значение			= НовыйПользователь.Ссылка;
	Настройка.Записать();
	//копируем доп. настройки
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗначенияДополнительныхПравПользователя.Пользователь,
		|	ЗначенияДополнительныхПравПользователя.Право,
		|	ЗначенияДополнительныхПравПользователя.Значение
		|ИЗ
		|	РегистрСведений.ЗначенияДополнительныхПравПользователя КАК ЗначенияДополнительныхПравПользователя
		|ГДЕ
		|	ЗначенияДополнительныхПравПользователя.Пользователь = &Пользователь";

	Запрос.УстановитьПараметр("Пользователь", Образец.Ссылка);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДопНастройка=РегистрыСведений.ЗначенияДополнительныхПравПользователя.СоздатьМенеджерЗаписи();
		ДопНастройка.Пользователь	= НовыйПользователь.Ссылка;
		ДопНастройка.Право			= ВыборкаДетальныеЗаписи.Право;
		ДопНастройка.Значение		= ВыборкаДетальныеЗаписи.Значение;
		ДопНастройка.Записать();
	КонецЦикла;
	//группы пользователей
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ГруппыПользователей.Ссылка
		|ИЗ
		|	Справочник.ГруппыПользователей.ПользователиГруппы КАК ГруппыПользователейПользователиГруппы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыПользователей КАК ГруппыПользователей
		|		ПО ГруппыПользователейПользователиГруппы.Ссылка = ГруппыПользователей.Ссылка
		|ГДЕ
		|	ГруппыПользователейПользователиГруппы.Пользователь.Ссылка = &Пользователь";

	Запрос.УстановитьПараметр("Пользователь", Образец.Ссылка);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Об=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		СтрокаТЧ=Об.ПользователиГруппы.Добавить();
		СтрокаТЧ.Пользователь=НовыйПользователь.Ссылка;
		Об.Записать();
	КонецЦикла;      
	Сообщить("Новый пользователь создан!");
КонецПроцедуры

Процедура КрНаименованиеПриИзменении(Элемент)
	Если Не ЗначениеЗаполнено(ПолноеНаименование) Тогда
		ПолноеНаименование=КрНаименование;
	КонецЕсли;
КонецПроцедуры

Функция Проверка()
	Флаг=Истина;
	Если Не ЗначениеЗаполнено(КрНаименование) Тогда
		Сообщить("Не заполнено Наименование пользователя",СтатусСообщения.Важное);
		Флаг=Ложь;
	КонецЕсли;
	Если ЗначениеЗаполнено(ПользователиИнформационнойБазы.НайтиПоИмени(СокрЛП(КрНаименование))) Тогда
		Сообщить("Пользователь "+КрНаименование+" уже есть в системе",СтатусСообщения.Важное);
	КонецЕсли;
	Если Пароль<>ПарольПодтверждение Тогда
		Сообщить("Не совпадает Пароль и Подтвержение",СтатусСообщения.Важное);
		Флаг=Ложь;
	ИначеЕсли Не ЗначениеЗаполнено(Пароль) Тогда
		Ответ=Вопрос("Создать пользователя с пустым паролем?",РежимДиалогаВопрос.ДаНет,30,КодВозвратаДиалога.Нет,"Пустой пароль");
		Если Ответ<>КодВозвратаДиалога.Да Тогда
			Флаг=Ложь;
		КонецЕсли;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Образец) Тогда
		Сообщить("Не задан Пользователь для копирования",СтатусСообщения.Важное);
		Флаг=Ложь;
	КонецЕсли;
	Возврат Флаг;
КонецФункции

Процедура СоздатьНажатие(Элемент)
	СоздатьПользователя();
КонецПроцедуры

Процедура ОбновитьНажатие(Элемент)
	ОбновитьПользователя();
КонецПроцедуры

Процедура ПриОткрытии()
	//Устанавливаем уровень пароля
	Рез1=ВосстановитьЗначение("ЗНП_СложностьПароля");
	Рез2=ВосстановитьЗначение("ЗНП_ДлинаПароля");
	Если Рез1=Неопределено ИЛИ Рез2=Неопределено Тогда
		СложностьПароля=1;
		ДлинаПароля=6;
		СложностьПароляПриИзменении(Неопределено);
	Иначе
		СложностьПароля	= Рез1;
		ДлинаПароля		= Рез2;
	КонецЕсли;
КонецПроцедуры

Процедура ПриЗакрытии()
	СохранитьЗначение("ЗНП_СложностьПароля",СложностьПароля);
	СохранитьЗначение("ЗНП_ДлинаПароля",ДлинаПароля);
КонецПроцедуры


Процедура СложностьПароляПриИзменении(Элемент)
	ЭлементыФормы.ДлинаПароля.МинимальноеЗначение	= МассивДлинПаролей[СложностьПароля].Min;
	ЭлементыФормы.ДлинаПароля.МаксимальноеЗначение	= МассивДлинПаролей[СложностьПароля].Max;
	ДлинаПароля=(ЭлементыФормы.ДлинаПароля.МинимальноеЗначение+ЭлементыФормы.ДлинаПароля.МинимальноеЗначение)/2;
	Сложность=МассивСложностей[СложностьПароля];
	ЭлементыФормы.НадписьУровеньСложности.ЦветТекста= МассивЦветТекста[СложностьПароля];
	ЭлементыФормы.НадписьДлинаПароля.Заголовок		= "Длина пароля("+Строка(ДлинаПароля)+")";
КонецПроцедуры

Процедура ДлинаПароляПриИзменении(Элемент)
	ЭлементыФормы.НадписьДлинаПароля.Заголовок		= "Длина пароля("+Строка(ДлинаПароля)+")";
КонецПроцедуры

Процедура СгенерироватьПарольНажатие(Элемент)
	НовыйПароль="";
	Если ДлинаПароля>0 Тогда
		СписокПаролей=Новый СписокЗначений;
		Для Сч=1 По 10 Цикл
			ПарольТемп=СгенерироватьПароль(ДлинаПароля,СложностьПароля);
			СписокПаролей.Добавить(ПарольТемп);
		КонецЦикла;
		Рез=СписокПаролей.ВыбратьЭлемент("Выберите пароль");
		Если Рез<>Неопределено Тогда
			Пароль				=Рез.Значение;
			ПарольПодтверждение	=Рез.Значение
		КонецЕсли;
	Иначе
		Пароль				= "";
		ПарольПодтверждение	= "";
	КонецЕсли;
КонецПроцедуры

//Для подписи
МассивСложностей=Новый Массив;
МассивСложностей.Добавить("Без пароля");
МассивСложностей.Добавить("Простой");
МассивСложностей.Добавить("Средний");
МассивСложностей.Добавить("Сложный");

//Для цвета
МассивЦветТекста=Новый Массив;
МассивЦветТекста.Добавить(WebЦвета.Черный);
МассивЦветТекста.Добавить(WebЦвета.Черный);
МассивЦветТекста.Добавить(WebЦвета.Синий);
МассивЦветТекста.Добавить(WebЦвета.Красный);

//Для длины паролей
МассивДлинПаролей=Новый Массив;
МассивДлинПаролей.Добавить(Новый Структура("Min,Max",0,0));
МассивДлинПаролей.Добавить(Новый Структура("Min,Max",0,8));
МассивДлинПаролей.Добавить(Новый Структура("Min,Max",6,12));
МассивДлинПаролей.Добавить(Новый Структура("Min,Max",8,20));

