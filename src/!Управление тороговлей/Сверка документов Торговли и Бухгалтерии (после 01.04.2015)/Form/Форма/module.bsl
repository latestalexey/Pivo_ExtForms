Перем СоотвСтавокНДС;

Процедура ПолеИмениФайлаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	РежимДиалога = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалога);
	//ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.Заголовок = "Выберите Папку обмена";
	ДиалогВыбораФайла.ПолноеИмяФайла = ПолеИмениФайла;

	Если ДиалогВыбораФайла.Выбрать() Тогда
		ПолеИмениФайла = ДиалогВыбораФайла.Каталог;
	КонецЕсли;
    ПутьКФайламТаблиц = СтрЗаменить(ПолеИмениФайла+"\","\\","\");
	
	
	//Получим настройки сверки.
	//1. Откроем файл конфигурации сверки
	ФайлНастроек=Новый ЧтениеТекста;
	ФайлНастроек.Открыть(ПутьКФайламТаблиц+"Config.1cc");
	НачПериода=ФайлНастроек.ПрочитатьСтроку();
	НачПериода=НачалоДня(НачПериода);
	КонПериода=ФайлНастроек.ПрочитатьСтроку();
	КонПериода=КонецДня(КонПериода);
	Инн=ФайлНастроек.ПрочитатьСтроку();
	Организация=Справочники.Организации.НайтиПоРеквизиту("ИНН",ИНН);
	Если ЗначениеЗаполнено(Организация) Тогда
		ФайлНастроек.ПрочитатьСтроку();
	Иначе
		Организация=Справочники.Организации.НайтиПоНаименованию(ФайлНастроек.ПрочитатьСтроку());
	КонецЕсли;
	Флаг=ФайлНастроек.ПрочитатьСтроку();
	ВключатьНепроведенные=(Флаг="Да"); 
	СформироватьИнфоОСверке();
	//2. Проверим какие файлы есть
	ФайлыВыгрузок=НайтиФайлы(ПутьКФайламТаблиц,"*.tz");
	Для Каждого ФайлВыгрузки Из ФайлыВыгрузок Цикл
		ЭтаФорма[ФайлВыгрузки.ИмяБезРасширения+"УТ"]=Истина;
	КонецЦикла;
КонецПроцедуры

Процедура ПолеИмениФайлаПриИзменении(Элемент)
	
КонецПроцедуры

Процедура ИзменитьНастройкиНажатие(Элемент)
	ФормаНастроек=ПолучитьФорму("ФормаНастроек");
	ФормаНастроек.ОткрытьМодально();
	СформироватьИнфоОСверке();
КонецПроцедуры

Процедура СверитьНажатие(Элемент)
	Если РеализацияТоваровУслугУТ Тогда
		Если Не Обратная Тогда
			СверкаРеализаций();
		Иначе
			СверкаРеализацийОбратная();
		КонецЕсли;
	КонецЕсли;
	
	Если ПоступлениеТоваровУслугУТ Тогда
		Если Не Обратная Тогда
			СверкаПоступлений();
		Иначе
			СверкаПоступленийОбратная();
		КонецЕсли;
	КонецЕсли;
	
	Если СчетФактураВыданныйУТ Тогда
		СверкаСчФВыданный();
	КонецЕсли;
	
	Если СчетФактураПолученныйУТ Тогда
		СверкаСчФПолученный();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	ТолькоРасхождения=Истина;
КонецПроцедуры


//Процедуры сверки

Процедура СверкаРеализаций()
	//1. Загружаем данные из файла
	ТабБУ = ЗначениеИзФайла(ПутьКФайламТаблиц+"РеализацияТоваровУслуг.tz");
	ТабБУ.Колонки.Добавить("ПредставлениеДокумента",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100)));
	ТабБУ.Колонки.Добавить("КонтрагентСсылка",Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТабБУ.Колонки.Добавить("ГрузополучательСсылка",Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТабБУ.Колонки.Добавить("НоменклатураСсылка",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	КолСторок=ТабБУ.Количество();
	Состояние("Подготовка таблицы реализаций:",0);
	Для Каждого СтрокаТЧ Из ТабБУ Цикл
		СтрокаТЧ.ПредставлениеДокумента	= "Реализация товаров и услуг "+СтрокаТЧ.Номер;//+" от "+Формат(СтрокаТЧ.Дата,"ДЛФ=DT");
		СтрокаТЧ.КонтрагентСсылка=ПолучитьКонтрагента(СтрокаТЧ.Контрагент,СтрокаТЧ.КонтрагентИНН);
		СтрокаТЧ.ГрузополучательСсылка=ПолучитьКонтрагента(СтрокаТЧ.Грузополучатель,СтрокаТЧ.ГрузополучательИНН);
		СтрокаТЧ.НоменклатураСсылка		= Справочники.Номенклатура.НайтиПоНаименованию(СтрокаТЧ.Номенклатура);
		
		Состояние("Подготовка таблицы реализаций: "+Строка(Окр(100*ТабБУ.Индекс(СтрокаТЧ)/(КолСторок)))+"%");
	КонецЦикла;
	Состояние("");
	//2. Подготавливаем такую же таблицу в УТ
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("НачПериода",НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ВклНепроведенные",ВключатьНепроведенные);
	Запрос.УстановитьПараметр("ВидДоговора",Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);
	
	Запрос.Текст="ВЫБРАТЬ
	             |	РеализацияТоваровУслуг.Номер КАК Номер,
	             |	РеализацияТоваровУслуг.Дата КАК Дата,
	             |	ПРЕДСТАВЛЕНИЕ(РеализацияТоваровУслуг.Ссылка) КАК ПредставлениеДокумента,
	             |	РеализацияТоваровУслуг.Проведен КАК Проведен,
	             |	РеализацияТоваровУслуг.СуммаДокумента КАК СуммаДокумента,
	             |	РеализацияТоваровУслуг.Контрагент.Наименование КАК Контрагент,
	             |	РеализацияТоваровУслуг.Контрагент.Ссылка КАК КонтрагентСсылка,
	             |	РеализацияТоваровУслуг.Грузополучатель.Ссылка КАК ГрузополучательСсылка,
	             |	РеализацияТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	             |	РеализацияТоваровУслуг.УчитыватьНДС КАК УчитыватьНДС,
	             |	РеализацияТоваровУслугТовары.Номенклатура.Ссылка КАК НоменклатураСсылка,
	             |	СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество,
	             |	СУММА(РеализацияТоваровУслугТовары.Сумма) КАК Сумма,
	             |	СУММА(РеализацияТоваровУслугТовары.СуммаНДС) КАК СуммаНДС,
	             |	ПРЕДСТАВЛЕНИЕ(РеализацияТоваровУслугТовары.СтавкаНДС) КАК СтавкаНДС,
	             |	ВЫБОР
	             |		КОГДА РеализацияТоваровУслуг.ДоговорКонтрагента.ВидДоговора = &ВидДоговора
	             |			ТОГДА ИСТИНА
	             |		ИНАЧЕ ЛОЖЬ
	             |	КОНЕЦ КАК Аренда,
	             |	РеализацияТоваровУслуг.Ссылка
	             |ИЗ
	             |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	             |		ПО РеализацияТоваровУслугТовары.Ссылка = РеализацияТоваровУслуг.Ссылка
	             |ГДЕ
	             |	РеализацияТоваровУслуг.Дата МЕЖДУ &НачПериода И &КонПериода
	             |	И РеализацияТоваровУслуг.Организация = &Организация
	             |	И (&ВклНепроведенные
	             |			ИЛИ РеализацияТоваровУслуг.Проведен)
	             |	И РеализацияТоваровУслуг.ОтражатьВБухгалтерскомУчете
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	РеализацияТоваровУслуг.Номер,
	             |	РеализацияТоваровУслуг.Проведен,
	             |	РеализацияТоваровУслуг.Дата,
	             |	РеализацияТоваровУслуг.Контрагент.Ссылка,
	             |	РеализацияТоваровУслуг.Грузополучатель.Ссылка,
	             |	РеализацияТоваровУслуг.СуммаВключаетНДС,
	             |	РеализацияТоваровУслуг.УчитыватьНДС,
	             |	РеализацияТоваровУслугТовары.Номенклатура.Ссылка,
	             |	РеализацияТоваровУслуг.СуммаДокумента,
	             |	РеализацияТоваровУслуг.Контрагент.Наименование,
	             |	ВЫБОР
	             |		КОГДА РеализацияТоваровУслуг.ДоговорКонтрагента.ВидДоговора = &ВидДоговора
	             |			ТОГДА ИСТИНА
	             |		ИНАЧЕ ЛОЖЬ
	             |	КОНЕЦ,
	             |	РеализацияТоваровУслуг.Ссылка,
	             |	ПРЕДСТАВЛЕНИЕ(РеализацияТоваровУслугТовары.СтавкаНДС)";
	ТабУТ = Запрос.Выполнить().Выгрузить();
	//3. Последовательность вывода шапки
	МассивДляШапки=Новый Массив;
	МассивДляШапки.Добавить("Номер");
	МассивДляШапки.Добавить("Дата");
	МассивДляШапки.Добавить("Проведен");
	МассивДляШапки.Добавить("Контрагент");
	МассивДляШапки.Добавить("Грузополучатель");                
	МассивДляШапки.Добавить("СуммаДокумента");
	МассивДляШапки.Добавить("СуммаВключаетНДС");
	МассивДляШапки.Добавить("УчитыватьНДС");
	
	МассивДляТЧ=Новый Массив;
	МассивДляТЧ.Добавить("Количество");
	МассивДляТЧ.Добавить("Сумма");
	МассивДляТЧ.Добавить("СуммаНДС");
	//4. Формируем запрос по данныем
	
	Запрос.Текст="ВЫБРАТЬ
	             |	ТаблицаДанных.Номер КАК Номер,
	             |	ТаблицаДанных.Дата КАК Дата,
	             |	ВЫРАЗИТЬ(""Реализация товаров и услуг "" + ТаблицаДанных.Номер КАК СТРОКА(100)) КАК Ссылка,
	             |	ТаблицаДанных.Проведен КАК Проведен,
	             |	ЕСТЬNULL(ТаблицаДанных.СуммаДокумента, 0) КАК СуммаДокумента,
	             |	ЕСТЬNULL(ТаблицаДанных.КонтрагентСсылка, """") КАК Контрагент,
	             |	ЕСТЬNULL(ТаблицаДанных.ГрузополучательСсылка, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Грузополучатель,
	             |	ЕСТЬNULL(ТаблицаДанных.СуммаВключаетНДС, ЛОЖЬ) КАК СуммаВключаетНДС,
	             |	ЕСТЬNULL(ТаблицаДанных.УчитыватьНДС, ЛОЖЬ) КАК УчитыватьНДС,
	             |	ТаблицаДанных.НоменклатураСсылка КАК Номенклатура,
	             |	ЕСТЬNULL(ТаблицаДанных.Количество, 0) КАК Количество,
	             |	ЕСТЬNULL(ТаблицаДанных.Сумма, 0) КАК Сумма,
	             |	ЕСТЬNULL(ТаблицаДанных.СуммаНДС, 0) КАК СуммаНДС,
	             |	ЕСТЬNULL(ТаблицаДанных.СтавкаНДС, ""Без НДС"") КАК СтавкаНДС,
	             |	ТаблицаДанных.Аренда КАК Аренда,
	             |	ТаблицаДанных.Ссылка КАК Документ
	             |ПОМЕСТИТЬ ДанныеУТ
	             |ИЗ
	             |	&ТаблицаДанныхУТ КАК ТаблицаДанных
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ТаблицаДанных.Номер КАК Номер,
	             |	ТаблицаДанных.Дата КАК Дата,
	             |	ВЫРАЗИТЬ(ТаблицаДанных.ПредставлениеДокумента КАК СТРОКА(100)) КАК Ссылка,
	             |	ТаблицаДанных.Проведен КАК Проведен,
	             |	ТаблицаДанных.СуммаДокумента КАК СуммаДокумента,
	             |	ТаблицаДанных.КонтрагентСсылка КАК Контрагент,
	             |	ТаблицаДанных.ГрузополучательСсылка КАК Грузополучатель,
	             |	ТаблицаДанных.СуммаВключаетНДС КАК СуммаВключаетНДС,
	             |	ТаблицаДанных.УчитыватьНДС КАК УчитыватьНДС,
	             |	ВЫБОР
	             |		КОГДА ТаблицаДанных.НоменклатураСсылка = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	             |			ТОГДА ТаблицаДанных.Номенклатура
	             |		ИНАЧЕ ТаблицаДанных.НоменклатураСсылка
	             |	КОНЕЦ КАК Номенклатура,
	             |	ТаблицаДанных.Количество КАК Количество,
	             |	ТаблицаДанных.Сумма КАК Сумма,
	             |	ЕСТЬNULL(ТаблицаДанных.СуммаНДС, 0) КАК СуммаНДС,
	             |	ЕСТЬNULL(ТаблицаДанных.СтавкаНДС, ""Без НДС"") КАК СтавкаНДС
	             |ПОМЕСТИТЬ ДанныеБУ
	             |ИЗ
	             |	&ТаблицаДанныхБУ КАК ТаблицаДанных
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеУТ.Ссылка, ДанныеБУ.Ссылка) КАК СТРОКА(100)) КАК ПредставлениеДокумента,
	             |	ЕСТЬNULL(ДанныеУТ.Номенклатура, ДанныеБУ.Номенклатура) КАК Номенклатура,
	             |	ДанныеУТ.Номер КАК НомерУТ,
	             |	ДанныеБУ.Номер КАК НомерБУ,
	             |	ДанныеУТ.Дата КАК ДатаУТ,
	             |	ДанныеБУ.Дата КАК ДатаБУ,
	             |	ДанныеУТ.Проведен КАК ПроведенУТ,
	             |	ДанныеБУ.Проведен КАК ПроведенБУ,
	             |	ДанныеУТ.СуммаДокумента КАК СуммаДокументаУТ,
	             |	ДанныеБУ.СуммаДокумента КАК СуммаДокументаБУ,
	             |	ДанныеУТ.Контрагент КАК КонтрагентУТ,
	             |	ДанныеБУ.Контрагент КАК КонтрагентБУ,
	             |	ДанныеУТ.Грузополучатель КАК ГрузополучательУТ,
	             |	ДанныеБУ.Грузополучатель КАК ГрузополучательБУ,
	             |	ДанныеУТ.СуммаВключаетНДС КАК СуммаВключаетНДСУТ,
	             |	ДанныеБУ.СуммаВключаетНДС КАК СуммаВключаетНДСБУ,
	             |	ДанныеУТ.УчитыватьНДС КАК УчитыватьНДСУТ,
	             |	ДанныеБУ.УчитыватьНДС КАК УчитыватьНДСБУ,
	             |	ДанныеУТ.Количество КАК КоличествоУТ,
	             |	ДанныеБУ.Количество КАК КоличествоБУ,
	             |	ДанныеУТ.Сумма КАК СуммаУТ,
	             |	ДанныеБУ.Сумма КАК СуммаБУ,
	             |	ДанныеУТ.СуммаНДС КАК СуммаНДСУТ,
	             |	ДанныеБУ.СуммаНДС КАК СуммаНДСБУ,
	             |	ДанныеУТ.СтавкаНДС КАК СтавкаНДСУТ,
	             |	ДанныеБУ.СтавкаНДС КАК СтавкаНДСБУ,
	             |	ВЫБОР
	             |		КОГДА ДанныеУТ.Номер = ДанныеБУ.Номер
	             |				И НАЧАЛОПЕРИОДА(ДанныеУТ.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(ДанныеБУ.Дата, ДЕНЬ)
	             |				И (ДанныеУТ.Проведен = ДанныеБУ.Проведен
	             |					ИЛИ ДанныеУТ.Аренда)
	             |				И ДанныеУТ.СуммаДокумента = ДанныеБУ.СуммаДокумента
	             |				И ДанныеУТ.Контрагент = ДанныеБУ.Контрагент
	             |				И ЕСТЬNULL(ДанныеУТ.Грузополучатель, 0) = ЕСТЬNULL(ДанныеБУ.Грузополучатель, 0)
	             |				И ДанныеУТ.Номенклатура = ДанныеБУ.Номенклатура
	             |				И ДанныеУТ.СуммаВключаетНДС = ДанныеБУ.СуммаВключаетНДС
	             |				И ДанныеУТ.УчитыватьНДС = ДанныеБУ.УчитыватьНДС
	             |				И ДанныеУТ.Количество = ДанныеБУ.Количество
	             |				И ДанныеУТ.Сумма = ДанныеБУ.Сумма
	             |				И ДанныеУТ.СуммаНДС = ДанныеБУ.СуммаНДС
	             |			ТОГДА ЛОЖЬ
	             |		ИНАЧЕ ИСТИНА
	             |	КОНЕЦ КАК ЕстьРасхождение,
	             |	ЕСТЬNULL(ДанныеУТ.Ссылка, ДанныеБУ.Ссылка) КАК Документ
	             |ИЗ
	             |	ДанныеУТ КАК ДанныеУТ
	             |		ПОЛНОЕ СОЕДИНЕНИЕ ДанныеБУ КАК ДанныеБУ
	             |		ПО ДанныеУТ.Номер = ДанныеБУ.Номер
	             |			И ДанныеУТ.Номенклатура = ДанныеБУ.Номенклатура
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ПредставлениеДокумента
	             |ИТОГИ
	             |	МАКСИМУМ(НомерУТ),
	             |	МАКСИМУМ(НомерБУ),
	             |	МАКСИМУМ(ДатаУТ),
	             |	МАКСИМУМ(ДатаБУ),
	             |	МАКСИМУМ(ПроведенУТ),
	             |	МАКСИМУМ(ПроведенБУ),
	             |	МАКСИМУМ(СуммаДокументаУТ),
	             |	МАКСИМУМ(СуммаДокументаБУ),
	             |	МАКСИМУМ(КонтрагентУТ),
	             |	МАКСИМУМ(КонтрагентБУ),
	             |	МАКСИМУМ(ГрузополучательУТ),
	             |	МАКСИМУМ(ГрузополучательБУ),
	             |	МАКСИМУМ(СуммаВключаетНДСУТ),
	             |	МАКСИМУМ(СуммаВключаетНДСБУ),
	             |	МАКСИМУМ(УчитыватьНДСУТ),
	             |	МАКСИМУМ(УчитыватьНДСБУ),
	             |	МАКСИМУМ(ЕстьРасхождение),
	             |	МАКСИМУМ(Документ)
	             |ПО
	             |	ПредставлениеДокумента";
	Запрос.УстановитьПараметр("ТаблицаДанныхУТ",ТабУТ);
	Запрос.УстановитьПараметр("ТаблицаДанныхБУ",ТабБУ);
	
	Результат=Запрос.Выполнить();
	
	//Начинаем вывод
	ТабДокумент	=Новый ТабличныйДокумент;
	ТабДок		=Новый ТабличныйДокумент;
	
	Макет=ПолучитьМакет("Макет");
	Область=Макет.ПолучитьОбласть("ШапкаОтчета");
	Область.Параметры.ИнфоОСверке=ИнформацияОСверке;
	ТабДокумент.Вывести(Область);
	ТабДокумент.НачатьАвтогруппировкуСтрок();
	ВыборкаДокументов=Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ОбластьДок=Макет.ПолучитьОбласть("СтрокаДокумент");
	Пока ВыборкаДокументов.Следующий() Цикл
		Если Не ВыборкаДокументов.ЕстьРасхождение И ТолькоРасхождения Тогда
			Продолжить;
		КонецЕсли;
		ОбластьДок.Параметры.ПредставлениеДокумента=ВыборкаДокументов.ПредставлениеДокумента;
		ОбластьДок.Параметры.ТабличнаяЧасть=ВыборкаДокументов.Документ;
		ТабДокумент.Вывести(ОбластьДок,2);
		
		ОбластьДок.Параметры.ПредставлениеДокумента="Шапка";
		ТабДокумент.Вывести(ОбластьДок,3,,Ложь);
		
		
		ТабДок=Новый ТабличныйДокумент;
		ТабДок.НачатьАвтогруппировкуКолонок();
		ОбластьПоказатель=Макет.ПолучитьОбласть("СтрокаПоказатели|КолонкаШапка");
		ТабДок.Присоединить(ОбластьПоказатель);
		ОбластьПоказатель=Макет.ПолучитьОбласть("СтрокаПоказатели|КолонкаПоказатели");
		Для Каждого Эл Из МассивДляШапки Цикл
			ОбластьПоказатель.Параметры.ПоказательШапки=Эл;
			ОбластьПоказатель.Параметры.ПоказательУТ=ВыборкаДокументов[Эл+"УТ"];
			ОбластьПоказатель.Параметры.ПоказательБП=ВыборкаДокументов[Эл+"БУ"];
			ТабДок.Присоединить(ОбластьПоказатель);
		КонецЦикла;
		ТабДок.ЗакончитьАвтогруппировкуКолонок();
		ТабДокумент.Вывести(ТабДок,4,"1. Шапка",Истина);
//-----------------------------------------------------------------------------------------------------------------------		
		ОбластьДок.Параметры.ПредставлениеДокумента="Табличная часть";
		ТабДокумент.Вывести(ОбластьДок,3,,Истина);
		ВыборкаНоменклатуры=ВыборкаДокументов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаНоменклатуры.Следующий() Цикл
			Если Не ВыборкаНоменклатуры.ЕстьРасхождение И ТолькоРасхождения Тогда
				Продолжить;
			КонецЕсли;
			ТабДок=Новый ТабличныйДокумент;
			ТабДок.НачатьАвтогруппировкуКолонок();
			
			ОбластьПоказатель=Макет.ПолучитьОбласть("СтрокаПоказатели|КолонкаШапка");
			ТабДок.Присоединить(ОбластьПоказатель);
			ОбластьПоказатель=Макет.ПолучитьОбласть("СтрокаПоказатели|КолонкаНоменклатура");
			ОбластьПоказатель.Параметры.Номенклатура=ВыборкаНоменклатуры.Номенклатура;
			ТабДок.Присоединить(ОбластьПоказатель);
			ОбластьПоказатель=Макет.ПолучитьОбласть("СтрокаПоказатели|КолонкаПоказатели");
			Для Каждого Эл Из МассивДляТЧ Цикл
				ОбластьПоказатель.Параметры.ПоказательШапки=Эл;
				ОбластьПоказатель.Параметры.ПоказательУТ=ВыборкаНоменклатуры[Эл+"УТ"];
				ОбластьПоказатель.Параметры.ПоказательБП=ВыборкаНоменклатуры[Эл+"БУ"];
				ТабДок.Присоединить(ОбластьПоказатель);
			КонецЦикла;
			ТабДок.ЗакончитьАвтогруппировкуКолонок();
			ТабДокумент.Вывести(ТабДок,4,"2. Табличная часть",Истина);
		КонецЦикла;
	КонецЦикла;
	ТабДокумент.ЗакончитьАвтогруппировкуСтрок();
	ТабДокумент.ТолькоПросмотр=Истина;
	ТабДокумент.Показать("Реализации");
КонецПроцедуры

Процедура СверкаПоступлений()
	//1. Загружаем данные из файла
	ТабБУ = ЗначениеИзФайла(ПутьКФайламТаблиц+"ПоступлениеТоваровУслуг.tz");
	ТабБУ.Колонки.Добавить("ПредставлениеДокумента",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100)));
	ТабБУ.Колонки.Добавить("КонтрагентСсылка",Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТабБУ.Колонки.Добавить("ГрузоотправительСсылка",Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТабБУ.Колонки.Добавить("НоменклатураСсылка",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	КолСторок=ТабБУ.Количество();
	Состояние("Подготовка таблицы поступлений:",0);
	Для Каждого СтрокаТЧ Из ТабБУ Цикл
		СтрокаТЧ.КонтрагентСсылка=ПолучитьКонтрагента(СтрокаТЧ.Контрагент,СтрокаТЧ.КонтрагентИНН);
		СтрокаТЧ.ГрузоотправительСсылка=ПолучитьКонтрагента(СтрокаТЧ.Грузоотправитель,СтрокаТЧ.ГрузоотправительИНН);
		СтрокаТЧ.НоменклатураСсылка		= Справочники.Номенклатура.НайтиПоНаименованию(СтрокаТЧ.Номенклатура);
		СтрокаТЧ.ПредставлениеДокумента	= "Поступление товаров и услуг "+СтрокаТЧ.Номер;//+" от "+Формат(СтрокаТЧ.Дата,"ДЛФ=DT");
		
		Состояние("Подготовка таблицы поступлений: "+Строка(Окр(100*ТабБУ.Индекс(СтрокаТЧ)/(КолСторок)))+"%");
	КонецЦикла;
	Состояние("");
	//2. Подготавливаем такую же таблицу в УТ
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("НачПериода",НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ВклНепроведенные",ВключатьНепроведенные);
	
	Запрос.Текст="ВЫБРАТЬ
	             |	ПоступлениеТоваровУслуг.Номер КАК Номер,
	             |	ВЫБОР
	             |		КОГДА ПоступлениеТоваровУслуг.ДатаВходящегоДокумента = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	             |			ТОГДА ПоступлениеТоваровУслуг.Дата
	             |		ИНАЧЕ ПоступлениеТоваровУслуг.ДатаВходящегоДокумента
	             |	КОНЕЦ КАК Дата,
	             |	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровУслуг.Ссылка) КАК ПредставлениеДокумента,
	             |	ПоступлениеТоваровУслуг.Проведен КАК Проведен,
	             |	ПоступлениеТоваровУслуг.СуммаДокумента КАК СуммаДокумента,
	             |	ПоступлениеТоваровУслуг.Контрагент.Наименование КАК Контрагент,
	             |	ПоступлениеТоваровУслуг.Контрагент.Ссылка КАК КонтрагентСсылка,
	             |	ПоступлениеТоваровУслуг.Грузоотправитель.Ссылка КАК ГрузоотправительСсылка,
	             |	ПоступлениеТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	             |	ПоступлениеТоваровУслуг.УчитыватьНДС КАК УчитыватьНДС,
	             |	ПоступлениеТоваровУслугТовары.Номенклатура.Ссылка КАК НоменклатураСсылка,
	             |	СУММА(ПоступлениеТоваровУслугТовары.Количество) КАК Количество,
	             |	СУММА(ПоступлениеТоваровУслугТовары.Сумма) КАК Сумма,
	             |	СУММА(ПоступлениеТоваровУслугТовары.СуммаНДС) КАК СуммаНДС,
	             |	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровУслугТовары.СтавкаНДС) КАК СтавкаНДС,
	             |	ПоступлениеТоваровУслуг.НомерВходящегоДокумента,
	             |	ПоступлениеТоваровУслуг.ДатаВходящегоДокумента,
	             |	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка
	             |ИЗ
	             |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	             |		ПО ПоступлениеТоваровУслугТовары.Ссылка = ПоступлениеТоваровУслуг.Ссылка
	             |ГДЕ
	             |	ПоступлениеТоваровУслуг.Дата МЕЖДУ &НачПериода И &КонПериода
	             |	И ПоступлениеТоваровУслуг.Организация = &Организация
	             |	И (&ВклНепроведенные
	             |			ИЛИ ПоступлениеТоваровУслуг.Проведен)
	             |	И ПоступлениеТоваровУслуг.ОтражатьВБухгалтерскомУчете
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПоступлениеТоваровУслуг.Номер,
	             |	ПоступлениеТоваровУслуг.Проведен,
	             |	ПоступлениеТоваровУслуг.Контрагент.Ссылка,
	             |	ПоступлениеТоваровУслуг.Грузоотправитель.Ссылка,
	             |	ПоступлениеТоваровУслуг.СуммаВключаетНДС,
	             |	ПоступлениеТоваровУслуг.УчитыватьНДС,
	             |	ПоступлениеТоваровУслугТовары.Номенклатура.Ссылка,
	             |	ПоступлениеТоваровУслуг.СуммаДокумента,
	             |	ПоступлениеТоваровУслуг.Контрагент.Наименование,
	             |	ПоступлениеТоваровУслуг.НомерВходящегоДокумента,
	             |	ВЫБОР
	             |		КОГДА ПоступлениеТоваровУслуг.ДатаВходящегоДокумента = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	             |			ТОГДА ПоступлениеТоваровУслуг.Дата
	             |		ИНАЧЕ ПоступлениеТоваровУслуг.ДатаВходящегоДокумента
	             |	КОНЕЦ,
	             |	ПоступлениеТоваровУслуг.ДатаВходящегоДокумента,
	             |	ПоступлениеТоваровУслуг.Ссылка,
	             |	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровУслугТовары.СтавкаНДС)";
	ТабУТ = Запрос.Выполнить().Выгрузить();
	//3. Последовательность вывода шапки
	МассивДляШапки=Новый Массив;
	МассивДляШапки.Добавить("Номер");
	МассивДляШапки.Добавить("Дата");
	МассивДляШапки.Добавить("НомерВходящегоДокумента");
	МассивДляШапки.Добавить("ДатаВходящегоДокумента");
	МассивДляШапки.Добавить("Проведен");
	МассивДляШапки.Добавить("Контрагент");
	МассивДляШапки.Добавить("Грузоотправитель");                
	МассивДляШапки.Добавить("СуммаДокумента");
	МассивДляШапки.Добавить("СуммаВключаетНДС");
	МассивДляШапки.Добавить("УчитыватьНДС");
	
	
	МассивДляТЧ=Новый Массив;
	МассивДляТЧ.Добавить("Количество");
	МассивДляТЧ.Добавить("Сумма");
	МассивДляТЧ.Добавить("СуммаНДС");
	//4. Формируем запрос по данныем
	
	Запрос.Текст="ВЫБРАТЬ
	             |	ТаблицаДанных.Номер КАК Номер,
	             |	ТаблицаДанных.Дата КАК Дата,
	             |	ТаблицаДанных.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	             |	ТаблицаДанных.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	             |	ВЫРАЗИТЬ(""Поступление товаров и услуг "" + ТаблицаДанных.Номер КАК СТРОКА(100)) КАК Ссылка,
	             |	ТаблицаДанных.Проведен КАК Проведен,
	             |	ТаблицаДанных.СуммаДокумента КАК СуммаДокумента,
	             |	ТаблицаДанных.КонтрагентСсылка КАК Контрагент,
	             |	ЕСТЬNULL(ТаблицаДанных.ГрузоотправительСсылка, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Грузоотправитель,
	             |	ТаблицаДанных.СуммаВключаетНДС КАК СуммаВключаетНДС,
	             |	ТаблицаДанных.УчитыватьНДС КАК УчитыватьНДС,
	             |	ТаблицаДанных.НоменклатураСсылка КАК Номенклатура,
	             |	ТаблицаДанных.Количество КАК Количество,
	             |	ТаблицаДанных.Сумма КАК Сумма,
	             |	ТаблицаДанных.СуммаНДС КАК СуммаНДС,
	             |	ТаблицаДанных.СтавкаНДС КАК СтавкаНДС,
	             |	ТаблицаДанных.Ссылка КАК Документ
	             |ПОМЕСТИТЬ ДанныеУТ
	             |ИЗ
	             |	&ТаблицаДанныхУТ КАК ТаблицаДанных
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ТаблицаДанных.Номер КАК Номер,
	             |	ТаблицаДанных.Дата КАК Дата,
	             |	ТаблицаДанных.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	             |	ТаблицаДанных.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	             |	ВЫРАЗИТЬ(ТаблицаДанных.ПредставлениеДокумента КАК СТРОКА(100)) КАК Ссылка,
	             |	ТаблицаДанных.Проведен КАК Проведен,
	             |	ТаблицаДанных.СуммаДокумента КАК СуммаДокумента,
	             |	ТаблицаДанных.КонтрагентСсылка КАК Контрагент,
	             |	ТаблицаДанных.ГрузоотправительСсылка КАК Грузоотправитель,
	             |	ТаблицаДанных.СуммаВключаетНДС КАК СуммаВключаетНДС,
	             |	ТаблицаДанных.УчитыватьНДС КАК УчитыватьНДС,
	             |	ВЫБОР
	             |		КОГДА ТаблицаДанных.НоменклатураСсылка = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	             |			ТОГДА ТаблицаДанных.Номенклатура
	             |		ИНАЧЕ ТаблицаДанных.НоменклатураСсылка
	             |	КОНЕЦ КАК Номенклатура,
	             |	ТаблицаДанных.Количество КАК Количество,
	             |	ТаблицаДанных.Сумма КАК Сумма,
	             |	ТаблицаДанных.СуммаНДС КАК СуммаНДС,
	             |	ТаблицаДанных.СтавкаНДС КАК СтавкаНДС
	             |ПОМЕСТИТЬ ДанныеБУ
	             |ИЗ
	             |	&ТаблицаДанныхБУ КАК ТаблицаДанных
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеУТ.Ссылка, ДанныеБУ.Ссылка) КАК СТРОКА(100)) КАК ПредставлениеДокумента,
	             |	ЕСТЬNULL(ДанныеУТ.Номенклатура, ДанныеБУ.Номенклатура) КАК Номенклатура,
	             |	ДанныеУТ.Номер КАК НомерУТ,
	             |	ДанныеБУ.Номер КАК НомерБУ,
	             |	ДанныеУТ.Дата КАК ДатаУТ,
	             |	ДанныеБУ.Дата КАК ДатаБУ,
	             |	ДанныеУТ.НомерВходящегоДокумента КАК НомерВходящегоДокументаУТ,
	             |	ДанныеУТ.ДатаВходящегоДокумента КАК ДатаВходящегоДокументаУТ,
	             |	ДанныеБУ.НомерВходящегоДокумента КАК НомерВходящегоДокументаБУ,
	             |	ДанныеБУ.ДатаВходящегоДокумента КАК ДатаВходящегоДокументаБУ,
	             |	ДанныеУТ.Проведен КАК ПроведенУТ,
	             |	ДанныеБУ.Проведен КАК ПроведенБУ,
	             |	ДанныеУТ.СуммаДокумента КАК СуммаДокументаУТ,
	             |	ДанныеБУ.СуммаДокумента КАК СуммаДокументаБУ,
	             |	ДанныеУТ.Контрагент КАК КонтрагентУТ,
	             |	ДанныеБУ.Контрагент КАК КонтрагентБУ,
	             |	ДанныеУТ.Грузоотправитель КАК ГрузоотправительУТ,
	             |	ДанныеБУ.Грузоотправитель КАК ГрузоотправительБУ,
	             |	ДанныеУТ.СуммаВключаетНДС КАК СуммаВключаетНДСУТ,
	             |	ДанныеБУ.СуммаВключаетНДС КАК СуммаВключаетНДСБУ,
	             |	ДанныеУТ.УчитыватьНДС КАК УчитыватьНДСУТ,
	             |	ДанныеБУ.УчитыватьНДС КАК УчитыватьНДСБУ,
	             |	ДанныеУТ.Количество КАК КоличествоУТ,
	             |	ДанныеБУ.Количество КАК КоличествоБУ,
	             |	ДанныеУТ.Сумма КАК СуммаУТ,
	             |	ДанныеБУ.Сумма КАК СуммаБУ,
	             |	ДанныеУТ.СуммаНДС КАК СуммаНДСУТ,
	             |	ДанныеБУ.СуммаНДС КАК СуммаНДСБУ,
	             |	ДанныеУТ.СтавкаНДС КАК СтавкаНДСУТ,
	             |	ДанныеБУ.СтавкаНДС КАК СтавкаНДСБУ,
	             |	ВЫБОР
	             |		КОГДА ДанныеУТ.Номер = ДанныеБУ.Номер
	             |				И НАЧАЛОПЕРИОДА(ДанныеУТ.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(ДанныеБУ.Дата, ДЕНЬ)
	             |				И ДанныеУТ.Проведен = ДанныеБУ.Проведен
	             |				И ДанныеУТ.СуммаДокумента = ДанныеБУ.СуммаДокумента
	             |				И ДанныеУТ.Контрагент = ДанныеБУ.Контрагент
	             |				И ДанныеУТ.Грузоотправитель = ДанныеБУ.Грузоотправитель
	             |				И ДанныеУТ.Номенклатура = ДанныеБУ.Номенклатура
	             |				И ДанныеУТ.СуммаВключаетНДС = ДанныеБУ.СуммаВключаетНДС
	             |				И ДанныеУТ.УчитыватьНДС = ДанныеБУ.УчитыватьНДС
	             |				И ДанныеУТ.Количество = ДанныеБУ.Количество
	             |				И ДанныеУТ.Сумма = ДанныеБУ.Сумма
	             |				И ДанныеУТ.СуммаНДС = ДанныеБУ.СуммаНДС
	             |				И ДанныеУТ.НомерВходящегоДокумента = ДанныеБУ.НомерВходящегоДокумента
	             |				И ДанныеУТ.ДатаВходящегоДокумента = ДанныеБУ.ДатаВходящегоДокумента
	             |			ТОГДА ЛОЖЬ
	             |		ИНАЧЕ ИСТИНА
	             |	КОНЕЦ КАК ЕстьРасхождение,
	             |	ДанныеУТ.Документ КАК Документ
	             |ИЗ
	             |	ДанныеУТ КАК ДанныеУТ
	             |		ПОЛНОЕ СОЕДИНЕНИЕ ДанныеБУ КАК ДанныеБУ
	             |		ПО ДанныеУТ.Номер = ДанныеБУ.Номер
	             |			И ДанныеУТ.Номенклатура = ДанныеБУ.Номенклатура
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ПредставлениеДокумента
	             |ИТОГИ
	             |	МАКСИМУМ(НомерУТ),
	             |	МАКСИМУМ(НомерБУ),
	             |	МАКСИМУМ(ДатаУТ),
	             |	МАКСИМУМ(ДатаБУ),
	             |	МАКСИМУМ(НомерВходящегоДокументаУТ),
	             |	МАКСИМУМ(ДатаВходящегоДокументаУТ),
	             |	МАКСИМУМ(НомерВходящегоДокументаБУ),
	             |	МАКСИМУМ(ДатаВходящегоДокументаБУ),
	             |	МАКСИМУМ(ПроведенУТ),
	             |	МАКСИМУМ(ПроведенБУ),
	             |	МАКСИМУМ(СуммаДокументаУТ),
	             |	МАКСИМУМ(СуммаДокументаБУ),
	             |	МАКСИМУМ(КонтрагентУТ),
	             |	МАКСИМУМ(КонтрагентБУ),
	             |	МАКСИМУМ(ГрузоотправительУТ),
	             |	МАКСИМУМ(ГрузоотправительБУ),
	             |	МАКСИМУМ(СуммаВключаетНДСУТ),
	             |	МАКСИМУМ(СуммаВключаетНДСБУ),
	             |	МАКСИМУМ(УчитыватьНДСУТ),
	             |	МАКСИМУМ(УчитыватьНДСБУ),
	             |	МАКСИМУМ(ЕстьРасхождение),
	             |	МАКСИМУМ(Документ)
	             |ПО
	             |	ПредставлениеДокумента";
	Запрос.УстановитьПараметр("ТаблицаДанныхУТ",ТабУТ);
	Запрос.УстановитьПараметр("ТаблицаДанныхБУ",ТабБУ);
	
	Результат=Запрос.Выполнить();
	
	//Начинаем вывод
	ТабДокумент	=Новый ТабличныйДокумент;
	ТабДок		=Новый ТабличныйДокумент;
	
	Макет=ПолучитьМакет("Макет");
	Область=Макет.ПолучитьОбласть("ШапкаОтчета");
	Область.Параметры.ИнфоОСверке=ИнформацияОСверке;
	ТабДокумент.Вывести(Область);
	ТабДокумент.НачатьАвтогруппировкуСтрок();
	ВыборкаДокументов=Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ОбластьДок=Макет.ПолучитьОбласть("СтрокаДокумент");
	Пока ВыборкаДокументов.Следующий() Цикл
		Если Не ВыборкаДокументов.ЕстьРасхождение И ТолькоРасхождения Тогда
			Продолжить;
		КонецЕсли;
		ОбластьДок.Параметры.ПредставлениеДокумента=ВыборкаДокументов.ПредставлениеДокумента;
		ОбластьДок.Параметры.ТабличнаяЧасть=ВыборкаДокументов.Документ;
		ТабДокумент.Вывести(ОбластьДок,2);
		
		ОбластьДок.Параметры.ПредставлениеДокумента="Шапка";
		ТабДокумент.Вывести(ОбластьДок,3,,Ложь);
		
		
		ТабДок=Новый ТабличныйДокумент;
		ТабДок.НачатьАвтогруппировкуКолонок();
		ОбластьПоказатель=Макет.ПолучитьОбласть("СтрокаПоказатели|КолонкаШапка");
		ТабДок.Присоединить(ОбластьПоказатель);
		ОбластьПоказатель=Макет.ПолучитьОбласть("СтрокаПоказатели|КолонкаПоказатели");
		Для Каждого Эл Из МассивДляШапки Цикл
			ОбластьПоказатель.Параметры.ПоказательШапки=Эл;
			ОбластьПоказатель.Параметры.ПоказательУТ=ВыборкаДокументов[Эл+"УТ"];
			ОбластьПоказатель.Параметры.ПоказательБП=ВыборкаДокументов[Эл+"БУ"];
			ТабДок.Присоединить(ОбластьПоказатель);
		КонецЦикла;
		ТабДок.ЗакончитьАвтогруппировкуКолонок();
		ТабДокумент.Вывести(ТабДок,4,"1. Шапка",Истина);
//-----------------------------------------------------------------------------------------------------------------------		
		ОбластьДок.Параметры.ПредставлениеДокумента="Табличная часть";
		ТабДокумент.Вывести(ОбластьДок,3,,Истина);
		ВыборкаНоменклатуры=ВыборкаДокументов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаНоменклатуры.Следующий() Цикл
			Если Не ВыборкаНоменклатуры.ЕстьРасхождение И ТолькоРасхождения Тогда
				Продолжить;
			КонецЕсли;
			ТабДок=Новый ТабличныйДокумент;
			ТабДок.НачатьАвтогруппировкуКолонок();
			
			ОбластьПоказатель=Макет.ПолучитьОбласть("СтрокаПоказатели|КолонкаШапка");
			ТабДок.Присоединить(ОбластьПоказатель);
			ОбластьПоказатель=Макет.ПолучитьОбласть("СтрокаПоказатели|КолонкаНоменклатура");
			ОбластьПоказатель.Параметры.Номенклатура=ВыборкаНоменклатуры.Номенклатура;
			ТабДок.Присоединить(ОбластьПоказатель);
			ОбластьПоказатель=Макет.ПолучитьОбласть("СтрокаПоказатели|КолонкаПоказатели");
			Для Каждого Эл Из МассивДляТЧ Цикл
				ОбластьПоказатель.Параметры.ПоказательШапки=Эл;
				ОбластьПоказатель.Параметры.ПоказательУТ=ВыборкаНоменклатуры[Эл+"УТ"];
				ОбластьПоказатель.Параметры.ПоказательБП=ВыборкаНоменклатуры[Эл+"БУ"];
				ТабДок.Присоединить(ОбластьПоказатель);
			КонецЦикла;
			ТабДок.ЗакончитьАвтогруппировкуКолонок();
			ТабДокумент.Вывести(ТабДок,4,"2. Табличная часть",Истина);
		КонецЦикла;
	КонецЦикла;
	ТабДокумент.ЗакончитьАвтогруппировкуСтрок();
	ТабДокумент.ТолькоПросмотр=Истина;
	ТабДокумент.Показать("Поступления");
КонецПроцедуры

Процедура СверкаСчФВыданный()
	//1. Загружаем данные из файла
	ТабБУ = ЗначениеИзФайла(ПутьКФайламТаблиц+"СчетФактураВыданный.tz");
	ТабБУ.Колонки.Добавить("ПредставлениеДокумента",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100)));
	ТабБУ.Колонки.Добавить("КонтрагентСсылка",Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	КолСторок=ТабБУ.Количество();
	Состояние("Подготовка таблицы сч.ф. выданных:",0);
	Для Каждого СтрокаТЧ Из ТабБУ Цикл
		СтрокаТЧ.ПредставлениеДокумента	= "Счет-фактура выданный "+СтрокаТЧ.Номер;//+" от "+Формат(СтрокаТЧ.Дата,"ДЛФ=DT");
		СтрокаТЧ.КонтрагентСсылка=ПолучитьКонтрагента(СтрокаТЧ.Контрагент,СтрокаТЧ.КонтрагентИНН);
		
		Состояние("Подготовка таблицы счет-фактура выданные: "+Строка(Окр(100*ТабБУ.Индекс(СтрокаТЧ)/(КолСторок)))+"%");
	КонецЦикла;
	Состояние("");
	//2. Подготавливаем такую же таблицу в УТ
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("НачПериода",НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ВклНепроведенные",ВключатьНепроведенные);
	
	Запрос.Текст="ВЫБРАТЬ
	             |	СчетФактураВыданный.Номер,
	             |	СчетФактураВыданный.Дата,
	             |	СчетФактураВыданный.Проведен,
	             |	СчетФактураВыданный.Контрагент КАК КонтрагентСсылка,
	             |	СчетФактураВыданный.Контрагент.ИНН,
	             |	СчетФактураВыданный.СуммаНДС,
	             |	СчетФактураВыданный.СуммаДокумента,
	             |	СчетФактураВыданный.ДокументОснование.Номер,
	             |	СчетФактураВыданный.ДокументОснование.Дата,
	             |	ПРЕДСТАВЛЕНИЕ(СчетФактураВыданный.Ссылка) КАК ПредставлениеДокумента
	             |ИЗ
	             |	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	             |ГДЕ
	             |	СчетФактураВыданный.Дата МЕЖДУ &НачПериода И &КонПериода
	             |	И СчетФактураВыданный.Организация = &Организация
	             |	И (СчетФактураВыданный.Проведен
	             |			ИЛИ &ВклНепроведенные)";
	ТабУТ = Запрос.Выполнить().Выгрузить();
	//3. Последовательность вывода шапки
	МассивДляШапки=Новый Массив;
	МассивДляШапки.Добавить("Номер");
	МассивДляШапки.Добавить("Дата");
	МассивДляШапки.Добавить("Проведен");
	МассивДляШапки.Добавить("Контрагент");
	МассивДляШапки.Добавить("СуммаДокумента");
	МассивДляШапки.Добавить("СуммаНДС");
	МассивДляШапки.Добавить("ДокументОснованиеНомер");
	МассивДляШапки.Добавить("ДокументОснованиеДата");
	//4. Формируем запрос по данныем
	
	Запрос.Текст="ВЫБРАТЬ
	             |	ТаблицаДанных.Номер КАК Номер,
	             |	ТаблицаДанных.Дата КАК Дата,
	             |	ТаблицаДанных.ДокументОснованиеНомер КАК ДокументОснованиеНомер,
	             |	ТаблицаДанных.ДокументОснованиеДата КАК ДокументОснованиеДата,
	             |	ВЫРАЗИТЬ(""Счет-фактура выданный ""+ТаблицаДанных.Номер КАК СТРОКА(100)) КАК Ссылка,
	             |	ТаблицаДанных.Проведен КАК Проведен,
	             |	ТаблицаДанных.СуммаДокумента КАК СуммаДокумента,
	             |	ТаблицаДанных.КонтрагентСсылка КАК Контрагент,
	             |	ТаблицаДанных.СуммаНДС КАК СуммаНДС
	             |ПОМЕСТИТЬ ДанныеУТ
	             |ИЗ
	             |	&ТаблицаДанныхУТ КАК ТаблицаДанных
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ТаблицаДанных.Номер КАК Номер,
	             |	ТаблицаДанных.Дата КАК Дата,
	             |	ТаблицаДанных.ДокументОснованиеНомер КАК ДокументОснованиеНомер,
	             |	ТаблицаДанных.ДокументОснованиеДата КАК ДокументОснованиеДата,
	             |	ВЫРАЗИТЬ(ТаблицаДанных.ПредставлениеДокумента КАК СТРОКА(100)) КАК Ссылка,
	             |	ТаблицаДанных.Проведен КАК Проведен,
	             |	ТаблицаДанных.СуммаДокумента КАК СуммаДокумента,
	             |	ТаблицаДанных.КонтрагентСсылка КАК Контрагент,
	             |	ТаблицаДанных.СуммаНДС КАК СуммаНДС
	             |ПОМЕСТИТЬ ДанныеБУ
	             |ИЗ
	             |	&ТаблицаДанныхБУ КАК ТаблицаДанных
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеУТ.Ссылка, ДанныеБУ.Ссылка) КАК СТРОКА(100)) КАК ПредставлениеДокумента,
	             |	ДанныеУТ.Номер КАК НомерУТ,
	             |	ДанныеБУ.Номер КАК НомерБУ,
	             |	ДанныеУТ.Дата КАК ДатаУТ,
	             |	ДанныеБУ.Дата КАК ДатаБУ,
	             |	ДанныеУТ.ДокументОснованиеНомер КАК ДокументОснованиеНомерУТ,
	             |	ДанныеУТ.ДокументОснованиеДата КАК ДокументОснованиеДатаУТ,
	             |	ДанныеБУ.ДокументОснованиеНомер КАК ДокументОснованиеНомерБУ,
	             |	ДанныеБУ.ДокументОснованиеДата КАК ДокументОснованиеДатаБУ,
	             |	ДанныеУТ.Проведен КАК ПроведенУТ,
	             |	ДанныеБУ.Проведен КАК ПроведенБУ,
	             |	ДанныеУТ.СуммаДокумента КАК СуммаДокументаУТ,
	             |	ДанныеБУ.СуммаДокумента КАК СуммаДокументаБУ,
	             |	ДанныеУТ.Контрагент КАК КонтрагентУТ,
	             |	ДанныеБУ.Контрагент КАК КонтрагентБУ,
	             |	ДанныеУТ.СуммаНДС КАК СуммаНДСУТ,
	             |	ДанныеБУ.СуммаНДС КАК СуммаНДСБУ,
	             |	ВЫБОР
	             |		КОГДА ДанныеУТ.Номер = ДанныеБУ.Номер
	             |				И НачалоПериода(ДанныеУТ.Дата,ДЕНЬ) = НачалоПериода(ДанныеБУ.Дата,ДЕНЬ)
	             |				И ДанныеУТ.Проведен = ДанныеБУ.Проведен
	             |				И ДанныеУТ.СуммаДокумента = ДанныеБУ.СуммаДокумента
	             |				И ДанныеУТ.Контрагент = ДанныеБУ.Контрагент
	             |				И ДанныеУТ.СуммаНДС = ДанныеБУ.СуммаНДС
	             |				И ДанныеУТ.ДокументОснованиеНомер = ДанныеБУ.ДокументОснованиеНомер
	             |				И ДанныеУТ.ДокументОснованиеДата = ДанныеБУ.ДокументОснованиеДата
	             |			ТОГДА ЛОЖЬ
	             |		ИНАЧЕ ИСТИНА
	             |	КОНЕЦ КАК ЕстьРасхождение
	             |ИЗ
	             |	ДанныеУТ КАК ДанныеУТ
	             |		ПОЛНОЕ СОЕДИНЕНИЕ ДанныеБУ КАК ДанныеБУ
	             |		ПО ДанныеУТ.Номер = ДанныеБУ.Номер
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ПредставлениеДокумента
	             |ИТОГИ
	             |	МАКСИМУМ(НомерУТ),
	             |	МАКСИМУМ(НомерБУ),
	             |	МАКСИМУМ(ДатаУТ),
	             |	МАКСИМУМ(ДатаБУ),
	             |	МАКСИМУМ(ДокументОснованиеНомерУТ),
	             |	МАКСИМУМ(ДокументОснованиеДатаУТ),
	             |	МАКСИМУМ(ДокументОснованиеНомерБУ),
	             |	МАКСИМУМ(ДокументОснованиеДатаБУ),
	             |	МАКСИМУМ(ПроведенУТ),
	             |	МАКСИМУМ(ПроведенБУ),
	             |	МАКСИМУМ(СуммаДокументаУТ),
	             |	МАКСИМУМ(СуммаДокументаБУ),
	             |	МАКСИМУМ(КонтрагентУТ),
	             |	МАКСИМУМ(КонтрагентБУ),
	             |	МАКСИМУМ(СуммаНДСУТ),
	             |	МАКСИМУМ(СуммаНДСБУ),
	             |	МАКСИМУМ(ЕстьРасхождение)
	             |ПО
	             |	ПредставлениеДокумента";
	Запрос.УстановитьПараметр("ТаблицаДанныхУТ",ТабУТ);
	Запрос.УстановитьПараметр("ТаблицаДанныхБУ",ТабБУ);
	
	Результат=Запрос.Выполнить();
	
	//Начинаем вывод
	ТабДокумент	=Новый ТабличныйДокумент;
	ТабДок		=Новый ТабличныйДокумент;
	
	Макет=ПолучитьМакет("Макет");
	Область=Макет.ПолучитьОбласть("ШапкаОтчета");
	Область.Параметры.ИнфоОСверке=ИнформацияОСверке;
	ТабДокумент.Вывести(Область);
	ТабДокумент.НачатьАвтогруппировкуСтрок();
	ВыборкаДокументов=Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ОбластьДок=Макет.ПолучитьОбласть("СтрокаДокумент");
	Пока ВыборкаДокументов.Следующий() Цикл
		Если Не ВыборкаДокументов.ЕстьРасхождение И ТолькоРасхождения Тогда
			Продолжить;
		КонецЕсли;
		ОбластьДок.Параметры.ПредставлениеДокумента=ВыборкаДокументов.ПредставлениеДокумента;
		ТабДокумент.Вывести(ОбластьДок,2);
		
		ОбластьДок.Параметры.ПредставлениеДокумента="Шапка";
		ТабДокумент.Вывести(ОбластьДок,3,,Ложь);
		
		
		ТабДок=Новый ТабличныйДокумент;
		ТабДок.НачатьАвтогруппировкуКолонок();
		ОбластьПоказатель=Макет.ПолучитьОбласть("СтрокаПоказатели|КолонкаШапка");
		ТабДок.Присоединить(ОбластьПоказатель);
		ОбластьПоказатель=Макет.ПолучитьОбласть("СтрокаПоказатели|КолонкаПоказатели");
		Для Каждого Эл Из МассивДляШапки Цикл
			ОбластьПоказатель.Параметры.ПоказательШапки=Эл;
			ОбластьПоказатель.Параметры.ПоказательУТ=ВыборкаДокументов[Эл+"УТ"];
			ОбластьПоказатель.Параметры.ПоказательБП=ВыборкаДокументов[Эл+"БУ"];
			ТабДок.Присоединить(ОбластьПоказатель);
		КонецЦикла;
		ТабДок.ЗакончитьАвтогруппировкуКолонок();
		ТабДокумент.Вывести(ТабДок,4,"1. Шапка",Истина);
//-----------------------------------------------------------------------------------------------------------------------		
		
	КонецЦикла;
	ТабДокумент.ЗакончитьАвтогруппировкуСтрок();
	ТабДокумент.ТолькоПросмотр=Истина;
	ТабДокумент.Показать("Счета-фактура выданные");
КонецПроцедуры

Процедура СверкаСчФПолученный()
	//1. Загружаем данные из файла
	ТабБУ = ЗначениеИзФайла(ПутьКФайламТаблиц+"СчетФактураПолученный.tz");
	ТабБУ.Колонки.Добавить("ПредставлениеДокумента",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100)));
	ТабБУ.Колонки.Добавить("КонтрагентСсылка",Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	КолСторок=ТабБУ.Количество();
	Состояние("Подготовка таблицы сч. ф. полученных:",0);
	Для Каждого СтрокаТЧ Из ТабБУ Цикл
		СтрокаТЧ.ПредставлениеДокумента	= "Счет-фактура полученный "+СтрокаТЧ.Номер;//+" от "+Формат(СтрокаТЧ.Дата,"ДЛФ=DT");
		СтрокаТЧ.КонтрагентСсылка=ПолучитьКонтрагента(СтрокаТЧ.Контрагент,СтрокаТЧ.КонтрагентИНН);
		
		СтрокаТЧ.ПредставлениеДокумента	= "Поступление товаров и услуг "+СтрокаТЧ.Номер+" от "+Формат(СтрокаТЧ.Дата,"ДЛФ=DT");
		Состояние("Подготовка таблицы счет-фактура полученные: "+Строка(Окр(100*ТабБУ.Индекс(СтрокаТЧ)/(КолСторок)))+"%");
	КонецЦикла;
	Состояние("");
	//2. Подготавливаем такую же таблицу в УТ
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("НачПериода",НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ВклНепроведенные",ВключатьНепроведенные);
	
	Запрос.Текст="ВЫБРАТЬ
	             |	СчетФактураПолученный.Номер,
	             |	СчетФактураПолученный.Дата,
	             |	СчетФактураПолученный.Проведен,
	             |	СчетФактураПолученный.Контрагент КАК КонтрагентСсылка,
	             |	СчетФактураПолученный.Контрагент.ИНН,
	             |	СчетФактураПолученный.СуммаДокумента,
	             |	СчетФактураПолученный.ДокументОснование.Номер,
	             |	СчетФактураПолученный.ДокументОснование.Дата,
	             |	ПРЕДСТАВЛЕНИЕ(СчетФактураПолученный.Ссылка) КАК ПредставлениеДокумента,
	             |	СчетФактураПолученный.НомерВходящегоДокумента,
	             |	СчетФактураПолученный.ДатаВходящегоДокумента,
	             |	СчетФактураПолученный.СуммаНДСДокумента
	             |ИЗ
	             |	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	             |ГДЕ
	             |	СчетФактураПолученный.Дата МЕЖДУ &НачПериода И &КонПериода
	             |	И СчетФактураПолученный.Организация = &Организация
	             |	И (СчетФактураПолученный.Проведен
	             |			ИЛИ &ВклНепроведенные)";
	ТабУТ = Запрос.Выполнить().Выгрузить();
	//3. Последовательность вывода шапки
	МассивДляШапки=Новый Массив;
	МассивДляШапки.Добавить("Номер");
	МассивДляШапки.Добавить("Дата");
	МассивДляШапки.Добавить("Проведен");
	МассивДляШапки.Добавить("Контрагент");
	МассивДляШапки.Добавить("СуммаДокумента");
	МассивДляШапки.Добавить("СуммаНДСДокумента");
	МассивДляШапки.Добавить("ДокументОснованиеНомер");
	МассивДляШапки.Добавить("ДокументОснованиеДата");
	МассивДляШапки.Добавить("НомерВходящегоДокумента");
	МассивДляШапки.Добавить("ДатаВходящегоДокумента");
	//4. Формируем запрос по данныем
	
	Запрос.Текст="ВЫБРАТЬ
	             |	ТаблицаДанных.Номер КАК Номер,
	             |	ТаблицаДанных.Дата КАК Дата,
	             |	ТаблицаДанных.ДокументОснованиеНомер КАК ДокументОснованиеНомер,
	             |	ТаблицаДанных.ДокументОснованиеДата КАК ДокументОснованиеДата,
	             |	ВЫРАЗИТЬ(""Счет-фактура полученный ""+ТаблицаДанных.Номер КАК СТРОКА(100)) КАК Ссылка,
	             |	ТаблицаДанных.Проведен КАК Проведен,
	             |	ТаблицаДанных.СуммаДокумента КАК СуммаДокумента,
	             |	ТаблицаДанных.КонтрагентСсылка КАК Контрагент,
	             |	ТаблицаДанных.СуммаНДСДокумента КАК СуммаНДСДокумента,
	             |	ТаблицаДанных.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	             |	ТаблицаДанных.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента
	             |ПОМЕСТИТЬ ДанныеУТ
	             |ИЗ
	             |	&ТаблицаДанныхУТ КАК ТаблицаДанных
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ТаблицаДанных.Номер КАК Номер,
	             |	ТаблицаДанных.Дата КАК Дата,
	             |	ТаблицаДанных.ДокументОснованиеНомер КАК ДокументОснованиеНомер,
	             |	ТаблицаДанных.ДокументОснованиеДата КАК ДокументОснованиеДата,
	             |	ВЫРАЗИТЬ(ТаблицаДанных.ПредставлениеДокумента КАК СТРОКА(100)) КАК Ссылка,
	             |	ТаблицаДанных.Проведен КАК Проведен,
	             |	ТаблицаДанных.СуммаДокумента КАК СуммаДокумента,
	             |	ТаблицаДанных.КонтрагентСсылка КАК Контрагент,
	             |	ТаблицаДанных.СуммаНДСДокумента КАК СуммаНДСДокумента,
	             |	ТаблицаДанных.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	             |	ТаблицаДанных.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента
	             |ПОМЕСТИТЬ ДанныеБУ
	             |ИЗ
	             |	&ТаблицаДанныхБУ КАК ТаблицаДанных
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеУТ.Ссылка, ДанныеБУ.Ссылка) КАК СТРОКА(100)) КАК ПредставлениеДокумента,
	             |	ДанныеУТ.Номер КАК НомерУТ,
	             |	ДанныеБУ.Номер КАК НомерБУ,
	             |	ДанныеУТ.Дата КАК ДатаУТ,
	             |	ДанныеБУ.Дата КАК ДатаБУ,
	             |	ДанныеУТ.ДокументОснованиеНомер КАК ДокументОснованиеНомерУТ,
	             |	ДанныеУТ.ДокументОснованиеДата КАК ДокументОснованиеДатаУТ,
	             |	ДанныеБУ.ДокументОснованиеНомер КАК ДокументОснованиеНомерБУ,
	             |	ДанныеБУ.ДокументОснованиеДата КАК ДокументОснованиеДатаБУ,
	             |	ДанныеУТ.Проведен КАК ПроведенУТ,
	             |	ДанныеБУ.Проведен КАК ПроведенБУ,
	             |	ДанныеУТ.СуммаДокумента КАК СуммаДокументаУТ,
	             |	ДанныеБУ.СуммаДокумента КАК СуммаДокументаБУ,
	             |	ДанныеУТ.Контрагент КАК КонтрагентУТ,
	             |	ДанныеБУ.Контрагент КАК КонтрагентБУ,
	             |	ДанныеУТ.СуммаНДСДокумента КАК СуммаНДСДокументаУТ,
	             |	ДанныеБУ.СуммаНДСДокумента КАК СуммаНДСДокументаБУ,
	             |	ДанныеУТ.НомерВходящегоДокумента КАК НомерВходящегоДокументаУТ,
	             |	ДанныеБУ.НомерВходящегоДокумента КАК НомерВходящегоДокументаБУ,
	             |	ДанныеУТ.ДатаВходящегоДокумента КАК ДатаВходящегоДокументаУТ,
	             |	ДанныеБУ.ДатаВходящегоДокумента КАК ДатаВходящегоДокументаБУ,
	             |	ВЫБОР
	             |		КОГДА ДанныеУТ.Номер = ДанныеБУ.Номер
	             |				И НачалоПериода(ДанныеУТ.Дата,ДЕНЬ) = НачалоПериода(ДанныеБУ.Дата,ДЕНЬ)
	             |				И ДанныеУТ.Проведен = ДанныеБУ.Проведен
	             |				И ДанныеУТ.СуммаДокумента = ДанныеБУ.СуммаДокумента
	             |				И ДанныеУТ.Контрагент = ДанныеБУ.Контрагент
	             |				И ДанныеУТ.СуммаНДСДокумента = ДанныеБУ.СуммаНДСДокумента
	             |				И ДанныеУТ.ДокументОснованиеНомер = ДанныеБУ.ДокументОснованиеНомер
	             |				И ДанныеУТ.ДокументОснованиеДата = ДанныеБУ.ДокументОснованиеДата
	             |				И ДанныеУТ.НомерВходящегоДокумента = ДанныеБУ.НомерВходящегоДокумента
	             |				И ДанныеУТ.ДатаВходящегоДокумента = ДанныеБУ.ДатаВходящегоДокумента
	             |			ТОГДА ЛОЖЬ
	             |		ИНАЧЕ ИСТИНА
	             |	КОНЕЦ КАК ЕстьРасхождение
	             |ИЗ
	             |	ДанныеУТ КАК ДанныеУТ
	             |		ПОЛНОЕ СОЕДИНЕНИЕ ДанныеБУ КАК ДанныеБУ
	             |		ПО ДанныеУТ.Номер = ДанныеБУ.Номер
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ПредставлениеДокумента
	             |ИТОГИ
	             |	МАКСИМУМ(НомерУТ),
	             |	МАКСИМУМ(НомерБУ),
	             |	МАКСИМУМ(ДатаУТ),
	             |	МАКСИМУМ(ДатаБУ),
	             |	МАКСИМУМ(ДокументОснованиеНомерУТ),
	             |	МАКСИМУМ(ДокументОснованиеДатаУТ),
	             |	МАКСИМУМ(ДокументОснованиеНомерБУ),
	             |	МАКСИМУМ(ДокументОснованиеДатаБУ),
	             |	МАКСИМУМ(ПроведенУТ),
	             |	МАКСИМУМ(ПроведенБУ),
	             |	МАКСИМУМ(СуммаДокументаУТ),
	             |	МАКСИМУМ(СуммаДокументаБУ),
	             |	МАКСИМУМ(КонтрагентУТ),
	             |	МАКСИМУМ(КонтрагентБУ),
	             |	МАКСИМУМ(СуммаНДСДокументаУТ),
	             |	МАКСИМУМ(СуммаНДСДокументаБУ),
	             |	МАКСИМУМ(ЕстьРасхождение)
	             |ПО
	             |	ПредставлениеДокумента";
	Запрос.УстановитьПараметр("ТаблицаДанныхУТ",ТабУТ);
	Запрос.УстановитьПараметр("ТаблицаДанныхБУ",ТабБУ);
	
	Результат=Запрос.Выполнить();
	
	//Начинаем вывод
	ТабДокумент	=Новый ТабличныйДокумент;
	ТабДок		=Новый ТабличныйДокумент;
	
	Макет=ПолучитьМакет("Макет");
	Область=Макет.ПолучитьОбласть("ШапкаОтчета");
	Область.Параметры.ИнфоОСверке=ИнформацияОСверке;
	ТабДокумент.Вывести(Область);
	ТабДокумент.НачатьАвтогруппировкуСтрок();
	ВыборкаДокументов=Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ОбластьДок=Макет.ПолучитьОбласть("СтрокаДокумент");
	Пока ВыборкаДокументов.Следующий() Цикл
		Если Не ВыборкаДокументов.ЕстьРасхождение И ТолькоРасхождения Тогда
			Продолжить;
		КонецЕсли;
		ОбластьДок.Параметры.ПредставлениеДокумента=ВыборкаДокументов.ПредставлениеДокумента;
		ТабДокумент.Вывести(ОбластьДок,2);
		
		ОбластьДок.Параметры.ПредставлениеДокумента="Шапка";
		ТабДокумент.Вывести(ОбластьДок,3,,Ложь);
		
		
		ТабДок=Новый ТабличныйДокумент;
		ТабДок.НачатьАвтогруппировкуКолонок();
		ОбластьПоказатель=Макет.ПолучитьОбласть("СтрокаПоказатели|КолонкаШапка");
		ТабДок.Присоединить(ОбластьПоказатель);
		ОбластьПоказатель=Макет.ПолучитьОбласть("СтрокаПоказатели|КолонкаПоказатели");
		Для Каждого Эл Из МассивДляШапки Цикл
			ОбластьПоказатель.Параметры.ПоказательШапки=Эл;
			ОбластьПоказатель.Параметры.ПоказательУТ=ВыборкаДокументов[Эл+"УТ"];
			ОбластьПоказатель.Параметры.ПоказательБП=ВыборкаДокументов[Эл+"БУ"];
			Если ВыборкаДокументов[Эл+"УТ"]<>ВыборкаДокументов[Эл+"БУ"] Тогда 
				а=1;
			КонецЕсли;
			ТабДок.Присоединить(ОбластьПоказатель);
		КонецЦикла;
		ТабДок.ЗакончитьАвтогруппировкуКолонок();
		ТабДокумент.Вывести(ТабДок,4,"1. Шапка",Истина);
//-----------------------------------------------------------------------------------------------------------------------		
		
	КонецЦикла;
	ТабДокумент.ЗакончитьАвтогруппировкуСтрок();
	ТабДокумент.ТолькоПросмотр=Истина;
	ТабДокумент.Показать("Счета-фактура полученные");
КонецПроцедуры


//Процедуры обратной сверки

Процедура СверкаРеализацийОбратная()
	//1. Загружаем данные из файла
	ТабБУ = ЗначениеИзФайла(ПутьКФайламТаблиц+"РеализацияТоваровУслуг.tz");
	ТабБУ.Колонки.Добавить("ПредставлениеДокумента",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100)));
	ТабБУ.Колонки.Добавить("КонтрагентСсылка",Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТабБУ.Колонки.Добавить("ГрузополучательСсылка",Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТабБУ.Колонки.Добавить("НоменклатураСсылка",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	КолСторок=ТабБУ.Количество();
	Состояние("Подготовка таблицы реализаций:",0);
	Для Каждого СтрокаТЧ Из ТабБУ Цикл
		СтрокаТЧ.ПредставлениеДокумента	= "Реализация товаров и услуг "+СтрокаТЧ.Номер;//+" от "+Формат(СтрокаТЧ.Дата,"ДЛФ=DT");
		СтрокаТЧ.КонтрагентСсылка=ПолучитьКонтрагента(СтрокаТЧ.Контрагент,СтрокаТЧ.КонтрагентИНН);
		СтрокаТЧ.ГрузополучательСсылка=ПолучитьКонтрагента(СтрокаТЧ.Грузополучатель,СтрокаТЧ.ГрузополучательИНН);
		
		СтрокаТЧ.НоменклатураСсылка		= Справочники.Номенклатура.НайтиПоНаименованию(СтрокаТЧ.Номенклатура);
		СтрокаТЧ.ПредставлениеДокумента	= "Реализация товаров и услуг "+СтрокаТЧ.Номер+" от "+Формат(СтрокаТЧ.Дата,"ДЛФ=DT");
		
		
		Состояние("Подготовка таблицы реализаций: "+Строка(Окр(100*ТабБУ.Индекс(СтрокаТЧ)/(КолСторок)))+"%");
	КонецЦикла;
	ТабБУ.Колонки.Добавить("ФлагСверки",Новый ОписаниеТипов("Число"));
	//А ТЕПЕРЬ!!! Соберем ключи
	Состояние("Расчет ключей для сверки");
	ТабБУ.Сортировать("ПредставлениеДокумента,Номенклатура");
	СтрокаФлаг="";
	СчФлагов=0; //переменная отвечает за нумерацию
	СоотвФлагов=Новый Массив; //хранилище флагов: Номенклатура+Количество
	СтруктураФлага=""; //набор полей Номенклатура Количество
	МассивСтрок=Новый Массив; //это для проставления флага
	Для Каждого СтрокаТЧ Из ТабБУ Цикл
		Если СтрокаТЧ.ПредставлениеДокумента<>СтрокаФлаг Тогда
			//Надо что-то делать...
			Если СтрокаФлаг="" Тогда
				//Только если стока не пустая. Тогда это начало работы
				СтрокаФлаг=СтрокаТЧ.ПредставлениеДокумента;
			Иначе
				ЗначФлага=СоотвФлагов.Найти(СтруктураФлага);
				Если ЗначФлага=Неопределено Тогда
					//Это новый флаг
					СоотвФлагов.Добавить(СтруктураФлага);
					Для Каждого Эл Из МассивСтрок Цикл
						Эл.ФлагСверки=СчФлагов;
					КонецЦикла;
					СчФлагов=СчФлагов+1;
				Иначе
					Для Каждого Эл Из МассивСтрок Цикл
						Эл.ФлагСверки=ЗначФлага;
					КонецЦикла;
				КонецЕсли;
				МассивСтрок.Очистить();
				СтруктураФлага=""; //набор полей Номенклатура Количество
				СтрокаФлаг=СтрокаТЧ.ПредставлениеДокумента;
			КонецЕсли;
		КонецЕсли;
		СтруктураФлага=СтруктураФлага+Строка(СтрокаТЧ.Номенклатура)+" "+Формат(СтрокаТЧ.Количество,"ЧЦ=15; ЧДЦ=3; ЧН=; ЧГ=")+"; ";
		МассивСтрок.Добавить(СтрокаТЧ);
	КонецЦикла;
	//Обработываем последний набор
	ЗначФлага=СоотвФлагов.Найти(СтруктураФлага);
	Если ЗначФлага=Неопределено Тогда
		//Это новый флаг
		СоотвФлагов.Добавить(СтруктураФлага);
		Для Каждого Эл Из МассивСтрок Цикл
			Эл.ФлагСверки=СчФлагов;
		КонецЦикла;
		СчФлагов=СчФлагов+1;
	Иначе
		Для Каждого Эл Из МассивСтрок Цикл
			Эл.ФлагСверки=ЗначФлага;
		КонецЦикла;
	КонецЕсли;
	МассивСтрок.Очистить();
	СтруктураФлага=Новый Соответствие; //набор полей Номенклатура Количество
	СтрокаФлаг=СтрокаТЧ.ПредставлениеДокумента;
	Состояние("");
	//2. Подготавливаем такую же таблицу в УТ
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("НачПериода",НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ВклНепроведенные",ВключатьНепроведенные);
	Запрос.УстановитьПараметр("ВидДоговора",Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);
	
	Запрос.Текст="ВЫБРАТЬ
	             |	РеализацияТоваровУслуг.Номер КАК Номер,
	             |	РеализацияТоваровУслуг.Дата КАК Дата,
	             |	ПРЕДСТАВЛЕНИЕ(РеализацияТоваровУслуг.Ссылка) КАК ПредставлениеДокумента,
	             |	РеализацияТоваровУслуг.Проведен КАК Проведен,
	             |	РеализацияТоваровУслуг.СуммаДокумента КАК СуммаДокумента,
	             |	РеализацияТоваровУслуг.Контрагент.Наименование КАК Контрагент,
	             |	РеализацияТоваровУслуг.Контрагент.Ссылка КАК КонтрагентСсылка,
	             |	РеализацияТоваровУслуг.Грузополучатель.Ссылка КАК ГрузополучательСсылка,
	             |	РеализацияТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	             |	РеализацияТоваровУслуг.УчитыватьНДС КАК УчитыватьНДС,
	             |	РеализацияТоваровУслугТовары.Номенклатура.Ссылка КАК НоменклатураСсылка,
	             |	ПРЕДСТАВЛЕНИЕ(РеализацияТоваровУслугТовары.Номенклатура) КАК Номенклатура,
	             |	СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество,
	             |	СУММА(РеализацияТоваровУслугТовары.Сумма) КАК Сумма,
	             |	СУММА(РеализацияТоваровУслугТовары.СуммаНДС) КАК СуммаНДС,
	             |	ПРЕДСТАВЛЕНИЕ(РеализацияТоваровУслугТовары.СтавкаНДС) КАК СтавкаНДС,
	             |	ВЫБОР
	             |		КОГДА РеализацияТоваровУслуг.ДоговорКонтрагента.ВидДоговора = &ВидДоговора
	             |			ТОГДА ИСТИНА
	             |		ИНАЧЕ ЛОЖЬ
	             |	КОНЕЦ КАК Аренда
	             |ИЗ
	             |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	             |		ПО РеализацияТоваровУслугТовары.Ссылка = РеализацияТоваровУслуг.Ссылка
	             |ГДЕ
	             |	РеализацияТоваровУслуг.Дата МЕЖДУ &НачПериода И &КонПериода
	             |	И РеализацияТоваровУслуг.Организация = &Организация
	             |	И (&ВклНепроведенные
	             |			ИЛИ РеализацияТоваровУслуг.Проведен)
	             |	И РеализацияТоваровУслуг.ОтражатьВБухгалтерскомУчете
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	РеализацияТоваровУслуг.Номер,
	             |	РеализацияТоваровУслуг.Проведен,
	             |	РеализацияТоваровУслуг.Дата,
	             |	РеализацияТоваровУслуг.Контрагент.Ссылка,
	             |	РеализацияТоваровУслуг.Грузополучатель.Ссылка,
	             |	РеализацияТоваровУслуг.СуммаВключаетНДС,
	             |	РеализацияТоваровУслуг.УчитыватьНДС,
	             |	РеализацияТоваровУслугТовары.Номенклатура.Ссылка,
	             |	РеализацияТоваровУслуг.СуммаДокумента,
	             |	РеализацияТоваровУслуг.Контрагент.Наименование,
	             |	ПРЕДСТАВЛЕНИЕ(РеализацияТоваровУслуг.Ссылка),
	             |	ПРЕДСТАВЛЕНИЕ(РеализацияТоваровУслугТовары.Номенклатура),
	             |	ПРЕДСТАВЛЕНИЕ(РеализацияТоваровУслугТовары.СтавкаНДС),
	             |	ВЫБОР
	             |		КОГДА РеализацияТоваровУслуг.ДоговорКонтрагента.ВидДоговора = &ВидДоговора
	             |			ТОГДА ИСТИНА
	             |		ИНАЧЕ ЛОЖЬ
	             |	КОНЕЦ";
	ТабУТ = Запрос.Выполнить().Выгрузить();
	ТабУТ.Колонки.Добавить("ФлагСверки",Новый ОписаниеТипов("Число"));
	//А ТЕПЕРЬ!!! Соберем ключи
	Состояние("Расчет ключей для сверки");
	ТабУТ.Сортировать("ПредставлениеДокумента,Номенклатура");
	СтрокаФлаг="";
	//СоотвФлагов=Новый Соответствие; //хранилище флагов: Номенклатура+Количество
	СтруктураФлага=""; //набор полей Номенклатура Количество
	МассивСтрок=Новый Массив; //это для проставления флага
	Для Каждого СтрокаТЧ Из ТабУТ Цикл
		Если СтрокаТЧ.ПредставлениеДокумента<>СтрокаФлаг Тогда
			//Надо что-то делать...
			Если СтрокаФлаг="" Тогда
				//Только если стока не пустая. Тогда это начало работы
				СтрокаФлаг=СтрокаТЧ.ПредставлениеДокумента;
			Иначе
				ЗначФлага=СоотвФлагов.Найти(СтруктураФлага);
				Если ЗначФлага=Неопределено Тогда
					//Это новый флаг
					СоотвФлагов.Добавить(СтруктураФлага);
					Для Каждого Эл Из МассивСтрок Цикл
						Эл.ФлагСверки=СчФлагов;
					КонецЦикла;
					СчФлагов=СчФлагов+1;
				Иначе
					Для Каждого Эл Из МассивСтрок Цикл
						Эл.ФлагСверки=ЗначФлага;
					КонецЦикла;
				КонецЕсли;
				МассивСтрок.Очистить();
				СтруктураФлага=""; //набор полей Номенклатура Количество
				СтрокаФлаг=СтрокаТЧ.ПредставлениеДокумента;
			КонецЕсли;
		КонецЕсли;
		СтруктураФлага=СтруктураФлага+Строка(СтрокаТЧ.Номенклатура)+" "+Формат(СтрокаТЧ.Количество,"ЧЦ=15; ЧДЦ=3; ЧН=; ЧГ=")+"; ";
		МассивСтрок.Добавить(СтрокаТЧ);
	КонецЦикла;
	//Обрабатываем последние данные
	ЗначФлага=СоотвФлагов.Найти(СтруктураФлага);
	Если ЗначФлага=Неопределено Тогда
		//Это новый флаг
		СоотвФлагов.Добавить(СтруктураФлага);
		Для Каждого Эл Из МассивСтрок Цикл
			Эл.ФлагСверки=СчФлагов;
		КонецЦикла;
		СчФлагов=СчФлагов+1;
	Иначе
		Для Каждого Эл Из МассивСтрок Цикл
			Эл.ФлагСверки=ЗначФлага;
		КонецЦикла;
	КонецЕсли;
	Состояние("");
	//3. Последовательность вывода шапки
	МассивДляШапки=Новый Массив;
	МассивДляШапки.Добавить("Номер");
	МассивДляШапки.Добавить("Дата");
	МассивДляШапки.Добавить("Проведен");
	МассивДляШапки.Добавить("Контрагент");
	МассивДляШапки.Добавить("Грузополучатель");
	МассивДляШапки.Добавить("СуммаДокумента");
	
	//4. Формируем запрос по данныем
	
	Запрос.Текст="ВЫБРАТЬ
	             |	ТаблицаДанных.Номер КАК Номер,
	             |	ТаблицаДанных.Дата КАК Дата,
	             |	ВЫРАЗИТЬ(""Реализация товаров и услуг ""+ТаблицаДанных.Номер КАК СТРОКА(100)) КАК Ссылка,
	             |	ТаблицаДанных.Проведен КАК Проведен,
	             |	ТаблицаДанных.СуммаДокумента КАК СуммаДокумента,
	             |	ТаблицаДанных.КонтрагентСсылка КАК Контрагент,
	             |	ЕСТЬNULL(ТаблицаДанных.ГрузополучательСсылка, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Грузополучатель,
	             |	ТаблицаДанных.ФлагСверки КАК ФлагСверки
	             |ПОМЕСТИТЬ ДанныеУТ
	             |ИЗ
	             |	&ТаблицаДанныхУТ КАК ТаблицаДанных
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ТаблицаДанных.Номер КАК Номер,
	             |	ТаблицаДанных.Дата КАК Дата,
	             |	ВЫРАЗИТЬ(ТаблицаДанных.ПредставлениеДокумента КАК СТРОКА(100)) КАК Ссылка,
	             |	ТаблицаДанных.Проведен КАК Проведен,
	             |	ТаблицаДанных.СуммаДокумента КАК СуммаДокумента,
	             |	ТаблицаДанных.КонтрагентСсылка КАК Контрагент,
	             |	ТаблицаДанных.ГрузополучательСсылка КАК Грузополучатель,
	             |	ТаблицаДанных.ФлагСверки КАК ФлагСверки
	             |ПОМЕСТИТЬ ДанныеБУ
	             |ИЗ
	             |	&ТаблицаДанныхБУ КАК ТаблицаДанных
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеУТ.Ссылка, ДанныеБУ.Ссылка) КАК СТРОКА(100)) КАК ПредставлениеДокумента,
	             |	ДанныеУТ.Номер КАК НомерУТ,
	             |	ДанныеБУ.Номер КАК НомерБУ,
	             |	ДанныеУТ.Дата КАК ДатаУТ,
	             |	ДанныеБУ.Дата КАК ДатаБУ,
	             |	ДанныеУТ.Проведен КАК ПроведенУТ,
	             |	ДанныеБУ.Проведен КАК ПроведенБУ,
	             |	ДанныеУТ.СуммаДокумента КАК СуммаДокументаУТ,
	             |	ДанныеБУ.СуммаДокумента КАК СуммаДокументаБУ,
	             |	ДанныеУТ.Контрагент КАК КонтрагентУТ,
	             |	ДанныеБУ.Контрагент КАК КонтрагентБУ,
	             |	ДанныеУТ.Грузополучатель КАК ГрузополучательУТ,
	             |	ДанныеБУ.Грузополучатель КАК ГрузополучательБУ,
	             |	ВЫБОР
	             |		КОГДА ДанныеУТ.Номер = ДанныеБУ.Номер
	             |				И НачалоПериода(ДанныеУТ.Дата,ДЕНЬ) = НачалоПериода(ДанныеБУ.Дата,ДЕНЬ)
	             |				И ДанныеУТ.Проведен = ДанныеБУ.Проведен
	             |				И ДанныеУТ.СуммаДокумента = ДанныеБУ.СуммаДокумента
	             |				И ДанныеУТ.Контрагент = ДанныеБУ.Контрагент
	             |				И ДанныеУТ.Грузополучатель = ДанныеБУ.Грузополучатель
	             |			ТОГДА ЛОЖЬ
	             |		ИНАЧЕ ИСТИНА
	             |	КОНЕЦ КАК ЕстьРасхождение,
	             |	ЕСТЬNULL(ДанныеУТ.ФлагСверки, ДанныеБУ.ФлагСверки) КАК ФлагСверки
	             |ИЗ
	             |	ДанныеУТ КАК ДанныеУТ
	             |		ПОЛНОЕ СОЕДИНЕНИЕ ДанныеБУ КАК ДанныеБУ
	             |		ПО ДанныеУТ.ФлагСверки = ДанныеБУ.ФлагСверки
	             |			И ДанныеУТ.Номер = ДанныеБУ.Номер
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ФлагСверки,
	             |	ПредставлениеДокумента
	             |ИТОГИ
	             |	МАКСИМУМ(НомерУТ),
	             |	МАКСИМУМ(НомерБУ),
	             |	МАКСИМУМ(ДатаУТ),
	             |	МАКСИМУМ(ДатаБУ),
	             |	МАКСИМУМ(ПроведенУТ),
	             |	МАКСИМУМ(ПроведенБУ),
	             |	МАКСИМУМ(СуммаДокументаУТ),
	             |	МАКСИМУМ(СуммаДокументаБУ),
	             |	МАКСИМУМ(КонтрагентУТ),
	             |	МАКСИМУМ(КонтрагентБУ),
	             |	МАКСИМУМ(ГрузополучательУТ),
	             |	МАКСИМУМ(ГрузополучательБУ),
	             |	МАКСИМУМ(ЕстьРасхождение)
	             |ПО
	             |	ФлагСверки,
	             |	ПредставлениеДокумента";
	Запрос.УстановитьПараметр("ТаблицаДанныхУТ",ТабУТ);
	Запрос.УстановитьПараметр("ТаблицаДанныхБУ",ТабБУ);
	
	Результат=Запрос.Выполнить();
	
	//Начинаем вывод
	ТабДокумент	=Новый ТабличныйДокумент;
	ТабДок		=Новый ТабличныйДокумент;
	
	Макет=ПолучитьМакет("Макет");
	Область=Макет.ПолучитьОбласть("ШапкаОтчета");
	Область.Параметры.ИнфоОСверке=ИнформацияОСверке;
	ТабДокумент.Вывести(Область);
	ТабДокумент.НачатьАвтогруппировкуСтрок();
	ВыборкаСверок=Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ОбластьДок=Макет.ПолучитьОбласть("СтрокаДокумент");
	Пока ВыборкаСверок.Следующий() Цикл
		Если Не ВыборкаСверок.ЕстьРасхождение И ТолькоРасхождения Тогда
			Продолжить;
		КонецЕсли;
		ОбластьДок.Параметры.ПредставлениеДокумента=Строка(ВыборкаСверок.ФлагСверки+1);
		ОбластьДок.Параметры.ТабличнаяЧасть=СоотвФлагов[ВыборкаСверок.ФлагСверки];
		ВыборкаДокументов=ВыборкаСверок.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ТабДокумент.Вывести(ОбластьДок,1,,Ложь);
		ОбластьДок=Макет.ПолучитьОбласть("СтрокаДокумент");
		ВыборкаДокументов=ВыборкаСверок.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДокументов.Следующий() Цикл
			Если Не ВыборкаДокументов.ЕстьРасхождение И ТолькоРасхождения Тогда
				Продолжить;
			КонецЕсли;
			ОбластьДок.Параметры.ПредставлениеДокумента=ВыборкаДокументов.ПредставлениеДокумента;
			ТабДокумент.Вывести(ОбластьДок,2);
			
			ОбластьДок.Параметры.ПредставлениеДокумента="Шапка";
			ТабДокумент.Вывести(ОбластьДок,3,,Ложь);
			
			
			ТабДок=Новый ТабличныйДокумент;
			ТабДок.НачатьАвтогруппировкуКолонок();
			ОбластьПоказатель=Макет.ПолучитьОбласть("СтрокаПоказатели|КолонкаШапка");
			ТабДок.Присоединить(ОбластьПоказатель);
			ОбластьПоказатель=Макет.ПолучитьОбласть("СтрокаПоказатели|КолонкаПоказатели");
			Для Каждого Эл Из МассивДляШапки Цикл
				ОбластьПоказатель.Параметры.ПоказательШапки=Эл;
				ОбластьПоказатель.Параметры.ПоказательУТ=ВыборкаДокументов[Эл+"УТ"];
				ОбластьПоказатель.Параметры.ПоказательБП=ВыборкаДокументов[Эл+"БУ"];
				ТабДок.Присоединить(ОбластьПоказатель);
			КонецЦикла;
			ТабДок.ЗакончитьАвтогруппировкуКолонок();
			ТабДокумент.Вывести(ТабДок,4,"1. Шапка",Истина);
		КонецЦикла;
	КонецЦикла;
	ТабДокумент.ЗакончитьАвтогруппировкуСтрок();
	ТабДокумент.ТолькоПросмотр=Истина;
	ТабДокумент.Показать("Реализации");
КонецПроцедуры

Процедура СверкаПоступленийОбратная()
	//1. Загружаем данные из файла
	ТабБУ = ЗначениеИзФайла(ПутьКФайламТаблиц+"ПоступлениеТоваровУслуг.tz");
	ТабБУ.Колонки.Добавить("ПредставлениеДокумента",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100)));
	ТабБУ.Колонки.Добавить("КонтрагентСсылка",Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТабБУ.Колонки.Добавить("ГрузоотправительСсылка",Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТабБУ.Колонки.Добавить("НоменклатураСсылка",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	КолСторок=ТабБУ.Количество();
	Состояние("Подготовка таблицы поступлений:",0);
	Для Каждого СтрокаТЧ Из ТабБУ Цикл
		СтрокаТЧ.ПредставлениеДокумента	= "Поступление товаров и услуг "+СтрокаТЧ.Номер;//+" от "+Формат(СтрокаТЧ.Дата,"ДЛФ=DT");
		СтрокаТЧ.КонтрагентСсылка=ПолучитьКонтрагента(СтрокаТЧ.Контрагент,СтрокаТЧ.КонтрагентИНН);
		СтрокаТЧ.Грузоотправитель=ПолучитьКонтрагента(СтрокаТЧ.Грузоотправитель,СтрокаТЧ.ГрузоотправительИНН);
		
		СтрокаТЧ.НоменклатураСсылка		= Справочники.Номенклатура.НайтиПоНаименованию(СтрокаТЧ.Номенклатура);
		СтрокаТЧ.ПредставлениеДокумента	= "Поступление товаров и услуг "+СтрокаТЧ.Номер+" от "+Формат(СтрокаТЧ.Дата,"ДЛФ=DT");
		
		
		Состояние("Подготовка таблицы поступлений: "+Строка(Окр(100*ТабБУ.Индекс(СтрокаТЧ)/(КолСторок)))+"%");
	КонецЦикла;
	ТабБУ.Колонки.Добавить("ФлагСверки",Новый ОписаниеТипов("Число"));
	//А ТЕПЕРЬ!!! Соберем ключи
	Состояние("Расчет ключей для сверки");
	ТабБУ.Сортировать("ПредставлениеДокумента,Номенклатура");
	СтрокаФлаг="";
	СчФлагов=0; //переменная отвечает за нумерацию
	СоотвФлагов=Новый Массив; //хранилище флагов: Номенклатура+Количество
	СтруктураФлага=""; //набор полей Номенклатура Количество
	МассивСтрок=Новый Массив; //это для проставления флага
	Для Каждого СтрокаТЧ Из ТабБУ Цикл
		Если СтрокаТЧ.ПредставлениеДокумента<>СтрокаФлаг Тогда
			//Надо что-то делать...
			Если СтрокаФлаг="" Тогда
				//Только если стока не пустая. Тогда это начало работы
				СтрокаФлаг=СтрокаТЧ.ПредставлениеДокумента;
			Иначе
				ЗначФлага=СоотвФлагов.Найти(СтруктураФлага);
				Если ЗначФлага=Неопределено Тогда
					//Это новый флаг
					СоотвФлагов.Добавить(СтруктураФлага);
					Для Каждого Эл Из МассивСтрок Цикл
						Эл.ФлагСверки=СчФлагов;
					КонецЦикла;
					СчФлагов=СчФлагов+1;
				Иначе
					Для Каждого Эл Из МассивСтрок Цикл
						Эл.ФлагСверки=ЗначФлага;
					КонецЦикла;
				КонецЕсли;
				МассивСтрок.Очистить();
				СтруктураФлага=""; //набор полей Номенклатура Количество
				СтрокаФлаг=СтрокаТЧ.ПредставлениеДокумента;
			КонецЕсли;
		КонецЕсли;
		СтруктураФлага=СтруктураФлага+Строка(СтрокаТЧ.Номенклатура)+" "+Формат(СтрокаТЧ.Количество,"ЧЦ=15; ЧДЦ=3; ЧН=; ЧГ=")+"; ";
		МассивСтрок.Добавить(СтрокаТЧ);
	КонецЦикла;
	//Обработываем последний набоор
	ЗначФлага=СоотвФлагов.Найти(СтруктураФлага);
	Если ЗначФлага=Неопределено Тогда
		//Это новый флаг
		СоотвФлагов.Добавить(СтруктураФлага);
		Для Каждого Эл Из МассивСтрок Цикл
			Эл.ФлагСверки=СчФлагов;
		КонецЦикла;
		СчФлагов=СчФлагов+1;
	Иначе
		Для Каждого Эл Из МассивСтрок Цикл
			Эл.ФлагСверки=ЗначФлага;
		КонецЦикла;
	КонецЕсли;
	МассивСтрок.Очистить();
	СтруктураФлага=Новый Соответствие; //набор полей Номенклатура Количество
	СтрокаФлаг=СтрокаТЧ.ПредставлениеДокумента;
	Состояние("");
	//2. Подготавливаем такую же таблицу в УТ
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("НачПериода",НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ВклНепроведенные",ВключатьНепроведенные);
	
	Запрос.Текст="ВЫБРАТЬ
	             |	ПоступлениеТоваровУслуг.Номер КАК Номер,
	             |	ПоступлениеТоваровУслуг.ДатаВходящегоДокумента КАК Дата,
	             |	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровУслуг.Ссылка) КАК ПредставлениеДокумента,
	             |	ПоступлениеТоваровУслуг.Проведен КАК Проведен,
	             |	ПоступлениеТоваровУслуг.СуммаДокумента КАК СуммаДокумента,
	             |	ПоступлениеТоваровУслуг.Контрагент.Наименование КАК Контрагент,
	             |	ПоступлениеТоваровУслуг.Контрагент.Ссылка КАК КонтрагентСсылка,
				 |	ПоступлениеТоваровУслуг.Грузоотправитель.Ссылка КАК ГрузоотправительСсылка,
	             |	ПоступлениеТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	             |	ПоступлениеТоваровУслуг.УчитыватьНДС КАК УчитыватьНДС,
	             |	ПоступлениеТоваровУслугТовары.Номенклатура.Ссылка КАК Номенклатура,
	             |	СУММА(ПоступлениеТоваровУслугТовары.Количество) КАК Количество,
	             |	СУММА(ПоступлениеТоваровУслугТовары.Сумма) КАК Сумма,
	             |	СУММА(ПоступлениеТоваровУслугТовары.СуммаНДС) КАК СуммаНДС,
	             |	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровУслугТовары.СтавкаНДС) КАК СтавкаНДС,
	             |	ПоступлениеТоваровУслуг.НомерВходящегоДокумента,
	             |	ПоступлениеТоваровУслуг.ДатаВходящегоДокумента
	             |ИЗ
	             |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	             |		ПО ПоступлениеТоваровУслугТовары.Ссылка = ПоступлениеТоваровУслуг.Ссылка
	             |ГДЕ
	             |	ПоступлениеТоваровУслуг.Дата МЕЖДУ &НачПериода И &КонПериода
	             |	И ПоступлениеТоваровУслуг.Организация = &Организация
	             |	И (&ВклНепроведенные
	             |			ИЛИ ПоступлениеТоваровУслуг.Проведен)
	             |	И ПоступлениеТоваровУслуг.ОтражатьВБухгалтерскомУчете
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПоступлениеТоваровУслуг.Номер,
	             |	ПоступлениеТоваровУслуг.Проведен,
	             |	ПоступлениеТоваровУслуг.Дата,
	             |	ПоступлениеТоваровУслуг.Контрагент.Ссылка,
	             |	ПоступлениеТоваровУслуг.Грузоотправитель.Ссылка,
	             |	ПоступлениеТоваровУслуг.СуммаВключаетНДС,
	             |	ПоступлениеТоваровУслуг.УчитыватьНДС,
	             |	ПоступлениеТоваровУслугТовары.Номенклатура.Ссылка,
	             |	ПоступлениеТоваровУслуг.СуммаДокумента,
	             |	ПоступлениеТоваровУслуг.Контрагент.Наименование,
	             |	ПоступлениеТоваровУслуг.НомерВходящегоДокумента,
	             |	ПоступлениеТоваровУслуг.ДатаВходящегоДокумента,
	             |	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровУслуг.Ссылка),
	             |	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровУслугТовары.СтавкаНДС)";
	ТабУТ = Запрос.Выполнить().Выгрузить();
	ТабУТ.Колонки.Добавить("ФлагСверки",Новый ОписаниеТипов("Число"));
	//А ТЕПЕРЬ!!! Соберем ключи
	Состояние("Расчет ключей для сверки");
	ТабУТ.Сортировать("ПредставлениеДокумента,Номенклатура");
	СтрокаФлаг="";
	//СоотвФлагов=Новый Соответствие; //хранилище флагов: Номенклатура+Количество
	СтруктураФлага=""; //набор полей Номенклатура Количество
	МассивСтрок=Новый Массив; //это для проставления флага
	Для Каждого СтрокаТЧ Из ТабУТ Цикл
		Если СтрокаТЧ.ПредставлениеДокумента<>СтрокаФлаг Тогда
			//Надо что-то делать...
			Если СтрокаФлаг="" Тогда
				//Только если стока не пустая. Тогда это начало работы
				СтрокаФлаг=СтрокаТЧ.ПредставлениеДокумента;
			Иначе
				ЗначФлага=СоотвФлагов.Найти(СтруктураФлага);
				Если ЗначФлага=Неопределено Тогда
					//Это новый флаг
					СоотвФлагов.Добавить(СтруктураФлага);
					Для Каждого Эл Из МассивСтрок Цикл
						Эл.ФлагСверки=СчФлагов;
					КонецЦикла;
					СчФлагов=СчФлагов+1;
				Иначе
					Для Каждого Эл Из МассивСтрок Цикл
						Эл.ФлагСверки=ЗначФлага;
					КонецЦикла;
				КонецЕсли;
				МассивСтрок.Очистить();
				СтруктураФлага=""; //набор полей Номенклатура Количество
				СтрокаФлаг=СтрокаТЧ.ПредставлениеДокумента;
			КонецЕсли;
		КонецЕсли;
		СтруктураФлага=СтруктураФлага+Строка(СтрокаТЧ.Номенклатура)+" "+Формат(СтрокаТЧ.Количество,"ЧЦ=15; ЧДЦ=3; ЧН=; ЧГ=")+"; ";
		МассивСтрок.Добавить(СтрокаТЧ);
	КонецЦикла;
	//Обрабатываем последние данные
	ЗначФлага=СоотвФлагов.Найти(СтруктураФлага);
	Если ЗначФлага=Неопределено Тогда
		//Это новый флаг
		СоотвФлагов.Добавить(СтруктураФлага);
		Для Каждого Эл Из МассивСтрок Цикл
			Эл.ФлагСверки=СчФлагов;
		КонецЦикла;
		СчФлагов=СчФлагов+1;
	Иначе
		Для Каждого Эл Из МассивСтрок Цикл
			Эл.ФлагСверки=ЗначФлага;
		КонецЦикла;
	КонецЕсли;
	Состояние("");
	//3. Последовательность вывода шапки
	МассивДляШапки=Новый Массив;
	МассивДляШапки.Добавить("Номер");
	МассивДляШапки.Добавить("Дата");
	МассивДляШапки.Добавить("НомерВходящегоДокумента");
	МассивДляШапки.Добавить("ДатаВходящегоДокумента");
	МассивДляШапки.Добавить("Проведен");
	МассивДляШапки.Добавить("Контрагент");
	МассивДляШапки.Добавить("Грузоотправитель");
	МассивДляШапки.Добавить("СуммаДокумента");
	
	//4. Формируем запрос по данныем
	
	Запрос.Текст="ВЫБРАТЬ
	             |	ТаблицаДанных.Номер КАК Номер,
	             |	ТаблицаДанных.Дата КАК Дата,
	             |	ТаблицаДанных.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	             |	ТаблицаДанных.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	             |	ВЫРАЗИТЬ(""Поступление товаров и услуг "" + ТаблицаДанных.Номер КАК СТРОКА(100)) КАК Ссылка,
	             |	ТаблицаДанных.Проведен КАК Проведен,
	             |	ТаблицаДанных.СуммаДокумента КАК СуммаДокумента,
	             |	ТаблицаДанных.КонтрагентСсылка КАК Контрагент,
	             |	ЕСТЬNULL(ТаблицаДанных.ГрузоотправительСсылка, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Грузоотправитель,
	             |	ТаблицаДанных.ФлагСверки КАК ФлагСверки
	             |ПОМЕСТИТЬ ДанныеУТ
	             |ИЗ
	             |	&ТаблицаДанныхУТ КАК ТаблицаДанных
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ТаблицаДанных.Номер КАК Номер,
	             |	ТаблицаДанных.Дата КАК Дата,
	             |	ТаблицаДанных.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	             |	ТаблицаДанных.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	             |	ВЫРАЗИТЬ(ТаблицаДанных.ПредставлениеДокумента КАК СТРОКА(100)) КАК Ссылка,
	             |	ТаблицаДанных.Проведен КАК Проведен,
	             |	ТаблицаДанных.СуммаДокумента КАК СуммаДокумента,
	             |	ТаблицаДанных.КонтрагентСсылка КАК Контрагент,
	             |	ТаблицаДанных.ГрузоотправительСсылка КАК Грузоотправитель,
	             |	ТаблицаДанных.ФлагСверки КАК ФлагСверки
	             |ПОМЕСТИТЬ ДанныеБУ
	             |ИЗ
	             |	&ТаблицаДанныхБУ КАК ТаблицаДанных
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеУТ.Ссылка, ДанныеБУ.Ссылка) КАК СТРОКА(100)) КАК ПредставлениеДокумента,
	             |	ДанныеУТ.Номер КАК НомерУТ,
	             |	ДанныеБУ.Номер КАК НомерБУ,
	             |	ДанныеУТ.Дата КАК ДатаУТ,
	             |	ДанныеБУ.Дата КАК ДатаБУ,
	             |	ДанныеУТ.НомерВходящегоДокумента КАК НомерВходящегоДокументаУТ,
	             |	ДанныеУТ.ДатаВходящегоДокумента КАК ДатаВходящегоДокументаУТ,
	             |	ДанныеБУ.НомерВходящегоДокумента КАК НомерВходящегоДокументаБУ,
	             |	ДанныеБУ.ДатаВходящегоДокумента КАК ДатаВходящегоДокументаБУ,
	             |	ДанныеУТ.Проведен КАК ПроведенУТ,
	             |	ДанныеБУ.Проведен КАК ПроведенБУ,
	             |	ДанныеУТ.СуммаДокумента КАК СуммаДокументаУТ,
	             |	ДанныеБУ.СуммаДокумента КАК СуммаДокументаБУ,
	             |	ДанныеУТ.Контрагент КАК КонтрагентУТ,
	             |	ДанныеБУ.Контрагент КАК КонтрагентБУ,
	             |	ДанныеУТ.Грузоотправитель КАК ГрузоотправительУТ,
	             |	ДанныеБУ.Грузоотправитель КАК ГрузоотправительБУ,
	             |	ВЫБОР
	             |		КОГДА ДанныеУТ.Номер = ДанныеБУ.Номер
	             |				И НАЧАЛОПЕРИОДА(ДанныеУТ.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(ДанныеБУ.Дата, ДЕНЬ)
	             |				И ДанныеУТ.Проведен = ДанныеБУ.Проведен
	             |				И ДанныеУТ.СуммаДокумента = ДанныеБУ.СуммаДокумента
	             |				И ДанныеУТ.Контрагент = ДанныеБУ.Контрагент
	             |				И ДанныеУТ.Грузоотправитель = ДанныеБУ.Грузоотправитель
	             |				И ДанныеУТ.НомерВходящегоДокумента = ДанныеБУ.НомерВходящегоДокумента
	             |				И ДанныеУТ.ДатаВходящегоДокумента = ДанныеБУ.ДатаВходящегоДокумента
	             |			ТОГДА ЛОЖЬ
	             |		ИНАЧЕ ИСТИНА
	             |	КОНЕЦ КАК ЕстьРасхождение,
	             |	ЕСТЬNULL(ДанныеУТ.ФлагСверки, ДанныеБУ.ФлагСверки) КАК ФлагСверки,
	             |	ЕСТЬNULL(ДанныеУТ.Ссылка, ДанныеБУ.Ссылка) КАК Документ
	             |ИЗ
	             |	ДанныеУТ КАК ДанныеУТ
	             |		ПОЛНОЕ СОЕДИНЕНИЕ ДанныеБУ КАК ДанныеБУ
	             |		ПО ДанныеУТ.ФлагСверки = ДанныеБУ.ФлагСверки
	             |			И ДанныеУТ.Номер = ДанныеБУ.Номер
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ФлагСверки,
	             |	ПредставлениеДокумента
	             |ИТОГИ
	             |	МАКСИМУМ(НомерУТ),
	             |	МАКСИМУМ(НомерБУ),
	             |	МАКСИМУМ(ДатаУТ),
	             |	МАКСИМУМ(ДатаБУ),
	             |	МАКСИМУМ(НомерВходящегоДокументаУТ),
	             |	МАКСИМУМ(ДатаВходящегоДокументаУТ),
	             |	МАКСИМУМ(НомерВходящегоДокументаБУ),
	             |	МАКСИМУМ(ДатаВходящегоДокументаБУ),
	             |	МАКСИМУМ(ПроведенУТ),
	             |	МАКСИМУМ(ПроведенБУ),
	             |	МАКСИМУМ(СуммаДокументаУТ),
	             |	МАКСИМУМ(СуммаДокументаБУ),
	             |	МАКСИМУМ(КонтрагентУТ),
	             |	МАКСИМУМ(КонтрагентБУ),
	             |	МАКСИМУМ(ГрузоотправительУТ),
	             |	МАКСИМУМ(ГрузоотправительБУ),
	             |	МАКСИМУМ(ЕстьРасхождение),
	             |	МАКСИМУМ(Документ)
	             |ПО
	             |	ФлагСверки,
	             |	ПредставлениеДокумента";
	Запрос.УстановитьПараметр("ТаблицаДанныхУТ",ТабУТ);
	Запрос.УстановитьПараметр("ТаблицаДанныхБУ",ТабБУ);
	
	Результат=Запрос.Выполнить();
	
	//Начинаем вывод
	ТабДокумент	=Новый ТабличныйДокумент;
	ТабДок		=Новый ТабличныйДокумент;
	
	Макет=ПолучитьМакет("Макет");
	Область=Макет.ПолучитьОбласть("ШапкаОтчета");
	Область.Параметры.ИнфоОСверке=ИнформацияОСверке;
	ТабДокумент.Вывести(Область);
	ТабДокумент.НачатьАвтогруппировкуСтрок();
	ВыборкаСверок=Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ОбластьДок=Макет.ПолучитьОбласть("СтрокаДокумент");
	Пока ВыборкаСверок.Следующий() Цикл
		Если Не ВыборкаСверок.ЕстьРасхождение И ТолькоРасхождения Тогда
			Продолжить;
		КонецЕсли;
		ОбластьДок.Параметры.ПредставлениеДокумента=Строка(ВыборкаСверок.ФлагСверки+1);
		ОбластьДок.Параметры.ТабличнаяЧасть=СоотвФлагов[ВыборкаСверок.ФлагСверки];
		ТабДокумент.Вывести(ОбластьДок,1,,Ложь);
		ОбластьДок=Макет.ПолучитьОбласть("СтрокаДокумент");
		ВыборкаДокументов=ВыборкаСверок.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДокументов.Следующий() Цикл
			Если Не ВыборкаДокументов.ЕстьРасхождение И ТолькоРасхождения Тогда
				Продолжить;
			КонецЕсли;
			ОбластьДок.Параметры.ПредставлениеДокумента=ВыборкаДокументов.ПредставлениеДокумента;
			ОбластьДок.Параметры.ТабличнаяЧасть=ВыборкаДокументов.Документ;
			ТабДокумент.Вывести(ОбластьДок,2);
			
			ОбластьДок.Параметры.ПредставлениеДокумента="Шапка";
			ТабДокумент.Вывести(ОбластьДок,3,,Ложь);
			
			
			ТабДок=Новый ТабличныйДокумент;
			ТабДок.НачатьАвтогруппировкуКолонок();
			ОбластьПоказатель=Макет.ПолучитьОбласть("СтрокаПоказатели|КолонкаШапка");
			ТабДок.Присоединить(ОбластьПоказатель);
			ОбластьПоказатель=Макет.ПолучитьОбласть("СтрокаПоказатели|КолонкаПоказатели");
			Для Каждого Эл Из МассивДляШапки Цикл
				ОбластьПоказатель.Параметры.ПоказательШапки=Эл;
				ОбластьПоказатель.Параметры.ПоказательУТ=ВыборкаДокументов[Эл+"УТ"];
				ОбластьПоказатель.Параметры.ПоказательБП=ВыборкаДокументов[Эл+"БУ"];
				ТабДок.Присоединить(ОбластьПоказатель);
			КонецЦикла;
			ТабДок.ЗакончитьАвтогруппировкуКолонок();
			ТабДокумент.Вывести(ТабДок,4,"1. Шапка",Истина);
		КонецЦикла;
	КонецЦикла;
	ТабДокумент.ЗакончитьАвтогруппировкуСтрок();
	ТабДокумент.ТолькоПросмотр=Истина;
	ТабДокумент.Показать("Реализации");
КонецПроцедуры

//Вспомогательные
Процедура СформироватьИнфоОСверке()
	Если ЗначениеЗаполнено(НачПериода) И ЗначениеЗаполнено(КонПериода) И ЗначениеЗаполнено(Организация) Тогда
		ИнформацияОСверке="Сверка документов между УТ и БП за период "+ПредставлениеПериода(НачПериода,КонПериода)+" по организации "+Организация.Наименование+". "+Символы.ПС+?(ВключатьНепроведенные," Непроведенные документы будут включены."," Непроведенные документы будут исключены.");
	Иначе
		ФормаНастроек=ПолучитьФорму("ФормаНастроек");
		ФормаНастроек.ОткрытьМодально();
		СформироватьИнфоОСверке();
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьКонтрагента(Наименование, ИНН)
	ЗапросПоиск=Новый ПостроительЗапроса;
	ЗапросПоиск.Текст="ВЫБРАТЬ
	                  |	Контрагенты.Ссылка
	                  |ИЗ
	                  |	Справочник.Контрагенты КАК Контрагенты
	                  |ГДЕ
	                  |	Контрагенты.Наименование = &Наименование
	                  |{ГДЕ
	                  |	Контрагенты.ИНН КАК ИНН}";
	ЗапросПоиск.Параметры.Вставить("Наименование",Наименование);
	Если ЗначениеЗаполнено(ИНН) Тогда
		ЗапросПоиск.Отбор.Добавить("ИНН");
		ЗапросПоиск.Отбор.ИНН.Установить(Инн);
	КонецЕсли;
	Результат=ЗапросПоиск.ПолучитьЗапрос().Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.Контрагенты.ПустаяСсылка();
	Иначе
		Выборка=Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;
КонецФункции