
// ========================= ПЕРЕМЕННЫЕ ПРОГРАММЫ ====================================//

Перем ТаблицаПрав Экспорт;              // содержит текущие права с учетом изменений
Перем ИсходнаяТаблицаПрав Экспорт;      // содержит исходные (неизмененные) права 
Перем ТаблицаИзмененныхПрав Экспорт;    // содержит только права, которые изменены пользователем

Перем ПорядокРасположенияПрав Экспорт;  //

Перем СпособГруппировки Экспорт;             // определяет группировки по правам
Перем СхемаКомпоновкиДанныхПоПравам Экспорт; // схема, используемая для отчета по правам
Перем СтруктураДоступныхЗначенийДляОтборов Экспорт; // определяет списки возможных значений для отборов в отчете

// списки объектов для интерактивной работы с пользователем при отборе данных
Перем СписокОбъектовМетаданных Экспорт; 
Перем СписокПользователейИБ Экспорт;
Перем СписокРолей Экспорт;

Перем ТаблицаЗависимостиПрав Экспорт; // определяет зависимости между правами
Перем ПараметрыВыгрузкиXML Экспорт;   // определяет написание прав и объектов на англ. языке для выгрузки в xml-файлы
Перем ЗависимыеПрава Экспорт;         // массив для оперативной работы по изменению зависимых прав в режиме редактирования
Перем ВсеПраваКонфигурации Экспорт;   // содержит все возможные права на объекты метаданных, определяемые платформой 

// переменные, касающиеся редактирования прав
Перем МожноРедактироватьПрава Экспорт;
Перем ВключенРежимРедактированияПрав Экспорт;

Перем ЕстьСправочникПользователей Экспорт; // признак наличия в конфигурации справочника "Пользователи"
Перем ЭтоПлатформа83 Экспорт; // признак работы конфигурации на платформе 8.3
Перем ПользователиИБ Экспорт; // список пользователей информационной базы
Перем РолиКонфигурации Экспорт; // список всех ролей конфигурации

Перем МассивПрограммныхПрав Экспорт; // содержит имена программных прав платформы
Перем МассивПравРЛС Экспорт; // содержит имена прав, в которых могут использоваться РЛС
Перем МассивОбъектовБезРЛС Экспорт; // содержит перечисление всех объектов метаданных, в которых невозможно использовать РЛС 

Перем ФормироватьСравнение Экспорт;

// ========================= ИНИЦИАЛИЗАЦИЯ ПЕРЕМЕННЫХ ====================================//

ФормироватьСравнение = Истина;

// списки доступных значений группировок отчета
СписокОбъектовМетаданных = Новый СписокЗначений;
СписокПользователейИБ    = Новый СписокЗначений;
СписокРолей              = Новый СписокЗначений;

МассивПравРЛС = Новый Массив;
МассивПравРЛС.Добавить("Чтение");
МассивПравРЛС.Добавить("Добавление");
МассивПравРЛС.Добавить("Изменение");
МассивПравРЛС.Добавить("Удаление");

МассивОбъектовБезРЛС = Новый Массив;
МассивОбъектовБезРЛС.Добавить("Подсистемы");
МассивОбъектовБезРЛС.Добавить("ПараметрыСеанса");
МассивОбъектовБезРЛС.Добавить("КритерииОтбора");
МассивОбъектовБезРЛС.Добавить("ОбщиеФормы");
МассивОбъектовБезРЛС.Добавить("ОбщиеКоманды");
МассивОбъектовБезРЛС.Добавить("Интерфейсы");
МассивОбъектовБезРЛС.Добавить("Константы");
МассивОбъектовБезРЛС.Добавить("Отчеты");
МассивОбъектовБезРЛС.Добавить("Обработки");

МассивПрограммныхПрав = Новый Массив;
Для каждого ПравоРЛС Из МассивПравРЛС Цикл
    МассивПрограммныхПрав.Добавить(ПравоРЛС);
КонецЦикла;
МассивПрограммныхПрав.Добавить("Проведение");
МассивПрограммныхПрав.Добавить("ОтменаПроведения");

РолиКонфигурации = Метаданные.Роли;

ДеревоПодсистемКонфигурации = Новый ДеревоЗначений;
ДеревоПодсистемКонфигурации.Колонки.Добавить("Пометка", Новый ОписаниеТипов("Булево"), " ");
ДеревоПодсистемКонфигурации.Колонки.Добавить("МетаданныеПодсистемы");
ДеревоПодсистемКонфигурации.Колонки.Добавить("СинонимПодсистемы",,"Подсистема");

СхемаКомпоновкиДанныхПоПравам        = Новый СхемаКомпоновкиДанных;
СпособГруппировки                    = "ПользователиИБРоли"; 
СтруктураДоступныхЗначенийДляОтборов = Новый Структура;

ВключенРежимРедактированияПрав = Ложь;
МожноРедактироватьПрава        = Ложь;
ТаблицаИзмененныхПрав          = Новый ТаблицаЗначений;
ТаблицаИзмененныхПрав.Колонки.Добавить("ОбъектыКонфигурации");

ЕстьСправочникПользователей = Метаданные.Справочники.Найти("Пользователи") <> Неопределено;
СисИнфо = Новый СистемнаяИнформация;
ЭтоПлатформа83 = Число(СтрЗаменить(Лев(СисИнфо.ВерсияПриложения, 3), ".", "")) >= 83;

// заполним таблицу по зависимым правам
ТаблицаЗависимостиПрав = Новый ТаблицаЗначений;
ТаблицаЗависимостиПрав.Колонки.Добавить("Право");
ТаблицаЗависимостиПрав.Колонки.Добавить("ЗависимоеПраво");
МакетТаблицыЗависимостиПрав = ПолучитьМакет("ТаблицаЗависимостиПрав");
Для НомСтр = 3 По МакетТаблицыЗависимостиПрав.ВысотаТаблицы Цикл
	ПравоСтрокой          = СокрЛП(МакетТаблицыЗависимостиПрав.Область(НомСтр, 2).Текст);
	ЗависимоеПравоСтрокой = СокрЛП(МакетТаблицыЗависимостиПрав.Область(НомСтр, 3).Текст);
	Если НЕ ПустаяСтрока(ПравоСтрокой) И НЕ ПустаяСтрока(ЗависимоеПравоСтрокой) Тогда
		СтрокаЗависимостиПрав = ТаблицаЗависимостиПрав.Добавить();
		СтрокаЗависимостиПрав.Право          = ПравоСтрокой;
		СтрокаЗависимостиПрав.ЗависимоеПраво = ЗависимоеПравоСтрокой;
	КонецЕсли;
КонецЦикла;

// заполним таблицу с параметрами выгрузки прав в xml-файл
ПараметрыВыгрузкиXML = Новый ТаблицаЗначений;
ПараметрыВыгрузкиXML.Колонки.Добавить("НаРусскомЯзыке");
ПараметрыВыгрузкиXML.Колонки.Добавить("НаАнглийскомЯзыке");
ВсеПраваКонфигурации = Новый Массив;
МакетТаблицыПараметровВыгрузки = ПолучитьМакет("ДанныеДляЗаписиXML");
Для НомСтр = 3 По МакетТаблицыПараметровВыгрузки.ВысотаТаблицы Цикл
	НаРусскомЯзыке = СокрЛП(МакетТаблицыПараметровВыгрузки.Область(НомСтр, 2).Текст);
	НаАнглийскомЯзыке = СокрЛП(МакетТаблицыПараметровВыгрузки.Область(НомСтр, 3).Текст);
	Если НЕ ПустаяСтрока(НаРусскомЯзыке) И НЕ ПустаяСтрока(НаАнглийскомЯзыке) Тогда
		СтрокаВыгрузкиXML = ПараметрыВыгрузкиXML.Добавить();
		СтрокаВыгрузкиXML.НаРусскомЯзыке    = НаРусскомЯзыке;
		СтрокаВыгрузкиXML.НаАнглийскомЯзыке = НаАнглийскомЯзыке;
		Если НомСтр >= 28 Тогда
			ВсеПраваКонфигурации.Добавить(СтрокаВыгрузкиXML.НаРусскомЯзыке);
		КонецЕсли;	
	КонецЕсли;
КонецЦикла;
 