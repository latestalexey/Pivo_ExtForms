
Процедура КнопкаВыполнитьНажатие(Кнопка)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПеремещениеТоваров.Ссылка
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
		|ГДЕ
		|	НЕ ПеремещениеТоваров.ПометкаУдаления
		|	И ПеремещениеТоваров.ДатаОтгрузки МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаОтгрузки, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаОтгрузки, ДЕНЬ)
		//|	И НАЧАЛОПЕРИОДА(ПеремещениеТоваров.Дата, ДЕНЬ) < НАЧАЛОПЕРИОДА(ПеремещениеТоваров.ДатаОтгрузки, ДЕНЬ)
		|	И ПеремещениеТоваров.СкладПолучатель В ИЕРАРХИИ(&Магазины)";

	Запрос.УстановитьПараметр("Магазины",		Справочники.Склады.НайтиПоКоду("000000103"));
    ДатаРаботы=НачПериода;
	Пока ДатаРаботы<=КонПериода Цикл
		ТекДата=ДатаРаботы;
		
		Запрос.УстановитьПараметр("ДатаОтгрузки",ДатаРаботы);
		Результат = Запрос.Выполнить();
		Индикатор=0;
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		ЭлементыФормы.Индикатор.МаксимальноеЗначение=ВыборкаДетальныеЗаписи.Количество();
		ВремяПеремещения=НачалоДня(ДатаРаботы)+3*60*60;
		ВремяРасхОрдера=НачалоДня(ДатаРаботы)+3*60*60+10*60;
		ВремяПрихОрдера=НачалоДня(ДатаРаботы)+3*60*60+20*60;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Индикатор=Индикатор+1;
			Об=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			Если Об.Дата<>ВремяПеремещения Тогда
				Об.Дата=ВремяПеремещения;
				Если Об.Проведен Тогда
					Об.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Неоперативный);
				Иначе
					Об.Записать(РежимЗаписиДокумента.Запись);
				КонецЕсли;
			КонецЕсли;
			ПодчинДоки=КритерииОтбора.СвязанныеДокументы.Найти(Об.Ссылка);
			Для Каждого Ссылка из ПодчинДоки Цикл
				Если ТипЗнч(Ссылка)=Тип("ДокументСсылка.ПриходныйОрдерНаТовары") Тогда
					Об=Ссылка.ПолучитьОбъект();
					Если  Об.Дата<>ВремяПрихОрдера Тогда
						Об.Дата=ВремяПрихОрдера;
						Если Об.Проведен Тогда
							Об.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Неоперативный);
						Иначе
							Об.Записать(РежимЗаписиДокумента.Запись);
						КонецЕсли;
					КонецЕсли;
				ИначеЕсли ТипЗнч(Ссылка)=Тип("ДокументСсылка.РасходныйОрдерНаТовары") Тогда
					Об=Ссылка.ПолучитьОбъект();
					Если Об.Дата<>ВремяРасхОрдера Тогда
						Об.Дата=ВремяРасхОрдера;
						Если Об.Проведен Тогда
							Об.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Неоперативный);
						Иначе
							Об.Записать(РежимЗаписиДокумента.Запись);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		ДатаРаботы=КонецДня(ДатаРаботы)+1;
	КонецЦикла;
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ОсновныеДействияФормыДоп(Кнопка)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПеремещениеТоваров.Ссылка КАК Перемещение,
		|	РасходныйОрдерНаТовары.Ссылка КАК РОТ,
		|	ПриходныйОрдерНаТовары.Ссылка КАК ПОТ
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
		|		ПО (РасходныйОрдерНаТовары.ДокументПередачи = ПеремещениеТоваров.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
		|		ПО ПеремещениеТоваров.Ссылка = ПриходныйОрдерНаТовары.ДокументПеремещения
		|ГДЕ
		|	(ПеремещениеТоваров.Дата >= РасходныйОрдерНаТовары.Дата
		|			ИЛИ ПриходныйОрдерНаТовары.Дата <= РасходныйОрдерНаТовары.Дата)
		|	И ПеремещениеТоваров.Дата >= &Дата
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПеремещениеТоваров.Дата";

	Запрос.УстановитьПараметр("Дата", НачПериода);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
    ЭлементыФормы.Индикатор.МаксимальноеЗначение=ВыборкаДетальныеЗаписи.Количество();
	Индикатор=0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Индикатор=Индикатор+1;
		Если ВыборкаДетальныеЗаписи.Перемещение.Дата>=ВыборкаДетальныеЗаписи.РОТ.Дата Тогда
			Об=ВыборкаДетальныеЗаписи.РОТ.ПолучитьОбъект();
			Об.Дата=ВыборкаДетальныеЗаписи.Перемещение.Дата+10*60;
			Если Об.Проведен Тогда
				Об.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				Об.Записать();
			КонецЕсли;
		КонецЕсли;
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.РОТ) И ВыборкаДетальныеЗаписи.ПОТ.Дата<=ВыборкаДетальныеЗаписи.РОТ.Дата Тогда
			Об=ВыборкаДетальныеЗаписи.ПОТ.ПолучитьОбъект();
			Об.Дата=ВыборкаДетальныеЗаписи.РОТ.Дата+10*60;
			Если Об.Проведен Тогда
				Об.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				Об.Записать();
			КонецЕсли;
		КонецЕсли;
			
	КонецЦикла;
КонецПроцедуры
